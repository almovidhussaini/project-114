{
	"id": "3a6570cc8ba7fb4109b42bdbb1c1389c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract Staking is ERC20, Ownable, ReentrancyGuard {\n    IERC20 public xoraToken;\n\n    mapping(address => uint256) public balances;\n    mapping(address => uint256) public stakedfromTS;\n\n    uint256 public constant SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n    uint256 public lockTimestamp;\n    uint256 public constant REWARD_RATE = 15;\n    uint256 public constant REARLY_REWARD_RATE = 25;\n    uint256 stakingStart;\n\n    event Staked(address indexed user, uint256 amount);\n    event Withdrawn(address indexed user, uint256 amount);\n    event RewardsClaimed(address indexed user, uint256 reward);\n\n    constructor() Ownable(msg.sender) ERC20(\"staked Xora\", \"stXORA\") {\n        _mint(address(this), 44_280_000 * (10**18));\n        stakingStart = block.timestamp;\n    }\n\n    function stake(uint256 amount , address _xoraToken)  external nonReentrant {\n        xoraToken = IERC20(_xoraToken);\n        xoraToken.transferFrom(msg.sender, address(this), amount);\n        balances[msg.sender] += amount;\n        stakedfromTS[msg.sender] = block.timestamp;\n        lockTimestamp = block.timestamp;\n        emit Staked(msg.sender, amount);\n    }\n\n    function withdraw(uint256 amount ,address _xoraToken) external {\n        require(balances[msg.sender] >= amount, \"Insufficient balance\");\n        clainRewards(amount);\n        xoraToken = IERC20(_xoraToken);\n        balances[msg.sender] -=amount;\n        xoraToken.transfer( msg.sender, amount);\n        emit Withdrawn(msg.sender, amount);\n    } \n\n    function clainRewards(uint256 _amount) public nonReentrant{\n        require(balances[msg.sender] >= _amount, \"you donot have enouph balance\");\n        uint256 reward;\n        uint256 secondsStaked = block.timestamp - stakedfromTS[msg.sender];\n        uint256 secondsStakedFromInitial = block.timestamp - stakingStart;\n        if(secondsStakedFromInitial < (3 * 30 days)){\n             reward = (_amount * REARLY_REWARD_RATE * secondsStaked)/(100 * SECONDS_IN_YEAR);\n        }\n        else {\n             reward = (_amount * REWARD_RATE * secondsStaked)/(100 * SECONDS_IN_YEAR);\n        }\n        require(reward > 0, \"No rewards to claim\");\n        _mint(msg.sender, reward);\n        stakedfromTS[msg.sender] = block.timestamp;\n        emit RewardsClaimed(msg.sender, reward);\n\n    }\n\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 295,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x1821a0e3715b9e068355dd4560f8cedf382c4f96f2d4d3e8dfaa8206d7b393fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d21d325269a45a1bd25c1b00c4d51b34c9574f1874eb6026504fbe88e838511\",\"dweb:/ipfs/QmWBPFEnQ43J29f1ZcMmsz3wUcT9dqvWeoikRhY5SVvWoZ\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Staking.sol": {
				"Staking": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardsClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "REARLY_REWARD_RATE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "REWARD_RATE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SECONDS_IN_YEAR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "clainRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lockTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_xoraToken",
									"type": "address"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakedfromTS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_xoraToken",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "xoraToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Staking.sol\":288:2562  contract Staking is ERC20, Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Staking.sol\":885:1050  constructor() Ownable(msg.sender) ERC20(\"staked Xora\", \"stXORA\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Staking.sol\":907:917  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  0x7374616b656420586f7261000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  0x7374584f52410000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":960:1003  _mint(address(this), 44_280_000 * (10**18)) */\n  tag_18\n    /* \"contracts/Staking.sol\":974:978  this */\n  address\n    /* \"contracts/Staking.sol\":981:1002  44_280_000 * (10**18) */\n  0x24a0a79c2149432b000000\n    /* \"contracts/Staking.sol\":960:965  _mint */\n  shl(0x20, tag_19)\n    /* \"contracts/Staking.sol\":960:1003  _mint(address(this), 44_280_000 * (10**18)) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/Staking.sol\":1028:1043  block.timestamp */\n  timestamp\n    /* \"contracts/Staking.sol\":1013:1025  stakingStart */\n  0x0b\n    /* \"contracts/Staking.sol\":1013:1043  stakingStart = block.timestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":288:2562  contract Staking is ERC20, Ownable, ReentrancyGuard {... */\n  jump(tag_20)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7466:7674  function _mint(address account, uint256 value) internal {... */\ntag_19:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7555:7556  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7536:7557  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7536:7543  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7536:7557  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7532:7623  if (account == address(0)) {... */\n  tag_23\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7609:7610  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7580:7612  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_24\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7532:7623  if (account == address(0)) {... */\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7632:7667  _update(address(0), account, value) */\n  tag_25\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7648:7649  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7652:7659  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7661:7666  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7632:7639  _update */\n  shl(0x20, tag_26)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7632:7667  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7466:7674  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6016:7123  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6121:6122  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6105:6123  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6105:6109  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6105:6123  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6101:6641  if (from == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6257:6262  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6241:6253  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6241:6262  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6101:6641  if (from == address(0)) {... */\n  jump(tag_31)\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6293:6312  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6324  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6330  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6325:6329  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6330  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6293:6330  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6362:6367  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6348:6359  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6348:6367  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6344:6459  if (fromBalance < value) {... */\n  iszero\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6419:6423  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6425:6436  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6438:6443  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6394:6444  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_33\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6344:6459  if (fromBalance < value) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6611:6616  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6597:6608  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6597:6616  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6588  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6594  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6593  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6594  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6616  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6279:6641  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6101:6641  if (from == address(0)) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6669:6670  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6655:6671  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6655:6657  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6655:6671  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6651:7076  if (to == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6839  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6818:6830  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6818:6839  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6651:7076  if (to == address(0)) {... */\n  jump(tag_36)\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7046:7051  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7029:7038  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7029:7042  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7039:7041  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7029:7042  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7029:7051  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6651:7076  if (to == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7106:7108  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7091:7116  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7100:7104  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7091:7116  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7110:7115  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7091:7116  Transfer(from, to, value) */\n  mload(0x40)\n  tag_37\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6016:7123  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_39:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_40:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_41:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_42:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_69:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_70\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_71\n  tag_41\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":714:798   */\ntag_70:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_43:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_44:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_45:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_46:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_76\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_45\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":1429:1468   */\n  tag_77\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_45\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_47:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_48:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_49:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_81\n    /* \"#utility.yul\":1818:1852   */\n  tag_82\n    /* \"#utility.yul\":1827:1851   */\n  tag_83\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_47\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1818:1852   */\n  tag_48\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":1800:1853   */\n  tag_47\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_50:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_51:\n    /* \"#utility.yul\":2056:2095   */\n  tag_86\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_49\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":2117:2208   */\n  tag_87\n    /* \"#utility.yul\":2166:2207   */\n  tag_88\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_50\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_46\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_52:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_53:\n    /* \"#utility.yul\":2377:2409   */\n  tag_91\n  tag_52\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":2418:2483   */\n  tag_92\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_51\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_54:\n    /* \"#utility.yul\":2555:2675   */\ntag_94:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_97\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_53\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_94)\ntag_96:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_55:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_100\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_43\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":2906:2935   */\n  tag_101\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_44\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_102:\n    /* \"#utility.yul\":3133:3213   */\n  tag_103\n    /* \"#utility.yul\":3189:3211   */\n  tag_104\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_44\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_54\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_99:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_56:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_57:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_107\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_56\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_58:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_109\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_57\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_8:\n    /* \"#utility.yul\":3950:3987   */\n  tag_111\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_39\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_112\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_113\n  tag_40\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":4038:4094   */\ntag_112:\n    /* \"#utility.yul\":4118:4156   */\n  tag_114\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_42\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":4203:4270   */\n  tag_115\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_55\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_117\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_118:\n    /* \"#utility.yul\":5144:5211   */\n  tag_119\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_58\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_116)\n    /* \"#utility.yul\":4365:4983   */\ntag_117:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_120\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_43\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_121:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_121)\ntag_123:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_125\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_57\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_124:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_116:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_59:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_60:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_128\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_59\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_61:\n    /* \"#utility.yul\":5555:5579   */\n  tag_130\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_60\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_13:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_132\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_61\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5820:6000   */\ntag_62:\n    /* \"#utility.yul\":5868:5945   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5865:5866   */\n  0x00\n    /* \"#utility.yul\":5858:5946   */\n  mstore\n    /* \"#utility.yul\":5965:5969   */\n  0x11\n    /* \"#utility.yul\":5962:5963   */\n  0x04\n    /* \"#utility.yul\":5955:5970   */\n  mstore\n    /* \"#utility.yul\":5989:5993   */\n  0x24\n    /* \"#utility.yul\":5986:5987   */\n  0x00\n    /* \"#utility.yul\":5979:5994   */\n  revert\n    /* \"#utility.yul\":6006:6197   */\ntag_30:\n    /* \"#utility.yul\":6046:6049   */\n  0x00\n    /* \"#utility.yul\":6065:6085   */\n  tag_135\n    /* \"#utility.yul\":6083:6084   */\n  dup3\n    /* \"#utility.yul\":6065:6085   */\n  tag_47\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":6060:6085   */\n  swap2\n  pop\n    /* \"#utility.yul\":6099:6119   */\n  tag_136\n    /* \"#utility.yul\":6117:6118   */\n  dup4\n    /* \"#utility.yul\":6099:6119   */\n  tag_47\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":6094:6119   */\n  swap3\n  pop\n    /* \"#utility.yul\":6142:6143   */\n  dup3\n    /* \"#utility.yul\":6139:6140   */\n  dup3\n    /* \"#utility.yul\":6135:6144   */\n  add\n    /* \"#utility.yul\":6128:6144   */\n  swap1\n  pop\n    /* \"#utility.yul\":6163:6166   */\n  dup1\n    /* \"#utility.yul\":6160:6161   */\n  dup3\n    /* \"#utility.yul\":6157:6167   */\n  gt\n    /* \"#utility.yul\":6154:6190   */\n  iszero\n  tag_137\n  jumpi\n    /* \"#utility.yul\":6170:6188   */\n  tag_138\n  tag_62\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":6154:6190   */\ntag_137:\n    /* \"#utility.yul\":6006:6197   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6203:6321   */\ntag_63:\n    /* \"#utility.yul\":6290:6314   */\n  tag_140\n    /* \"#utility.yul\":6308:6313   */\n  dup2\n    /* \"#utility.yul\":6290:6314   */\n  tag_47\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":6285:6288   */\n  dup3\n    /* \"#utility.yul\":6278:6315   */\n  mstore\n    /* \"#utility.yul\":6203:6321   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6327:6769   */\ntag_34:\n    /* \"#utility.yul\":6476:6480   */\n  0x00\n    /* \"#utility.yul\":6514:6516   */\n  0x60\n    /* \"#utility.yul\":6503:6512   */\n  dup3\n    /* \"#utility.yul\":6499:6517   */\n  add\n    /* \"#utility.yul\":6491:6517   */\n  swap1\n  pop\n    /* \"#utility.yul\":6527:6598   */\n  tag_142\n    /* \"#utility.yul\":6595:6596   */\n  0x00\n    /* \"#utility.yul\":6584:6593   */\n  dup4\n    /* \"#utility.yul\":6580:6597   */\n  add\n    /* \"#utility.yul\":6571:6577   */\n  dup7\n    /* \"#utility.yul\":6527:6598   */\n  tag_61\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":6608:6680   */\n  tag_143\n    /* \"#utility.yul\":6676:6678   */\n  0x20\n    /* \"#utility.yul\":6665:6674   */\n  dup4\n    /* \"#utility.yul\":6661:6679   */\n  add\n    /* \"#utility.yul\":6652:6658   */\n  dup6\n    /* \"#utility.yul\":6608:6680   */\n  tag_63\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":6690:6762   */\n  tag_144\n    /* \"#utility.yul\":6758:6760   */\n  0x40\n    /* \"#utility.yul\":6747:6756   */\n  dup4\n    /* \"#utility.yul\":6743:6761   */\n  add\n    /* \"#utility.yul\":6734:6740   */\n  dup5\n    /* \"#utility.yul\":6690:6762   */\n  tag_63\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":6327:6769   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6775:6997   */\ntag_38:\n    /* \"#utility.yul\":6868:6872   */\n  0x00\n    /* \"#utility.yul\":6906:6908   */\n  0x20\n    /* \"#utility.yul\":6895:6904   */\n  dup3\n    /* \"#utility.yul\":6891:6909   */\n  add\n    /* \"#utility.yul\":6883:6909   */\n  swap1\n  pop\n    /* \"#utility.yul\":6919:6990   */\n  tag_146\n    /* \"#utility.yul\":6987:6988   */\n  0x00\n    /* \"#utility.yul\":6976:6985   */\n  dup4\n    /* \"#utility.yul\":6972:6989   */\n  add\n    /* \"#utility.yul\":6963:6969   */\n  dup5\n    /* \"#utility.yul\":6919:6990   */\n  tag_63\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":6775:6997   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Staking.sol\":288:2562  contract Staking is ERC20, Ownable, ReentrancyGuard {... */\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Staking.sol\":288:2562  contract Staking is ERC20, Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xb544bf83\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf7c899a1\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7acb7757\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8879f730\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x23b872dd\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x27e235e3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3bc46a3f\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5997bb37\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5dcc9391\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0xf714ce\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0cd43d5d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Staking.sol\":1425:1770  function withdraw(uint256 amount ,address _xoraToken) external {... */\n    tag_3:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":625:672  uint256 public constant REARLY_REWARD_RATE = 25 */\n    tag_6:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":376:419  mapping(address => uint256) public balances */\n    tag_9:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":1777:2559  function clainRewards(uint256 _amount) public nonReentrant{... */\n    tag_11:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/Staking.sol\":579:619  uint256 public constant REWARD_RATE = 15 */\n    tag_12:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":479:539  uint256 public constant SECONDS_IN_YEAR = 365 * 24 * 60 * 60 */\n    tag_13:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      stop\n        /* \"contracts/Staking.sol\":1056:1419  function stake(uint256 amount , address _xoraToken)  external nonReentrant {... */\n    tag_16:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      stop\n        /* \"contracts/Staking.sol\":425:472  mapping(address => uint256) public stakedfromTS */\n    tag_17:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_18:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_19:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_20:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":545:573  uint256 public lockTimestamp */\n    tag_21:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_22:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      tag_103\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_23:\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n    tag_105:\n      stop\n        /* \"contracts/Staking.sol\":346:369  IERC20 public xoraToken */\n    tag_24:\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":1425:1770  function withdraw(uint256 amount ,address _xoraToken) external {... */\n    tag_31:\n        /* \"contracts/Staking.sol\":1530:1536  amount */\n      dup2\n        /* \"contracts/Staking.sol\":1506:1514  balances */\n      0x08\n        /* \"contracts/Staking.sol\":1506:1526  balances[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":1515:1525  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":1506:1526  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Staking.sol\":1506:1536  balances[msg.sender] >= amount */\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":1498:1561  require(balances[msg.sender] >= amount, \"Insufficient balance\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"contracts/Staking.sol\":1571:1591  clainRewards(amount) */\n      tag_116\n        /* \"contracts/Staking.sol\":1584:1590  amount */\n      dup3\n        /* \"contracts/Staking.sol\":1571:1583  clainRewards */\n      tag_66\n        /* \"contracts/Staking.sol\":1571:1591  clainRewards(amount) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/Staking.sol\":1620:1630  _xoraToken */\n      dup1\n        /* \"contracts/Staking.sol\":1601:1610  xoraToken */\n      0x07\n      0x00\n        /* \"contracts/Staking.sol\":1601:1631  xoraToken = IERC20(_xoraToken) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":1664:1670  amount */\n      dup2\n        /* \"contracts/Staking.sol\":1641:1649  balances */\n      0x08\n        /* \"contracts/Staking.sol\":1641:1661  balances[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":1650:1660  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":1641:1661  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Staking.sol\":1641:1670  balances[msg.sender] -=amount */\n      dup3\n      dup3\n      sload\n      tag_117\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":1680:1689  xoraToken */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":1680:1698  xoraToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Staking.sol\":1700:1710  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":1712:1718  amount */\n      dup5\n        /* \"contracts/Staking.sol\":1680:1719  xoraToken.transfer( msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap3\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_122:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      pop\n        /* \"contracts/Staking.sol\":1744:1754  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":1734:1763  Withdrawn(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n        /* \"contracts/Staking.sol\":1756:1762  amount */\n      dup4\n        /* \"contracts/Staking.sol\":1734:1763  Withdrawn(msg.sender, amount) */\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Staking.sol\":1425:1770  function withdraw(uint256 amount ,address _xoraToken) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_129\n      swap1\n      tag_128\n      jump\t// in\n    tag_129:\n      dup1\n      iszero\n      tag_130\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_131\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_130)\n    tag_131:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_132:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_132\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":625:672  uint256 public constant REARLY_REWARD_RATE = 25 */\n    tag_43:\n        /* \"contracts/Staking.sol\":670:672  25 */\n      0x19\n        /* \"contracts/Staking.sol\":625:672  uint256 public constant REARLY_REWARD_RATE = 25 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":376:419  mapping(address => uint256) public balances */\n    tag_57:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":1777:2559  function clainRewards(uint256 _amount) public nonReentrant{... */\n    tag_66:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_147\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_148\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_147:\n        /* \"contracts/Staking.sol\":1877:1884  _amount */\n      dup1\n        /* \"contracts/Staking.sol\":1853:1861  balances */\n      0x08\n        /* \"contracts/Staking.sol\":1853:1873  balances[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":1862:1872  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":1853:1873  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Staking.sol\":1853:1884  balances[msg.sender] >= _amount */\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":1845:1918  require(balances[msg.sender] >= _amount, \"you donot have enouph balance\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"contracts/Staking.sol\":1928:1942  uint256 reward */\n      0x00\n        /* \"contracts/Staking.sol\":1952:1973  uint256 secondsStaked */\n      dup1\n        /* \"contracts/Staking.sol\":1994:2006  stakedfromTS */\n      0x09\n        /* \"contracts/Staking.sol\":1994:2018  stakedfromTS[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2007:2017  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":1994:2018  stakedfromTS[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Staking.sol\":1976:1991  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":1976:2018  block.timestamp - stakedfromTS[msg.sender] */\n      tag_153\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_153:\n        /* \"contracts/Staking.sol\":1952:2018  uint256 secondsStaked = block.timestamp - stakedfromTS[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2028:2060  uint256 secondsStakedFromInitial */\n      0x00\n        /* \"contracts/Staking.sol\":2081:2093  stakingStart */\n      sload(0x0b)\n        /* \"contracts/Staking.sol\":2063:2078  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":2063:2093  block.timestamp - stakingStart */\n      tag_154\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_154:\n        /* \"contracts/Staking.sol\":2028:2093  uint256 secondsStakedFromInitial = block.timestamp - stakingStart */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2134:2145  3 * 30 days */\n      0x76a700\n        /* \"contracts/Staking.sol\":2106:2130  secondsStakedFromInitial */\n      dup2\n        /* \"contracts/Staking.sol\":2106:2146  secondsStakedFromInitial < (3 * 30 days) */\n      lt\n        /* \"contracts/Staking.sol\":2103:2364  if(secondsStakedFromInitial < (3 * 30 days)){... */\n      iszero\n      tag_155\n      jumpi\n        /* \"contracts/Staking.sol\":521:539  365 * 24 * 60 * 60 */\n      0x01e13380\n        /* \"contracts/Staking.sol\":2219:2222  100 */\n      0x64\n        /* \"contracts/Staking.sol\":2219:2240  100 * SECONDS_IN_YEAR */\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"contracts/Staking.sol\":2203:2216  secondsStaked */\n      dup3\n        /* \"contracts/Staking.sol\":670:672  25 */\n      0x19\n        /* \"contracts/Staking.sol\":2172:2179  _amount */\n      dup7\n        /* \"contracts/Staking.sol\":2172:2200  _amount * REARLY_REWARD_RATE */\n      tag_158\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_158:\n        /* \"contracts/Staking.sol\":2172:2216  _amount * REARLY_REWARD_RATE * secondsStaked */\n      tag_159\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_159:\n        /* \"contracts/Staking.sol\":2171:2241  (_amount * REARLY_REWARD_RATE * secondsStaked)/(100 * SECONDS_IN_YEAR) */\n      tag_160\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n        /* \"contracts/Staking.sol\":2162:2241  reward = (_amount * REARLY_REWARD_RATE * secondsStaked)/(100 * SECONDS_IN_YEAR) */\n      swap3\n      pop\n        /* \"contracts/Staking.sol\":2103:2364  if(secondsStakedFromInitial < (3 * 30 days)){... */\n      jump(tag_162)\n    tag_155:\n        /* \"contracts/Staking.sol\":521:539  365 * 24 * 60 * 60 */\n      0x01e13380\n        /* \"contracts/Staking.sol\":2331:2334  100 */\n      0x64\n        /* \"contracts/Staking.sol\":2331:2352  100 * SECONDS_IN_YEAR */\n      tag_163\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_163:\n        /* \"contracts/Staking.sol\":2315:2328  secondsStaked */\n      dup3\n        /* \"contracts/Staking.sol\":617:619  15 */\n      0x0f\n        /* \"contracts/Staking.sol\":2291:2298  _amount */\n      dup7\n        /* \"contracts/Staking.sol\":2291:2312  _amount * REWARD_RATE */\n      tag_164\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_164:\n        /* \"contracts/Staking.sol\":2291:2328  _amount * REWARD_RATE * secondsStaked */\n      tag_165\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_165:\n        /* \"contracts/Staking.sol\":2290:2353  (_amount * REWARD_RATE * secondsStaked)/(100 * SECONDS_IN_YEAR) */\n      tag_166\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_166:\n        /* \"contracts/Staking.sol\":2281:2353  reward = (_amount * REWARD_RATE * secondsStaked)/(100 * SECONDS_IN_YEAR) */\n      swap3\n      pop\n        /* \"contracts/Staking.sol\":2103:2364  if(secondsStakedFromInitial < (3 * 30 days)){... */\n    tag_162:\n        /* \"contracts/Staking.sol\":2390:2391  0 */\n      0x00\n        /* \"contracts/Staking.sol\":2381:2387  reward */\n      dup4\n        /* \"contracts/Staking.sol\":2381:2391  reward > 0 */\n      gt\n        /* \"contracts/Staking.sol\":2373:2415  require(reward > 0, \"No rewards to claim\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"contracts/Staking.sol\":2425:2450  _mint(msg.sender, reward) */\n      tag_170\n        /* \"contracts/Staking.sol\":2431:2441  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2443:2449  reward */\n      dup5\n        /* \"contracts/Staking.sol\":2425:2430  _mint */\n      tag_171\n        /* \"contracts/Staking.sol\":2425:2450  _mint(msg.sender, reward) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/Staking.sol\":2487:2502  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":2460:2472  stakedfromTS */\n      0x09\n        /* \"contracts/Staking.sol\":2460:2484  stakedfromTS[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2473:2483  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2460:2484  stakedfromTS[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2460:2502  stakedfromTS[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2532:2542  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2517:2551  RewardsClaimed(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe\n        /* \"contracts/Staking.sol\":2544:2550  reward */\n      dup5\n        /* \"contracts/Staking.sol\":2517:2551  RewardsClaimed(msg.sender, reward) */\n      mload(0x40)\n      tag_172\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Staking.sol\":1835:2559  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_173\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_174\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_173:\n        /* \"contracts/Staking.sol\":1777:2559  function clainRewards(uint256 _amount) public nonReentrant{... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":579:619  uint256 public constant REWARD_RATE = 15 */\n    tag_68:\n        /* \"contracts/Staking.sol\":617:619  15 */\n      0x0f\n        /* \"contracts/Staking.sol\":579:619  uint256 public constant REWARD_RATE = 15 */\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":479:539  uint256 public constant SECONDS_IN_YEAR = 365 * 24 * 60 * 60 */\n    tag_71:\n        /* \"contracts/Staking.sol\":521:539  365 * 24 * 60 * 60 */\n      0x01e13380\n        /* \"contracts/Staking.sol\":479:539  uint256 public constant SECONDS_IN_YEAR = 365 * 24 * 60 * 60 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Staking.sol\":1056:1419  function stake(uint256 amount , address _xoraToken)  external nonReentrant {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_183\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_148\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_183:\n        /* \"contracts/Staking.sol\":1160:1170  _xoraToken */\n      dup1\n        /* \"contracts/Staking.sol\":1141:1150  xoraToken */\n      0x07\n      0x00\n        /* \"contracts/Staking.sol\":1141:1171  xoraToken = IERC20(_xoraToken) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":1181:1190  xoraToken */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":1181:1203  xoraToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Staking.sol\":1204:1214  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":1224:1228  this */\n      address\n        /* \"contracts/Staking.sol\":1231:1237  amount */\n      dup6\n        /* \"contracts/Staking.sol\":1181:1238  xoraToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_188\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_188:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_189\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_189:\n      pop\n        /* \"contracts/Staking.sol\":1272:1278  amount */\n      dup2\n        /* \"contracts/Staking.sol\":1248:1256  balances */\n      0x08\n        /* \"contracts/Staking.sol\":1248:1268  balances[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":1257:1267  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":1248:1268  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Staking.sol\":1248:1278  balances[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_190\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":1315:1330  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":1288:1300  stakedfromTS */\n      0x09\n        /* \"contracts/Staking.sol\":1288:1312  stakedfromTS[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":1301:1311  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":1288:1312  stakedfromTS[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":1288:1330  stakedfromTS[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":1356:1371  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":1340:1353  lockTimestamp */\n      0x0a\n        /* \"contracts/Staking.sol\":1340:1371  lockTimestamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":1393:1403  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":1386:1412  Staked(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"contracts/Staking.sol\":1405:1411  amount */\n      dup4\n        /* \"contracts/Staking.sol\":1386:1412  Staked(msg.sender, amount) */\n      mload(0x40)\n      tag_192\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_193\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_174\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_193:\n        /* \"contracts/Staking.sol\":1056:1419  function stake(uint256 amount , address _xoraToken)  external nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":425:472  mapping(address => uint256) public stakedfromTS */\n    tag_84:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_196\n      swap1\n      tag_128\n      jump\t// in\n    tag_196:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_197\n      swap1\n      tag_128\n      jump\t// in\n    tag_197:\n      dup1\n      iszero\n      tag_198\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_199\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_198)\n    tag_199:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_200:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_200\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_198:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_203\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":545:573  uint256 public lockTimestamp */\n    tag_98:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_206\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_208\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":346:369  IERC20 public xoraToken */\n    tag_109:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8734:8862  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8818:8855  _approve(owner, spender, value, true) */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8827:8832  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8834:8841  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8843:8848  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8850:8854  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8818:8826  _approve */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8818:8855  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8734:8862  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10423:10900  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10546  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10549:10574  allowance(owner, spender) */\n      tag_216\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10559:10564  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10566:10573  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10549:10558  allowance */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10549:10574  allowance(owner, spender) */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10574  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10608:10625  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10588:10604  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10588:10625  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10584:10894  if (currentAllowance != type(uint256).max) {... */\n      tag_217\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10664:10669  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10645:10661  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10645:10669  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10641:10771  if (currentAllowance < value) {... */\n      iszero\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10730  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10748  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10750:10755  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10696:10756  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10641:10771  if (currentAllowance < value) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10869  _approve(owner, spender, currentAllowance - value, false) */\n      tag_221\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10821:10826  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10835  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10856:10861  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10837:10853  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10837:10861  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10863:10868  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10820  _approve */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10869  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10584:10894  if (currentAllowance != type(uint256).max) {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10512:10900  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10423:10900  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5701  function _transfer(address from, address to, uint256 value) internal virtual {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5500:5501  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5484:5502  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5484:5488  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5484:5502  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5480:5566  if (from == address(0)) {... */\n      tag_223\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5553  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5555  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5480:5566  if (from == address(0)) {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5593:5594  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5579:5595  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5579:5581  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5579:5595  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5575:5661  if (to == address(0)) {... */\n      tag_225\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5647:5648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5618:5650  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5575:5661  if (to == address(0)) {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5694  _update(from, to, value) */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5678:5682  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5684:5686  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5688:5693  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5677  _update */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5694  _update(from, to, value) */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5701  function _transfer(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_230\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_230:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7466:7674  function _mint(address account, uint256 value) internal {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7555:7556  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7536:7557  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7536:7543  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7536:7557  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7532:7623  if (account == address(0)) {... */\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7609:7610  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7580:7612  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7532:7623  if (account == address(0)) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7632:7667  _update(address(0), account, value) */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7648:7649  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7652:7659  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7661:7666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7632:7639  _update */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7632:7667  _update(address(0), account, value) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7466:7674  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_240\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_241\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_242\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9709:10141  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9838:9839  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9821:9840  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9821:9826  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9821:9840  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9817:9906  if (owner == address(0)) {... */\n      tag_246\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9893  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9863:9895  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_247\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9817:9906  if (owner == address(0)) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9938:9939  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9919:9940  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9919:9926  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9919:9940  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9915:10005  if (spender == address(0)) {... */\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9991:9992  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9963:9994  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9915:10005  if (spender == address(0)) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10044:10049  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10025  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10032  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10026:10031  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10032  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10041  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10033:10040  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10041  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10049  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10063:10072  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10059:10135  if (emitEvent) {... */\n      iszero\n      tag_250\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10109:10116  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10093:10124  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10102:10107  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10093:10124  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10118:10123  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10093:10124  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_251\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10059:10135  if (emitEvent) {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9709:10141  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6016:7123  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6121:6122  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6105:6123  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6105:6109  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6105:6123  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6101:6641  if (from == address(0)) {... */\n      tag_253\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6257:6262  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6241:6253  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6241:6262  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_254\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_254:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6101:6641  if (from == address(0)) {... */\n      jump(tag_255)\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6293:6312  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6324  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6330  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6325:6329  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6330  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6293:6330  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6362:6367  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6348:6359  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6348:6367  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6344:6459  if (fromBalance < value) {... */\n      iszero\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6419:6423  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6425:6436  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6438:6443  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6394:6444  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6344:6459  if (fromBalance < value) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6611:6616  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6597:6608  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6597:6616  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6588  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6594  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6593  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6594  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6616  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6279:6641  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6101:6641  if (from == address(0)) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6669:6670  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6655:6671  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6655:6657  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6655:6671  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6651:7076  if (to == address(0)) {... */\n      tag_258\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6839  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6818:6830  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6818:6839  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6651:7076  if (to == address(0)) {... */\n      jump(tag_259)\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7046:7051  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7029:7038  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7029:7042  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7039:7041  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7029:7042  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7029:7051  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6651:7076  if (to == address(0)) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7106:7108  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7091:7116  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7100:7104  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7091:7116  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7110:7115  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7091:7116  Transfer(from, to, value) */\n      mload(0x40)\n      tag_260\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6016:7123  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_262:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_264:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_265:\n        /* \"#utility.yul\":490:514   */\n      tag_306\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_264\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_307\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_307:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_266:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_309\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_265\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:816   */\n    tag_267:\n        /* \"#utility.yul\":727:734   */\n      0x00\n        /* \"#utility.yul\":767:809   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":760:765   */\n      dup3\n        /* \"#utility.yul\":756:810   */\n      and\n        /* \"#utility.yul\":745:810   */\n      swap1\n      pop\n        /* \"#utility.yul\":690:816   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":822:918   */\n    tag_268:\n        /* \"#utility.yul\":859:866   */\n      0x00\n        /* \"#utility.yul\":888:912   */\n      tag_312\n        /* \"#utility.yul\":906:911   */\n      dup3\n        /* \"#utility.yul\":888:912   */\n      tag_267\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":877:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":822:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_269:\n        /* \"#utility.yul\":997:1021   */\n      tag_314\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_268\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_315\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_315:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_270:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_317\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_269\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_30:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_320\n      tag_262\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":1290:1409   */\n    tag_319:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_321\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_266\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_322\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_270\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1776   */\n    tag_271:\n        /* \"#utility.yul\":1729:1735   */\n      0x00\n        /* \"#utility.yul\":1763:1768   */\n      dup2\n        /* \"#utility.yul\":1757:1769   */\n      mload\n        /* \"#utility.yul\":1747:1769   */\n      swap1\n      pop\n        /* \"#utility.yul\":1677:1776   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1782:1951   */\n    tag_272:\n        /* \"#utility.yul\":1866:1877   */\n      0x00\n        /* \"#utility.yul\":1900:1906   */\n      dup3\n        /* \"#utility.yul\":1895:1898   */\n      dup3\n        /* \"#utility.yul\":1888:1907   */\n      mstore\n        /* \"#utility.yul\":1940:1944   */\n      0x20\n        /* \"#utility.yul\":1935:1938   */\n      dup3\n        /* \"#utility.yul\":1931:1945   */\n      add\n        /* \"#utility.yul\":1916:1945   */\n      swap1\n      pop\n        /* \"#utility.yul\":1782:1951   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1957:2096   */\n    tag_273:\n        /* \"#utility.yul\":2046:2052   */\n      dup3\n        /* \"#utility.yul\":2041:2044   */\n      dup2\n        /* \"#utility.yul\":2036:2039   */\n      dup4\n        /* \"#utility.yul\":2030:2053   */\n      mcopy\n        /* \"#utility.yul\":2087:2088   */\n      0x00\n        /* \"#utility.yul\":2078:2084   */\n      dup4\n        /* \"#utility.yul\":2073:2076   */\n      dup4\n        /* \"#utility.yul\":2069:2085   */\n      add\n        /* \"#utility.yul\":2062:2089   */\n      mstore\n        /* \"#utility.yul\":1957:2096   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2102:2204   */\n    tag_274:\n        /* \"#utility.yul\":2143:2149   */\n      0x00\n        /* \"#utility.yul\":2194:2196   */\n      0x1f\n        /* \"#utility.yul\":2190:2197   */\n      not\n        /* \"#utility.yul\":2185:2187   */\n      0x1f\n        /* \"#utility.yul\":2178:2183   */\n      dup4\n        /* \"#utility.yul\":2174:2188   */\n      add\n        /* \"#utility.yul\":2170:2198   */\n      and\n        /* \"#utility.yul\":2160:2198   */\n      swap1\n      pop\n        /* \"#utility.yul\":2102:2204   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2210:2587   */\n    tag_275:\n        /* \"#utility.yul\":2298:2301   */\n      0x00\n        /* \"#utility.yul\":2326:2365   */\n      tag_328\n        /* \"#utility.yul\":2359:2364   */\n      dup3\n        /* \"#utility.yul\":2326:2365   */\n      tag_271\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":2381:2452   */\n      tag_329\n        /* \"#utility.yul\":2445:2451   */\n      dup2\n        /* \"#utility.yul\":2440:2443   */\n      dup6\n        /* \"#utility.yul\":2381:2452   */\n      tag_272\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":2374:2452   */\n      swap4\n      pop\n        /* \"#utility.yul\":2461:2526   */\n      tag_330\n        /* \"#utility.yul\":2519:2525   */\n      dup2\n        /* \"#utility.yul\":2514:2517   */\n      dup6\n        /* \"#utility.yul\":2507:2511   */\n      0x20\n        /* \"#utility.yul\":2500:2505   */\n      dup7\n        /* \"#utility.yul\":2496:2512   */\n      add\n        /* \"#utility.yul\":2461:2526   */\n      tag_273\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":2551:2580   */\n      tag_331\n        /* \"#utility.yul\":2573:2579   */\n      dup2\n        /* \"#utility.yul\":2551:2580   */\n      tag_274\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":2546:2549   */\n      dup5\n        /* \"#utility.yul\":2542:2581   */\n      add\n        /* \"#utility.yul\":2535:2581   */\n      swap2\n      pop\n        /* \"#utility.yul\":2302:2587   */\n      pop\n        /* \"#utility.yul\":2210:2587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2593:2906   */\n    tag_35:\n        /* \"#utility.yul\":2706:2710   */\n      0x00\n        /* \"#utility.yul\":2744:2746   */\n      0x20\n        /* \"#utility.yul\":2733:2742   */\n      dup3\n        /* \"#utility.yul\":2729:2747   */\n      add\n        /* \"#utility.yul\":2721:2747   */\n      swap1\n      pop\n        /* \"#utility.yul\":2793:2802   */\n      dup2\n        /* \"#utility.yul\":2787:2791   */\n      dup2\n        /* \"#utility.yul\":2783:2803   */\n      sub\n        /* \"#utility.yul\":2779:2780   */\n      0x00\n        /* \"#utility.yul\":2768:2777   */\n      dup4\n        /* \"#utility.yul\":2764:2781   */\n      add\n        /* \"#utility.yul\":2757:2804   */\n      mstore\n        /* \"#utility.yul\":2821:2899   */\n      tag_333\n        /* \"#utility.yul\":2894:2898   */\n      dup2\n        /* \"#utility.yul\":2885:2891   */\n      dup5\n        /* \"#utility.yul\":2821:2899   */\n      tag_275\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":2813:2899   */\n      swap1\n      pop\n        /* \"#utility.yul\":2593:2906   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3386   */\n    tag_38:\n        /* \"#utility.yul\":2980:2986   */\n      0x00\n        /* \"#utility.yul\":2988:2994   */\n      dup1\n        /* \"#utility.yul\":3037:3039   */\n      0x40\n        /* \"#utility.yul\":3025:3034   */\n      dup4\n        /* \"#utility.yul\":3016:3023   */\n      dup6\n        /* \"#utility.yul\":3012:3035   */\n      sub\n        /* \"#utility.yul\":3008:3040   */\n      slt\n        /* \"#utility.yul\":3005:3124   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":3043:3122   */\n      tag_336\n      tag_262\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":3005:3124   */\n    tag_335:\n        /* \"#utility.yul\":3163:3164   */\n      0x00\n        /* \"#utility.yul\":3188:3241   */\n      tag_337\n        /* \"#utility.yul\":3233:3240   */\n      dup6\n        /* \"#utility.yul\":3224:3230   */\n      dup3\n        /* \"#utility.yul\":3213:3222   */\n      dup7\n        /* \"#utility.yul\":3209:3231   */\n      add\n        /* \"#utility.yul\":3188:3241   */\n      tag_270\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":3178:3241   */\n      swap3\n      pop\n        /* \"#utility.yul\":3134:3251   */\n      pop\n        /* \"#utility.yul\":3290:3292   */\n      0x20\n        /* \"#utility.yul\":3316:3369   */\n      tag_338\n        /* \"#utility.yul\":3361:3368   */\n      dup6\n        /* \"#utility.yul\":3352:3358   */\n      dup3\n        /* \"#utility.yul\":3341:3350   */\n      dup7\n        /* \"#utility.yul\":3337:3359   */\n      add\n        /* \"#utility.yul\":3316:3369   */\n      tag_266\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":3306:3369   */\n      swap2\n      pop\n        /* \"#utility.yul\":3261:3379   */\n      pop\n        /* \"#utility.yul\":2912:3386   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3392:3482   */\n    tag_276:\n        /* \"#utility.yul\":3426:3433   */\n      0x00\n        /* \"#utility.yul\":3469:3474   */\n      dup2\n        /* \"#utility.yul\":3462:3475   */\n      iszero\n        /* \"#utility.yul\":3455:3476   */\n      iszero\n        /* \"#utility.yul\":3444:3476   */\n      swap1\n      pop\n        /* \"#utility.yul\":3392:3482   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3488:3597   */\n    tag_277:\n        /* \"#utility.yul\":3569:3590   */\n      tag_341\n        /* \"#utility.yul\":3584:3589   */\n      dup2\n        /* \"#utility.yul\":3569:3590   */\n      tag_276\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":3564:3567   */\n      dup3\n        /* \"#utility.yul\":3557:3591   */\n      mstore\n        /* \"#utility.yul\":3488:3597   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3603:3813   */\n    tag_41:\n        /* \"#utility.yul\":3690:3694   */\n      0x00\n        /* \"#utility.yul\":3728:3730   */\n      0x20\n        /* \"#utility.yul\":3717:3726   */\n      dup3\n        /* \"#utility.yul\":3713:3731   */\n      add\n        /* \"#utility.yul\":3705:3731   */\n      swap1\n      pop\n        /* \"#utility.yul\":3741:3806   */\n      tag_343\n        /* \"#utility.yul\":3803:3804   */\n      0x00\n        /* \"#utility.yul\":3792:3801   */\n      dup4\n        /* \"#utility.yul\":3788:3805   */\n      add\n        /* \"#utility.yul\":3779:3785   */\n      dup5\n        /* \"#utility.yul\":3741:3806   */\n      tag_277\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":3603:3813   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3819:3937   */\n    tag_278:\n        /* \"#utility.yul\":3906:3930   */\n      tag_345\n        /* \"#utility.yul\":3924:3929   */\n      dup2\n        /* \"#utility.yul\":3906:3930   */\n      tag_264\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":3901:3904   */\n      dup3\n        /* \"#utility.yul\":3894:3931   */\n      mstore\n        /* \"#utility.yul\":3819:3937   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3943:4165   */\n    tag_45:\n        /* \"#utility.yul\":4036:4040   */\n      0x00\n        /* \"#utility.yul\":4074:4076   */\n      0x20\n        /* \"#utility.yul\":4063:4072   */\n      dup3\n        /* \"#utility.yul\":4059:4077   */\n      add\n        /* \"#utility.yul\":4051:4077   */\n      swap1\n      pop\n        /* \"#utility.yul\":4087:4158   */\n      tag_347\n        /* \"#utility.yul\":4155:4156   */\n      0x00\n        /* \"#utility.yul\":4144:4153   */\n      dup4\n        /* \"#utility.yul\":4140:4157   */\n      add\n        /* \"#utility.yul\":4131:4137   */\n      dup5\n        /* \"#utility.yul\":4087:4158   */\n      tag_278\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":3943:4165   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4171:4790   */\n    tag_51:\n        /* \"#utility.yul\":4248:4254   */\n      0x00\n        /* \"#utility.yul\":4256:4262   */\n      dup1\n        /* \"#utility.yul\":4264:4270   */\n      0x00\n        /* \"#utility.yul\":4313:4315   */\n      0x60\n        /* \"#utility.yul\":4301:4310   */\n      dup5\n        /* \"#utility.yul\":4292:4299   */\n      dup7\n        /* \"#utility.yul\":4288:4311   */\n      sub\n        /* \"#utility.yul\":4284:4316   */\n      slt\n        /* \"#utility.yul\":4281:4400   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":4319:4398   */\n      tag_350\n      tag_262\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":4281:4400   */\n    tag_349:\n        /* \"#utility.yul\":4439:4440   */\n      0x00\n        /* \"#utility.yul\":4464:4517   */\n      tag_351\n        /* \"#utility.yul\":4509:4516   */\n      dup7\n        /* \"#utility.yul\":4500:4506   */\n      dup3\n        /* \"#utility.yul\":4489:4498   */\n      dup8\n        /* \"#utility.yul\":4485:4507   */\n      add\n        /* \"#utility.yul\":4464:4517   */\n      tag_270\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":4454:4517   */\n      swap4\n      pop\n        /* \"#utility.yul\":4410:4527   */\n      pop\n        /* \"#utility.yul\":4566:4568   */\n      0x20\n        /* \"#utility.yul\":4592:4645   */\n      tag_352\n        /* \"#utility.yul\":4637:4644   */\n      dup7\n        /* \"#utility.yul\":4628:4634   */\n      dup3\n        /* \"#utility.yul\":4617:4626   */\n      dup8\n        /* \"#utility.yul\":4613:4635   */\n      add\n        /* \"#utility.yul\":4592:4645   */\n      tag_270\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":4582:4645   */\n      swap3\n      pop\n        /* \"#utility.yul\":4537:4655   */\n      pop\n        /* \"#utility.yul\":4694:4696   */\n      0x40\n        /* \"#utility.yul\":4720:4773   */\n      tag_353\n        /* \"#utility.yul\":4765:4772   */\n      dup7\n        /* \"#utility.yul\":4756:4762   */\n      dup3\n        /* \"#utility.yul\":4745:4754   */\n      dup8\n        /* \"#utility.yul\":4741:4763   */\n      add\n        /* \"#utility.yul\":4720:4773   */\n      tag_266\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":4710:4773   */\n      swap2\n      pop\n        /* \"#utility.yul\":4665:4783   */\n      pop\n        /* \"#utility.yul\":4171:4790   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4796:5125   */\n    tag_56:\n        /* \"#utility.yul\":4855:4861   */\n      0x00\n        /* \"#utility.yul\":4904:4906   */\n      0x20\n        /* \"#utility.yul\":4892:4901   */\n      dup3\n        /* \"#utility.yul\":4883:4890   */\n      dup5\n        /* \"#utility.yul\":4879:4902   */\n      sub\n        /* \"#utility.yul\":4875:4907   */\n      slt\n        /* \"#utility.yul\":4872:4991   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":4910:4989   */\n      tag_356\n      tag_262\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":4872:4991   */\n    tag_355:\n        /* \"#utility.yul\":5030:5031   */\n      0x00\n        /* \"#utility.yul\":5055:5108   */\n      tag_357\n        /* \"#utility.yul\":5100:5107   */\n      dup5\n        /* \"#utility.yul\":5091:5097   */\n      dup3\n        /* \"#utility.yul\":5080:5089   */\n      dup6\n        /* \"#utility.yul\":5076:5098   */\n      add\n        /* \"#utility.yul\":5055:5108   */\n      tag_270\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":5045:5108   */\n      swap2\n      pop\n        /* \"#utility.yul\":5001:5118   */\n      pop\n        /* \"#utility.yul\":4796:5125   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5131:5217   */\n    tag_279:\n        /* \"#utility.yul\":5166:5173   */\n      0x00\n        /* \"#utility.yul\":5206:5210   */\n      0xff\n        /* \"#utility.yul\":5199:5204   */\n      dup3\n        /* \"#utility.yul\":5195:5211   */\n      and\n        /* \"#utility.yul\":5184:5211   */\n      swap1\n      pop\n        /* \"#utility.yul\":5131:5217   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5223:5335   */\n    tag_280:\n        /* \"#utility.yul\":5306:5328   */\n      tag_360\n        /* \"#utility.yul\":5322:5327   */\n      dup2\n        /* \"#utility.yul\":5306:5328   */\n      tag_279\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":5301:5304   */\n      dup3\n        /* \"#utility.yul\":5294:5329   */\n      mstore\n        /* \"#utility.yul\":5223:5335   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5341:5555   */\n    tag_62:\n        /* \"#utility.yul\":5430:5434   */\n      0x00\n        /* \"#utility.yul\":5468:5470   */\n      0x20\n        /* \"#utility.yul\":5457:5466   */\n      dup3\n        /* \"#utility.yul\":5453:5471   */\n      add\n        /* \"#utility.yul\":5445:5471   */\n      swap1\n      pop\n        /* \"#utility.yul\":5481:5548   */\n      tag_362\n        /* \"#utility.yul\":5545:5546   */\n      0x00\n        /* \"#utility.yul\":5534:5543   */\n      dup4\n        /* \"#utility.yul\":5530:5547   */\n      add\n        /* \"#utility.yul\":5521:5527   */\n      dup5\n        /* \"#utility.yul\":5481:5548   */\n      tag_280\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":5341:5555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5561:5890   */\n    tag_65:\n        /* \"#utility.yul\":5620:5626   */\n      0x00\n        /* \"#utility.yul\":5669:5671   */\n      0x20\n        /* \"#utility.yul\":5657:5666   */\n      dup3\n        /* \"#utility.yul\":5648:5655   */\n      dup5\n        /* \"#utility.yul\":5644:5667   */\n      sub\n        /* \"#utility.yul\":5640:5672   */\n      slt\n        /* \"#utility.yul\":5637:5756   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":5675:5754   */\n      tag_365\n      tag_262\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":5637:5756   */\n    tag_364:\n        /* \"#utility.yul\":5795:5796   */\n      0x00\n        /* \"#utility.yul\":5820:5873   */\n      tag_366\n        /* \"#utility.yul\":5865:5872   */\n      dup5\n        /* \"#utility.yul\":5856:5862   */\n      dup3\n        /* \"#utility.yul\":5845:5854   */\n      dup6\n        /* \"#utility.yul\":5841:5863   */\n      add\n        /* \"#utility.yul\":5820:5873   */\n      tag_266\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":5810:5873   */\n      swap2\n      pop\n        /* \"#utility.yul\":5766:5883   */\n      pop\n        /* \"#utility.yul\":5561:5890   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5896:6014   */\n    tag_281:\n        /* \"#utility.yul\":5983:6007   */\n      tag_368\n        /* \"#utility.yul\":6001:6006   */\n      dup2\n        /* \"#utility.yul\":5983:6007   */\n      tag_268\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":5978:5981   */\n      dup3\n        /* \"#utility.yul\":5971:6008   */\n      mstore\n        /* \"#utility.yul\":5896:6014   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6020:6242   */\n    tag_89:\n        /* \"#utility.yul\":6113:6117   */\n      0x00\n        /* \"#utility.yul\":6151:6153   */\n      0x20\n        /* \"#utility.yul\":6140:6149   */\n      dup3\n        /* \"#utility.yul\":6136:6154   */\n      add\n        /* \"#utility.yul\":6128:6154   */\n      swap1\n      pop\n        /* \"#utility.yul\":6164:6235   */\n      tag_370\n        /* \"#utility.yul\":6232:6233   */\n      0x00\n        /* \"#utility.yul\":6221:6230   */\n      dup4\n        /* \"#utility.yul\":6217:6234   */\n      add\n        /* \"#utility.yul\":6208:6214   */\n      dup5\n        /* \"#utility.yul\":6164:6235   */\n      tag_281\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":6020:6242   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6722   */\n    tag_102:\n        /* \"#utility.yul\":6316:6322   */\n      0x00\n        /* \"#utility.yul\":6324:6330   */\n      dup1\n        /* \"#utility.yul\":6373:6375   */\n      0x40\n        /* \"#utility.yul\":6361:6370   */\n      dup4\n        /* \"#utility.yul\":6352:6359   */\n      dup6\n        /* \"#utility.yul\":6348:6371   */\n      sub\n        /* \"#utility.yul\":6344:6376   */\n      slt\n        /* \"#utility.yul\":6341:6460   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":6379:6458   */\n      tag_373\n      tag_262\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":6341:6460   */\n    tag_372:\n        /* \"#utility.yul\":6499:6500   */\n      0x00\n        /* \"#utility.yul\":6524:6577   */\n      tag_374\n        /* \"#utility.yul\":6569:6576   */\n      dup6\n        /* \"#utility.yul\":6560:6566   */\n      dup3\n        /* \"#utility.yul\":6549:6558   */\n      dup7\n        /* \"#utility.yul\":6545:6567   */\n      add\n        /* \"#utility.yul\":6524:6577   */\n      tag_270\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":6514:6577   */\n      swap3\n      pop\n        /* \"#utility.yul\":6470:6587   */\n      pop\n        /* \"#utility.yul\":6626:6628   */\n      0x20\n        /* \"#utility.yul\":6652:6705   */\n      tag_375\n        /* \"#utility.yul\":6697:6704   */\n      dup6\n        /* \"#utility.yul\":6688:6694   */\n      dup3\n        /* \"#utility.yul\":6677:6686   */\n      dup7\n        /* \"#utility.yul\":6673:6695   */\n      add\n        /* \"#utility.yul\":6652:6705   */\n      tag_270\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":6642:6705   */\n      swap2\n      pop\n        /* \"#utility.yul\":6597:6715   */\n      pop\n        /* \"#utility.yul\":6248:6722   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6728:6788   */\n    tag_282:\n        /* \"#utility.yul\":6756:6759   */\n      0x00\n        /* \"#utility.yul\":6777:6782   */\n      dup2\n        /* \"#utility.yul\":6770:6782   */\n      swap1\n      pop\n        /* \"#utility.yul\":6728:6788   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6794:6936   */\n    tag_283:\n        /* \"#utility.yul\":6844:6853   */\n      0x00\n        /* \"#utility.yul\":6877:6930   */\n      tag_378\n        /* \"#utility.yul\":6895:6929   */\n      tag_379\n        /* \"#utility.yul\":6904:6928   */\n      tag_380\n        /* \"#utility.yul\":6922:6927   */\n      dup5\n        /* \"#utility.yul\":6904:6928   */\n      tag_267\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":6895:6929   */\n      tag_282\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":6877:6930   */\n      tag_267\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":6864:6930   */\n      swap1\n      pop\n        /* \"#utility.yul\":6794:6936   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6942:7068   */\n    tag_284:\n        /* \"#utility.yul\":6992:7001   */\n      0x00\n        /* \"#utility.yul\":7025:7062   */\n      tag_382\n        /* \"#utility.yul\":7056:7061   */\n      dup3\n        /* \"#utility.yul\":7025:7062   */\n      tag_283\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":7012:7062   */\n      swap1\n      pop\n        /* \"#utility.yul\":6942:7068   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7074:7214   */\n    tag_285:\n        /* \"#utility.yul\":7138:7147   */\n      0x00\n        /* \"#utility.yul\":7171:7208   */\n      tag_384\n        /* \"#utility.yul\":7202:7207   */\n      dup3\n        /* \"#utility.yul\":7171:7208   */\n      tag_284\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":7158:7208   */\n      swap1\n      pop\n        /* \"#utility.yul\":7074:7214   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7220:7379   */\n    tag_286:\n        /* \"#utility.yul\":7321:7372   */\n      tag_386\n        /* \"#utility.yul\":7366:7371   */\n      dup2\n        /* \"#utility.yul\":7321:7372   */\n      tag_285\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":7316:7319   */\n      dup3\n        /* \"#utility.yul\":7309:7373   */\n      mstore\n        /* \"#utility.yul\":7220:7379   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7385:7635   */\n    tag_111:\n        /* \"#utility.yul\":7492:7496   */\n      0x00\n        /* \"#utility.yul\":7530:7532   */\n      0x20\n        /* \"#utility.yul\":7519:7528   */\n      dup3\n        /* \"#utility.yul\":7515:7533   */\n      add\n        /* \"#utility.yul\":7507:7533   */\n      swap1\n      pop\n        /* \"#utility.yul\":7543:7628   */\n      tag_388\n        /* \"#utility.yul\":7625:7626   */\n      0x00\n        /* \"#utility.yul\":7614:7623   */\n      dup4\n        /* \"#utility.yul\":7610:7627   */\n      add\n        /* \"#utility.yul\":7601:7607   */\n      dup5\n        /* \"#utility.yul\":7543:7628   */\n      tag_286\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":7385:7635   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7641:7811   */\n    tag_287:\n        /* \"#utility.yul\":7781:7803   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":7777:7778   */\n      0x00\n        /* \"#utility.yul\":7769:7775   */\n      dup3\n        /* \"#utility.yul\":7765:7779   */\n      add\n        /* \"#utility.yul\":7758:7804   */\n      mstore\n        /* \"#utility.yul\":7641:7811   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7817:8183   */\n    tag_288:\n        /* \"#utility.yul\":7959:7962   */\n      0x00\n        /* \"#utility.yul\":7980:8047   */\n      tag_391\n        /* \"#utility.yul\":8044:8046   */\n      0x14\n        /* \"#utility.yul\":8039:8042   */\n      dup4\n        /* \"#utility.yul\":7980:8047   */\n      tag_272\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":7973:8047   */\n      swap2\n      pop\n        /* \"#utility.yul\":8056:8149   */\n      tag_392\n        /* \"#utility.yul\":8145:8148   */\n      dup3\n        /* \"#utility.yul\":8056:8149   */\n      tag_287\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":8174:8176   */\n      0x20\n        /* \"#utility.yul\":8169:8172   */\n      dup3\n        /* \"#utility.yul\":8165:8177   */\n      add\n        /* \"#utility.yul\":8158:8177   */\n      swap1\n      pop\n        /* \"#utility.yul\":7817:8183   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8189:8608   */\n    tag_115:\n        /* \"#utility.yul\":8355:8359   */\n      0x00\n        /* \"#utility.yul\":8393:8395   */\n      0x20\n        /* \"#utility.yul\":8382:8391   */\n      dup3\n        /* \"#utility.yul\":8378:8396   */\n      add\n        /* \"#utility.yul\":8370:8396   */\n      swap1\n      pop\n        /* \"#utility.yul\":8442:8451   */\n      dup2\n        /* \"#utility.yul\":8436:8440   */\n      dup2\n        /* \"#utility.yul\":8432:8452   */\n      sub\n        /* \"#utility.yul\":8428:8429   */\n      0x00\n        /* \"#utility.yul\":8417:8426   */\n      dup4\n        /* \"#utility.yul\":8413:8430   */\n      add\n        /* \"#utility.yul\":8406:8453   */\n      mstore\n        /* \"#utility.yul\":8470:8601   */\n      tag_394\n        /* \"#utility.yul\":8596:8600   */\n      dup2\n        /* \"#utility.yul\":8470:8601   */\n      tag_288\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":8462:8601   */\n      swap1\n      pop\n        /* \"#utility.yul\":8189:8608   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8614:8794   */\n    tag_289:\n        /* \"#utility.yul\":8662:8739   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8659:8660   */\n      0x00\n        /* \"#utility.yul\":8652:8740   */\n      mstore\n        /* \"#utility.yul\":8759:8763   */\n      0x11\n        /* \"#utility.yul\":8756:8757   */\n      0x04\n        /* \"#utility.yul\":8749:8764   */\n      mstore\n        /* \"#utility.yul\":8783:8787   */\n      0x24\n        /* \"#utility.yul\":8780:8781   */\n      0x00\n        /* \"#utility.yul\":8773:8788   */\n      revert\n        /* \"#utility.yul\":8800:8994   */\n    tag_118:\n        /* \"#utility.yul\":8840:8844   */\n      0x00\n        /* \"#utility.yul\":8860:8880   */\n      tag_397\n        /* \"#utility.yul\":8878:8879   */\n      dup3\n        /* \"#utility.yul\":8860:8880   */\n      tag_264\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":8855:8880   */\n      swap2\n      pop\n        /* \"#utility.yul\":8894:8914   */\n      tag_398\n        /* \"#utility.yul\":8912:8913   */\n      dup4\n        /* \"#utility.yul\":8894:8914   */\n      tag_264\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":8889:8914   */\n      swap3\n      pop\n        /* \"#utility.yul\":8938:8939   */\n      dup3\n        /* \"#utility.yul\":8935:8936   */\n      dup3\n        /* \"#utility.yul\":8931:8940   */\n      sub\n        /* \"#utility.yul\":8923:8940   */\n      swap1\n      pop\n        /* \"#utility.yul\":8962:8963   */\n      dup2\n        /* \"#utility.yul\":8956:8960   */\n      dup2\n        /* \"#utility.yul\":8953:8964   */\n      gt\n        /* \"#utility.yul\":8950:8987   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":8967:8985   */\n      tag_400\n      tag_289\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":8950:8987   */\n    tag_399:\n        /* \"#utility.yul\":8800:8994   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9000:9332   */\n    tag_120:\n        /* \"#utility.yul\":9121:9125   */\n      0x00\n        /* \"#utility.yul\":9159:9161   */\n      0x40\n        /* \"#utility.yul\":9148:9157   */\n      dup3\n        /* \"#utility.yul\":9144:9162   */\n      add\n        /* \"#utility.yul\":9136:9162   */\n      swap1\n      pop\n        /* \"#utility.yul\":9172:9243   */\n      tag_402\n        /* \"#utility.yul\":9240:9241   */\n      0x00\n        /* \"#utility.yul\":9229:9238   */\n      dup4\n        /* \"#utility.yul\":9225:9242   */\n      add\n        /* \"#utility.yul\":9216:9222   */\n      dup6\n        /* \"#utility.yul\":9172:9243   */\n      tag_281\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":9253:9325   */\n      tag_403\n        /* \"#utility.yul\":9321:9323   */\n      0x20\n        /* \"#utility.yul\":9310:9319   */\n      dup4\n        /* \"#utility.yul\":9306:9324   */\n      add\n        /* \"#utility.yul\":9297:9303   */\n      dup5\n        /* \"#utility.yul\":9253:9325   */\n      tag_278\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":9000:9332   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9338:9454   */\n    tag_290:\n        /* \"#utility.yul\":9408:9429   */\n      tag_405\n        /* \"#utility.yul\":9423:9428   */\n      dup2\n        /* \"#utility.yul\":9408:9429   */\n      tag_276\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":9401:9406   */\n      dup2\n        /* \"#utility.yul\":9398:9430   */\n      eq\n        /* \"#utility.yul\":9388:9448   */\n      tag_406\n      jumpi\n        /* \"#utility.yul\":9444:9445   */\n      0x00\n        /* \"#utility.yul\":9441:9442   */\n      dup1\n        /* \"#utility.yul\":9434:9446   */\n      revert\n        /* \"#utility.yul\":9388:9448   */\n    tag_406:\n        /* \"#utility.yul\":9338:9454   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9460:9597   */\n    tag_291:\n        /* \"#utility.yul\":9514:9519   */\n      0x00\n        /* \"#utility.yul\":9545:9551   */\n      dup2\n        /* \"#utility.yul\":9539:9552   */\n      mload\n        /* \"#utility.yul\":9530:9552   */\n      swap1\n      pop\n        /* \"#utility.yul\":9561:9591   */\n      tag_408\n        /* \"#utility.yul\":9585:9590   */\n      dup2\n        /* \"#utility.yul\":9561:9591   */\n      tag_290\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":9460:9597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9603:9948   */\n    tag_124:\n        /* \"#utility.yul\":9670:9676   */\n      0x00\n        /* \"#utility.yul\":9719:9721   */\n      0x20\n        /* \"#utility.yul\":9707:9716   */\n      dup3\n        /* \"#utility.yul\":9698:9705   */\n      dup5\n        /* \"#utility.yul\":9694:9717   */\n      sub\n        /* \"#utility.yul\":9690:9722   */\n      slt\n        /* \"#utility.yul\":9687:9806   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":9725:9804   */\n      tag_411\n      tag_262\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":9687:9806   */\n    tag_410:\n        /* \"#utility.yul\":9845:9846   */\n      0x00\n        /* \"#utility.yul\":9870:9931   */\n      tag_412\n        /* \"#utility.yul\":9923:9930   */\n      dup5\n        /* \"#utility.yul\":9914:9920   */\n      dup3\n        /* \"#utility.yul\":9903:9912   */\n      dup6\n        /* \"#utility.yul\":9899:9921   */\n      add\n        /* \"#utility.yul\":9870:9931   */\n      tag_291\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":9860:9931   */\n      swap2\n      pop\n        /* \"#utility.yul\":9816:9941   */\n      pop\n        /* \"#utility.yul\":9603:9948   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9954:10134   */\n    tag_292:\n        /* \"#utility.yul\":10002:10079   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9999:10000   */\n      0x00\n        /* \"#utility.yul\":9992:10080   */\n      mstore\n        /* \"#utility.yul\":10099:10103   */\n      0x22\n        /* \"#utility.yul\":10096:10097   */\n      0x04\n        /* \"#utility.yul\":10089:10104   */\n      mstore\n        /* \"#utility.yul\":10123:10127   */\n      0x24\n        /* \"#utility.yul\":10120:10121   */\n      0x00\n        /* \"#utility.yul\":10113:10128   */\n      revert\n        /* \"#utility.yul\":10140:10460   */\n    tag_128:\n        /* \"#utility.yul\":10184:10190   */\n      0x00\n        /* \"#utility.yul\":10221:10222   */\n      0x02\n        /* \"#utility.yul\":10215:10219   */\n      dup3\n        /* \"#utility.yul\":10211:10223   */\n      div\n        /* \"#utility.yul\":10201:10223   */\n      swap1\n      pop\n        /* \"#utility.yul\":10268:10269   */\n      0x01\n        /* \"#utility.yul\":10262:10266   */\n      dup3\n        /* \"#utility.yul\":10258:10270   */\n      and\n        /* \"#utility.yul\":10289:10307   */\n      dup1\n        /* \"#utility.yul\":10279:10360   */\n      tag_415\n      jumpi\n        /* \"#utility.yul\":10345:10349   */\n      0x7f\n        /* \"#utility.yul\":10337:10343   */\n      dup3\n        /* \"#utility.yul\":10333:10350   */\n      and\n        /* \"#utility.yul\":10323:10350   */\n      swap2\n      pop\n        /* \"#utility.yul\":10279:10360   */\n    tag_415:\n        /* \"#utility.yul\":10407:10409   */\n      0x20\n        /* \"#utility.yul\":10399:10405   */\n      dup3\n        /* \"#utility.yul\":10396:10410   */\n      lt\n        /* \"#utility.yul\":10376:10394   */\n      dup2\n        /* \"#utility.yul\":10373:10411   */\n      sub\n        /* \"#utility.yul\":10370:10454   */\n      tag_416\n      jumpi\n        /* \"#utility.yul\":10426:10444   */\n      tag_417\n      tag_292\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":10370:10454   */\n    tag_416:\n        /* \"#utility.yul\":10191:10460   */\n      pop\n        /* \"#utility.yul\":10140:10460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10466:10645   */\n    tag_293:\n        /* \"#utility.yul\":10606:10637   */\n      0x796f7520646f6e6f74206861766520656e6f7570682062616c616e6365000000\n        /* \"#utility.yul\":10602:10603   */\n      0x00\n        /* \"#utility.yul\":10594:10600   */\n      dup3\n        /* \"#utility.yul\":10590:10604   */\n      add\n        /* \"#utility.yul\":10583:10638   */\n      mstore\n        /* \"#utility.yul\":10466:10645   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10651:11017   */\n    tag_294:\n        /* \"#utility.yul\":10793:10796   */\n      0x00\n        /* \"#utility.yul\":10814:10881   */\n      tag_420\n        /* \"#utility.yul\":10878:10880   */\n      0x1d\n        /* \"#utility.yul\":10873:10876   */\n      dup4\n        /* \"#utility.yul\":10814:10881   */\n      tag_272\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":10807:10881   */\n      swap2\n      pop\n        /* \"#utility.yul\":10890:10983   */\n      tag_421\n        /* \"#utility.yul\":10979:10982   */\n      dup3\n        /* \"#utility.yul\":10890:10983   */\n      tag_293\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":11008:11010   */\n      0x20\n        /* \"#utility.yul\":11003:11006   */\n      dup3\n        /* \"#utility.yul\":10999:11011   */\n      add\n        /* \"#utility.yul\":10992:11011   */\n      swap1\n      pop\n        /* \"#utility.yul\":10651:11017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11023:11442   */\n    tag_152:\n        /* \"#utility.yul\":11189:11193   */\n      0x00\n        /* \"#utility.yul\":11227:11229   */\n      0x20\n        /* \"#utility.yul\":11216:11225   */\n      dup3\n        /* \"#utility.yul\":11212:11230   */\n      add\n        /* \"#utility.yul\":11204:11230   */\n      swap1\n      pop\n        /* \"#utility.yul\":11276:11285   */\n      dup2\n        /* \"#utility.yul\":11270:11274   */\n      dup2\n        /* \"#utility.yul\":11266:11286   */\n      sub\n        /* \"#utility.yul\":11262:11263   */\n      0x00\n        /* \"#utility.yul\":11251:11260   */\n      dup4\n        /* \"#utility.yul\":11247:11264   */\n      add\n        /* \"#utility.yul\":11240:11287   */\n      mstore\n        /* \"#utility.yul\":11304:11435   */\n      tag_423\n        /* \"#utility.yul\":11430:11434   */\n      dup2\n        /* \"#utility.yul\":11304:11435   */\n      tag_294\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":11296:11435   */\n      swap1\n      pop\n        /* \"#utility.yul\":11023:11442   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11448:11858   */\n    tag_157:\n        /* \"#utility.yul\":11488:11495   */\n      0x00\n        /* \"#utility.yul\":11511:11531   */\n      tag_425\n        /* \"#utility.yul\":11529:11530   */\n      dup3\n        /* \"#utility.yul\":11511:11531   */\n      tag_264\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":11506:11531   */\n      swap2\n      pop\n        /* \"#utility.yul\":11545:11565   */\n      tag_426\n        /* \"#utility.yul\":11563:11564   */\n      dup4\n        /* \"#utility.yul\":11545:11565   */\n      tag_264\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":11540:11565   */\n      swap3\n      pop\n        /* \"#utility.yul\":11600:11601   */\n      dup3\n        /* \"#utility.yul\":11597:11598   */\n      dup3\n        /* \"#utility.yul\":11593:11602   */\n      mul\n        /* \"#utility.yul\":11622:11652   */\n      tag_427\n        /* \"#utility.yul\":11640:11651   */\n      dup2\n        /* \"#utility.yul\":11622:11652   */\n      tag_264\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":11611:11652   */\n      swap2\n      pop\n        /* \"#utility.yul\":11801:11802   */\n      dup3\n        /* \"#utility.yul\":11792:11799   */\n      dup3\n        /* \"#utility.yul\":11788:11803   */\n      div\n        /* \"#utility.yul\":11785:11786   */\n      dup5\n        /* \"#utility.yul\":11782:11804   */\n      eq\n        /* \"#utility.yul\":11762:11763   */\n      dup4\n        /* \"#utility.yul\":11755:11764   */\n      iszero\n        /* \"#utility.yul\":11735:11818   */\n      or\n        /* \"#utility.yul\":11712:11851   */\n      tag_428\n      jumpi\n        /* \"#utility.yul\":11831:11849   */\n      tag_429\n      tag_289\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":11712:11851   */\n    tag_428:\n        /* \"#utility.yul\":11496:11858   */\n      pop\n        /* \"#utility.yul\":11448:11858   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11864:12044   */\n    tag_295:\n        /* \"#utility.yul\":11912:11989   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11909:11910   */\n      0x00\n        /* \"#utility.yul\":11902:11990   */\n      mstore\n        /* \"#utility.yul\":12009:12013   */\n      0x12\n        /* \"#utility.yul\":12006:12007   */\n      0x04\n        /* \"#utility.yul\":11999:12014   */\n      mstore\n        /* \"#utility.yul\":12033:12037   */\n      0x24\n        /* \"#utility.yul\":12030:12031   */\n      0x00\n        /* \"#utility.yul\":12023:12038   */\n      revert\n        /* \"#utility.yul\":12050:12235   */\n    tag_161:\n        /* \"#utility.yul\":12090:12091   */\n      0x00\n        /* \"#utility.yul\":12107:12127   */\n      tag_432\n        /* \"#utility.yul\":12125:12126   */\n      dup3\n        /* \"#utility.yul\":12107:12127   */\n      tag_264\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":12102:12127   */\n      swap2\n      pop\n        /* \"#utility.yul\":12141:12161   */\n      tag_433\n        /* \"#utility.yul\":12159:12160   */\n      dup4\n        /* \"#utility.yul\":12141:12161   */\n      tag_264\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":12136:12161   */\n      swap3\n      pop\n        /* \"#utility.yul\":12180:12181   */\n      dup3\n        /* \"#utility.yul\":12170:12205   */\n      tag_434\n      jumpi\n        /* \"#utility.yul\":12185:12203   */\n      tag_435\n      tag_295\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":12170:12205   */\n    tag_434:\n        /* \"#utility.yul\":12227:12228   */\n      dup3\n        /* \"#utility.yul\":12224:12225   */\n      dup3\n        /* \"#utility.yul\":12220:12229   */\n      div\n        /* \"#utility.yul\":12215:12229   */\n      swap1\n      pop\n        /* \"#utility.yul\":12050:12235   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12241:12410   */\n    tag_296:\n        /* \"#utility.yul\":12381:12402   */\n      0x4e6f207265776172647320746f20636c61696d00000000000000000000000000\n        /* \"#utility.yul\":12377:12378   */\n      0x00\n        /* \"#utility.yul\":12369:12375   */\n      dup3\n        /* \"#utility.yul\":12365:12379   */\n      add\n        /* \"#utility.yul\":12358:12403   */\n      mstore\n        /* \"#utility.yul\":12241:12410   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12416:12782   */\n    tag_297:\n        /* \"#utility.yul\":12558:12561   */\n      0x00\n        /* \"#utility.yul\":12579:12646   */\n      tag_438\n        /* \"#utility.yul\":12643:12645   */\n      0x13\n        /* \"#utility.yul\":12638:12641   */\n      dup4\n        /* \"#utility.yul\":12579:12646   */\n      tag_272\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":12572:12646   */\n      swap2\n      pop\n        /* \"#utility.yul\":12655:12748   */\n      tag_439\n        /* \"#utility.yul\":12744:12747   */\n      dup3\n        /* \"#utility.yul\":12655:12748   */\n      tag_296\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":12773:12775   */\n      0x20\n        /* \"#utility.yul\":12768:12771   */\n      dup3\n        /* \"#utility.yul\":12764:12776   */\n      add\n        /* \"#utility.yul\":12757:12776   */\n      swap1\n      pop\n        /* \"#utility.yul\":12416:12782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12788:13207   */\n    tag_169:\n        /* \"#utility.yul\":12954:12958   */\n      0x00\n        /* \"#utility.yul\":12992:12994   */\n      0x20\n        /* \"#utility.yul\":12981:12990   */\n      dup3\n        /* \"#utility.yul\":12977:12995   */\n      add\n        /* \"#utility.yul\":12969:12995   */\n      swap1\n      pop\n        /* \"#utility.yul\":13041:13050   */\n      dup2\n        /* \"#utility.yul\":13035:13039   */\n      dup2\n        /* \"#utility.yul\":13031:13051   */\n      sub\n        /* \"#utility.yul\":13027:13028   */\n      0x00\n        /* \"#utility.yul\":13016:13025   */\n      dup4\n        /* \"#utility.yul\":13012:13029   */\n      add\n        /* \"#utility.yul\":13005:13052   */\n      mstore\n        /* \"#utility.yul\":13069:13200   */\n      tag_441\n        /* \"#utility.yul\":13195:13199   */\n      dup2\n        /* \"#utility.yul\":13069:13200   */\n      tag_297\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":13061:13200   */\n      swap1\n      pop\n        /* \"#utility.yul\":12788:13207   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13213:13655   */\n    tag_186:\n        /* \"#utility.yul\":13362:13366   */\n      0x00\n        /* \"#utility.yul\":13400:13402   */\n      0x60\n        /* \"#utility.yul\":13389:13398   */\n      dup3\n        /* \"#utility.yul\":13385:13403   */\n      add\n        /* \"#utility.yul\":13377:13403   */\n      swap1\n      pop\n        /* \"#utility.yul\":13413:13484   */\n      tag_443\n        /* \"#utility.yul\":13481:13482   */\n      0x00\n        /* \"#utility.yul\":13470:13479   */\n      dup4\n        /* \"#utility.yul\":13466:13483   */\n      add\n        /* \"#utility.yul\":13457:13463   */\n      dup7\n        /* \"#utility.yul\":13413:13484   */\n      tag_281\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":13494:13566   */\n      tag_444\n        /* \"#utility.yul\":13562:13564   */\n      0x20\n        /* \"#utility.yul\":13551:13560   */\n      dup4\n        /* \"#utility.yul\":13547:13565   */\n      add\n        /* \"#utility.yul\":13538:13544   */\n      dup6\n        /* \"#utility.yul\":13494:13566   */\n      tag_281\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":13576:13648   */\n      tag_445\n        /* \"#utility.yul\":13644:13646   */\n      0x40\n        /* \"#utility.yul\":13633:13642   */\n      dup4\n        /* \"#utility.yul\":13629:13647   */\n      add\n        /* \"#utility.yul\":13620:13626   */\n      dup5\n        /* \"#utility.yul\":13576:13648   */\n      tag_278\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":13213:13655   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13661:13852   */\n    tag_191:\n        /* \"#utility.yul\":13701:13704   */\n      0x00\n        /* \"#utility.yul\":13720:13740   */\n      tag_447\n        /* \"#utility.yul\":13738:13739   */\n      dup3\n        /* \"#utility.yul\":13720:13740   */\n      tag_264\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":13715:13740   */\n      swap2\n      pop\n        /* \"#utility.yul\":13754:13774   */\n      tag_448\n        /* \"#utility.yul\":13772:13773   */\n      dup4\n        /* \"#utility.yul\":13754:13774   */\n      tag_264\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":13749:13774   */\n      swap3\n      pop\n        /* \"#utility.yul\":13797:13798   */\n      dup3\n        /* \"#utility.yul\":13794:13795   */\n      dup3\n        /* \"#utility.yul\":13790:13799   */\n      add\n        /* \"#utility.yul\":13783:13799   */\n      swap1\n      pop\n        /* \"#utility.yul\":13818:13821   */\n      dup1\n        /* \"#utility.yul\":13815:13816   */\n      dup3\n        /* \"#utility.yul\":13812:13822   */\n      gt\n        /* \"#utility.yul\":13809:13845   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":13825:13843   */\n      tag_450\n      tag_289\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":13809:13845   */\n    tag_449:\n        /* \"#utility.yul\":13661:13852   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13858:14300   */\n    tag_220:\n        /* \"#utility.yul\":14007:14011   */\n      0x00\n        /* \"#utility.yul\":14045:14047   */\n      0x60\n        /* \"#utility.yul\":14034:14043   */\n      dup3\n        /* \"#utility.yul\":14030:14048   */\n      add\n        /* \"#utility.yul\":14022:14048   */\n      swap1\n      pop\n        /* \"#utility.yul\":14058:14129   */\n      tag_452\n        /* \"#utility.yul\":14126:14127   */\n      0x00\n        /* \"#utility.yul\":14115:14124   */\n      dup4\n        /* \"#utility.yul\":14111:14128   */\n      add\n        /* \"#utility.yul\":14102:14108   */\n      dup7\n        /* \"#utility.yul\":14058:14129   */\n      tag_281\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":14139:14211   */\n      tag_453\n        /* \"#utility.yul\":14207:14209   */\n      0x20\n        /* \"#utility.yul\":14196:14205   */\n      dup4\n        /* \"#utility.yul\":14192:14210   */\n      add\n        /* \"#utility.yul\":14183:14189   */\n      dup6\n        /* \"#utility.yul\":14139:14211   */\n      tag_278\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":14221:14293   */\n      tag_454\n        /* \"#utility.yul\":14289:14291   */\n      0x40\n        /* \"#utility.yul\":14278:14287   */\n      dup4\n        /* \"#utility.yul\":14274:14292   */\n      add\n        /* \"#utility.yul\":14265:14271   */\n      dup5\n        /* \"#utility.yul\":14221:14293   */\n      tag_278\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":13858:14300   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14306:14487   */\n    tag_298:\n        /* \"#utility.yul\":14446:14479   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":14442:14443   */\n      0x00\n        /* \"#utility.yul\":14434:14440   */\n      dup3\n        /* \"#utility.yul\":14430:14444   */\n      add\n        /* \"#utility.yul\":14423:14480   */\n      mstore\n        /* \"#utility.yul\":14306:14487   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14493:14859   */\n    tag_299:\n        /* \"#utility.yul\":14635:14638   */\n      0x00\n        /* \"#utility.yul\":14656:14723   */\n      tag_457\n        /* \"#utility.yul\":14720:14722   */\n      0x1f\n        /* \"#utility.yul\":14715:14718   */\n      dup4\n        /* \"#utility.yul\":14656:14723   */\n      tag_272\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":14649:14723   */\n      swap2\n      pop\n        /* \"#utility.yul\":14732:14825   */\n      tag_458\n        /* \"#utility.yul\":14821:14824   */\n      dup3\n        /* \"#utility.yul\":14732:14825   */\n      tag_298\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":14850:14852   */\n      0x20\n        /* \"#utility.yul\":14845:14848   */\n      dup3\n        /* \"#utility.yul\":14841:14853   */\n      add\n        /* \"#utility.yul\":14834:14853   */\n      swap1\n      pop\n        /* \"#utility.yul\":14493:14859   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14865:15284   */\n    tag_232:\n        /* \"#utility.yul\":15031:15035   */\n      0x00\n        /* \"#utility.yul\":15069:15071   */\n      0x20\n        /* \"#utility.yul\":15058:15067   */\n      dup3\n        /* \"#utility.yul\":15054:15072   */\n      add\n        /* \"#utility.yul\":15046:15072   */\n      swap1\n      pop\n        /* \"#utility.yul\":15118:15127   */\n      dup2\n        /* \"#utility.yul\":15112:15116   */\n      dup2\n        /* \"#utility.yul\":15108:15128   */\n      sub\n        /* \"#utility.yul\":15104:15105   */\n      0x00\n        /* \"#utility.yul\":15093:15102   */\n      dup4\n        /* \"#utility.yul\":15089:15106   */\n      add\n        /* \"#utility.yul\":15082:15129   */\n      mstore\n        /* \"#utility.yul\":15146:15277   */\n      tag_460\n        /* \"#utility.yul\":15272:15276   */\n      dup2\n        /* \"#utility.yul\":15146:15277   */\n      tag_299\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":15138:15277   */\n      swap1\n      pop\n        /* \"#utility.yul\":14865:15284   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b3a3e26d4f5885b61719d20689a1f0e98a2228f68c4694fd1809740038907b8064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1088": {
									"entryPoint": null,
									"id": 1088,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_303": {
									"entryPoint": null,
									"id": 303,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_401": {
									"entryPoint": null,
									"id": 401,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_704": {
									"entryPoint": 529,
									"id": 704,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 334,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_671": {
									"entryPoint": 662,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2175,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1632,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2064,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1254,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1209,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1392,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1533,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1570,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7000:8",
										"nodeType": "YulBlock",
										"src": "0:7000:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "140:152:8",
													"nodeType": "YulBlock",
													"src": "140:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:8",
																		"nodeType": "YulLiteral",
																		"src": "157:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:8",
																		"nodeType": "YulLiteral",
																		"src": "160:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:8"
																},
																"nativeSrc": "150:88:8",
																"nodeType": "YulFunctionCall",
																"src": "150:88:8"
															},
															"nativeSrc": "150:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:8",
																		"nodeType": "YulLiteral",
																		"src": "254:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:8",
																		"nodeType": "YulLiteral",
																		"src": "257:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:8"
																},
																"nativeSrc": "247:15:8",
																"nodeType": "YulFunctionCall",
																"src": "247:15:8"
															},
															"nativeSrc": "247:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:8",
																		"nodeType": "YulLiteral",
																		"src": "278:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:8",
																		"nodeType": "YulLiteral",
																		"src": "281:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:8"
																},
																"nativeSrc": "271:15:8",
																"nodeType": "YulFunctionCall",
																"src": "271:15:8"
															},
															"nativeSrc": "271:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:8"
											},
											{
												"body": {
													"nativeSrc": "326:152:8",
													"nodeType": "YulBlock",
													"src": "326:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:8",
																		"nodeType": "YulLiteral",
																		"src": "343:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:8",
																		"nodeType": "YulLiteral",
																		"src": "346:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:8"
																},
																"nativeSrc": "336:88:8",
																"nodeType": "YulFunctionCall",
																"src": "336:88:8"
															},
															"nativeSrc": "336:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:8",
																		"nodeType": "YulLiteral",
																		"src": "440:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:8",
																		"nodeType": "YulLiteral",
																		"src": "443:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:8"
																},
																"nativeSrc": "433:15:8",
																"nodeType": "YulFunctionCall",
																"src": "433:15:8"
															},
															"nativeSrc": "433:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:8",
																		"nodeType": "YulLiteral",
																		"src": "464:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:8",
																		"nodeType": "YulLiteral",
																		"src": "467:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:8"
																},
																"nativeSrc": "457:15:8",
																"nodeType": "YulFunctionCall",
																"src": "457:15:8"
															},
															"nativeSrc": "457:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:8"
											},
											{
												"body": {
													"nativeSrc": "535:269:8",
													"nodeType": "YulBlock",
													"src": "535:269:8",
													"statements": [
														{
															"nativeSrc": "545:22:8",
															"nodeType": "YulAssignment",
															"src": "545:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:8",
																		"nodeType": "YulLiteral",
																		"src": "565:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:8"
																},
																"nativeSrc": "555:12:8",
																"nodeType": "YulFunctionCall",
																"src": "555:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:8"
																}
															]
														},
														{
															"nativeSrc": "576:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:8",
																		"nodeType": "YulLiteral",
																		"src": "612:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:8"
																},
																"nativeSrc": "602:12:8",
																"nodeType": "YulFunctionCall",
																"src": "602:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:8",
																	"nodeType": "YulTypedName",
																	"src": "580:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:8",
																"nodeType": "YulBlock",
																"src": "653:51:8",
																"statements": [
																	{
																		"nativeSrc": "667:27:8",
																		"nodeType": "YulAssignment",
																		"src": "667:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:8",
																					"nodeType": "YulLiteral",
																					"src": "689:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:8"
																			},
																			"nativeSrc": "677:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:8"
																},
																"nativeSrc": "626:26:8",
																"nodeType": "YulFunctionCall",
																"src": "626:26:8"
															},
															"nativeSrc": "623:81:8",
															"nodeType": "YulIf",
															"src": "623:81:8"
														},
														{
															"body": {
																"nativeSrc": "756:42:8",
																"nodeType": "YulBlock",
																"src": "756:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:8"
																			},
																			"nativeSrc": "770:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:8"
																		},
																		"nativeSrc": "770:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:8",
																				"nodeType": "YulLiteral",
																				"src": "751:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:8"
																		},
																		"nativeSrc": "740:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:8"
																},
																"nativeSrc": "717:38:8",
																"nodeType": "YulFunctionCall",
																"src": "717:38:8"
															},
															"nativeSrc": "714:84:8",
															"nodeType": "YulIf",
															"src": "714:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:8",
														"nodeType": "YulTypedName",
														"src": "519:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:8",
														"nodeType": "YulTypedName",
														"src": "528:6:8",
														"type": ""
													}
												],
												"src": "484:320:8"
											},
											{
												"body": {
													"nativeSrc": "864:87:8",
													"nodeType": "YulBlock",
													"src": "864:87:8",
													"statements": [
														{
															"nativeSrc": "874:11:8",
															"nodeType": "YulAssignment",
															"src": "874:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:8",
																"nodeType": "YulIdentifier",
																"src": "882:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:8",
																		"nodeType": "YulLiteral",
																		"src": "902:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:8"
																},
																"nativeSrc": "895:14:8",
																"nodeType": "YulFunctionCall",
																"src": "895:14:8"
															},
															"nativeSrc": "895:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:8"
														},
														{
															"nativeSrc": "918:26:8",
															"nodeType": "YulAssignment",
															"src": "918:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:8",
																		"nodeType": "YulLiteral",
																		"src": "936:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:8",
																		"nodeType": "YulLiteral",
																		"src": "939:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:8"
																},
																"nativeSrc": "926:18:8",
																"nodeType": "YulFunctionCall",
																"src": "926:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:8",
														"nodeType": "YulTypedName",
														"src": "851:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:8",
														"nodeType": "YulTypedName",
														"src": "859:4:8",
														"type": ""
													}
												],
												"src": "810:141:8"
											},
											{
												"body": {
													"nativeSrc": "1001:49:8",
													"nodeType": "YulBlock",
													"src": "1001:49:8",
													"statements": [
														{
															"nativeSrc": "1011:33:8",
															"nodeType": "YulAssignment",
															"src": "1011:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:8"
																		},
																		"nativeSrc": "1025:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:8"
																},
																"nativeSrc": "1021:23:8",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:8",
														"nodeType": "YulTypedName",
														"src": "984:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:8",
														"nodeType": "YulTypedName",
														"src": "994:6:8",
														"type": ""
													}
												],
												"src": "957:93:8"
											},
											{
												"body": {
													"nativeSrc": "1109:54:8",
													"nodeType": "YulBlock",
													"src": "1109:54:8",
													"statements": [
														{
															"nativeSrc": "1119:37:8",
															"nodeType": "YulAssignment",
															"src": "1119:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:8"
																},
																"nativeSrc": "1140:16:8",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:8",
														"nodeType": "YulTypedName",
														"src": "1084:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:8",
														"nodeType": "YulTypedName",
														"src": "1090:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:8",
														"nodeType": "YulTypedName",
														"src": "1100:8:8",
														"type": ""
													}
												],
												"src": "1056:107:8"
											},
											{
												"body": {
													"nativeSrc": "1245:317:8",
													"nodeType": "YulBlock",
													"src": "1245:317:8",
													"statements": [
														{
															"nativeSrc": "1255:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:8"
																},
																"nativeSrc": "1272:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:8",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:8",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:8"
																},
																"nativeSrc": "1311:97:8",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:8",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:8",
															"nodeType": "YulAssignment",
															"src": "1417:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:8"
																},
																"nativeSrc": "1429:39:8",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:8"
																}
															]
														},
														{
															"nativeSrc": "1477:30:8",
															"nodeType": "YulAssignment",
															"src": "1477:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:8"
																		},
																		"nativeSrc": "1497:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:8"
																},
																"nativeSrc": "1486:21:8",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:8"
																}
															]
														},
														{
															"nativeSrc": "1516:40:8",
															"nodeType": "YulAssignment",
															"src": "1516:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:8"
																		},
																		"nativeSrc": "1536:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:8"
																},
																"nativeSrc": "1526:30:8",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:8",
														"nodeType": "YulTypedName",
														"src": "1206:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:8",
														"nodeType": "YulTypedName",
														"src": "1213:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:8",
														"nodeType": "YulTypedName",
														"src": "1225:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:8",
														"nodeType": "YulTypedName",
														"src": "1238:6:8",
														"type": ""
													}
												],
												"src": "1169:393:8"
											},
											{
												"body": {
													"nativeSrc": "1613:32:8",
													"nodeType": "YulBlock",
													"src": "1613:32:8",
													"statements": [
														{
															"nativeSrc": "1623:16:8",
															"nodeType": "YulAssignment",
															"src": "1623:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:8",
																"nodeType": "YulIdentifier",
																"src": "1634:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:8",
														"nodeType": "YulTypedName",
														"src": "1595:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:8",
														"nodeType": "YulTypedName",
														"src": "1605:7:8",
														"type": ""
													}
												],
												"src": "1568:77:8"
											},
											{
												"body": {
													"nativeSrc": "1683:28:8",
													"nodeType": "YulBlock",
													"src": "1683:28:8",
													"statements": [
														{
															"nativeSrc": "1693:12:8",
															"nodeType": "YulAssignment",
															"src": "1693:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:8",
																"nodeType": "YulIdentifier",
																"src": "1700:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:8",
														"nodeType": "YulTypedName",
														"src": "1669:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:8",
														"nodeType": "YulTypedName",
														"src": "1679:3:8",
														"type": ""
													}
												],
												"src": "1651:60:8"
											},
											{
												"body": {
													"nativeSrc": "1777:82:8",
													"nodeType": "YulBlock",
													"src": "1777:82:8",
													"statements": [
														{
															"nativeSrc": "1787:66:8",
															"nodeType": "YulAssignment",
															"src": "1787:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:8"
																				},
																				"nativeSrc": "1827:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:8"
																		},
																		"nativeSrc": "1818:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:8"
																},
																"nativeSrc": "1800:53:8",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:8",
														"nodeType": "YulTypedName",
														"src": "1757:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:8",
														"nodeType": "YulTypedName",
														"src": "1767:9:8",
														"type": ""
													}
												],
												"src": "1717:142:8"
											},
											{
												"body": {
													"nativeSrc": "1912:28:8",
													"nodeType": "YulBlock",
													"src": "1912:28:8",
													"statements": [
														{
															"nativeSrc": "1922:12:8",
															"nodeType": "YulAssignment",
															"src": "1922:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:8",
																"nodeType": "YulIdentifier",
																"src": "1929:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:8",
														"nodeType": "YulTypedName",
														"src": "1898:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:8",
														"nodeType": "YulTypedName",
														"src": "1908:3:8",
														"type": ""
													}
												],
												"src": "1865:75:8"
											},
											{
												"body": {
													"nativeSrc": "2022:193:8",
													"nodeType": "YulBlock",
													"src": "2022:193:8",
													"statements": [
														{
															"nativeSrc": "2032:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:8"
																},
																"nativeSrc": "2056:39:8",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:8",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:8"
																				},
																				"nativeSrc": "2145:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:8"
																				},
																				"nativeSrc": "2166:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:8"
																		},
																		"nativeSrc": "2117:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:8"
																},
																"nativeSrc": "2104:105:8",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:8"
															},
															"nativeSrc": "2104:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:8",
														"nodeType": "YulTypedName",
														"src": "1999:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:8",
														"nodeType": "YulTypedName",
														"src": "2005:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:8",
														"nodeType": "YulTypedName",
														"src": "2013:7:8",
														"type": ""
													}
												],
												"src": "1946:269:8"
											},
											{
												"body": {
													"nativeSrc": "2270:24:8",
													"nodeType": "YulBlock",
													"src": "2270:24:8",
													"statements": [
														{
															"nativeSrc": "2280:8:8",
															"nodeType": "YulAssignment",
															"src": "2280:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:8",
																"nodeType": "YulLiteral",
																"src": "2287:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:8",
														"nodeType": "YulTypedName",
														"src": "2266:3:8",
														"type": ""
													}
												],
												"src": "2221:73:8"
											},
											{
												"body": {
													"nativeSrc": "2353:136:8",
													"nodeType": "YulBlock",
													"src": "2353:136:8",
													"statements": [
														{
															"nativeSrc": "2363:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:8"
																},
																"nativeSrc": "2377:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:8"
																},
																"nativeSrc": "2418:65:8",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:8"
															},
															"nativeSrc": "2418:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:8",
														"nodeType": "YulTypedName",
														"src": "2339:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:8",
														"nodeType": "YulTypedName",
														"src": "2345:6:8",
														"type": ""
													}
												],
												"src": "2300:189:8"
											},
											{
												"body": {
													"nativeSrc": "2545:136:8",
													"nodeType": "YulBlock",
													"src": "2545:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:8",
																"nodeType": "YulBlock",
																"src": "2612:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:8"
																			},
																			"nativeSrc": "2626:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:8"
																		},
																		"nativeSrc": "2626:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:8"
																},
																"nativeSrc": "2562:14:8",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:8"
															},
															"nativeSrc": "2555:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:8",
																"nodeType": "YulBlock",
																"src": "2577:26:8",
																"statements": [
																	{
																		"nativeSrc": "2579:22:8",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:8"
																			},
																			"nativeSrc": "2588:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:8",
																"nodeType": "YulBlock",
																"src": "2559:2:8",
																"statements": []
															},
															"src": "2555:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:8",
														"nodeType": "YulTypedName",
														"src": "2533:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:8",
														"nodeType": "YulTypedName",
														"src": "2540:3:8",
														"type": ""
													}
												],
												"src": "2495:186:8"
											},
											{
												"body": {
													"nativeSrc": "2766:464:8",
													"nodeType": "YulBlock",
													"src": "2766:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:8",
																"nodeType": "YulBlock",
																"src": "2792:431:8",
																"statements": [
																	{
																		"nativeSrc": "2806:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:8"
																			},
																			"nativeSrc": "2822:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:8",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:8"
																					},
																					"nativeSrc": "2906:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:8"
																			},
																			"nativeSrc": "2892:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:8",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:8",
																			"nodeType": "YulBlock",
																			"src": "3093:27:8",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:8",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:8",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:8"
																			},
																			"nativeSrc": "3074:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:8"
																		},
																		"nativeSrc": "3071:49:8",
																		"nodeType": "YulIf",
																		"src": "3071:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:8"
																							},
																							"nativeSrc": "3189:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:8"
																					},
																					"nativeSrc": "3175:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:8"
																			},
																			"nativeSrc": "3133:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:8"
																		},
																		"nativeSrc": "3133:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:8"
																},
																"nativeSrc": "2780:11:8",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:8"
															},
															"nativeSrc": "2777:446:8",
															"nodeType": "YulIf",
															"src": "2777:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:8",
														"nodeType": "YulTypedName",
														"src": "2742:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:8",
														"nodeType": "YulTypedName",
														"src": "2749:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:8",
														"nodeType": "YulTypedName",
														"src": "2754:10:8",
														"type": ""
													}
												],
												"src": "2687:543:8"
											},
											{
												"body": {
													"nativeSrc": "3299:54:8",
													"nodeType": "YulBlock",
													"src": "3299:54:8",
													"statements": [
														{
															"nativeSrc": "3309:37:8",
															"nodeType": "YulAssignment",
															"src": "3309:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:8"
																},
																"nativeSrc": "3330:16:8",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:8",
														"nodeType": "YulTypedName",
														"src": "3274:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:8",
														"nodeType": "YulTypedName",
														"src": "3280:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:8",
														"nodeType": "YulTypedName",
														"src": "3290:8:8",
														"type": ""
													}
												],
												"src": "3236:117:8"
											},
											{
												"body": {
													"nativeSrc": "3410:118:8",
													"nodeType": "YulBlock",
													"src": "3410:118:8",
													"statements": [
														{
															"nativeSrc": "3420:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:8"
																				},
																				"nativeSrc": "3465:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:8"
																				},
																				"nativeSrc": "3480:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:8"
																		},
																		"nativeSrc": "3436:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:8"
																},
																"nativeSrc": "3432:56:8",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:8",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:8",
															"nodeType": "YulAssignment",
															"src": "3497:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:8"
																},
																"nativeSrc": "3507:15:8",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:8",
														"nodeType": "YulTypedName",
														"src": "3387:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:8",
														"nodeType": "YulTypedName",
														"src": "3393:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:8",
														"nodeType": "YulTypedName",
														"src": "3403:6:8",
														"type": ""
													}
												],
												"src": "3359:169:8"
											},
											{
												"body": {
													"nativeSrc": "3614:214:8",
													"nodeType": "YulBlock",
													"src": "3614:214:8",
													"statements": [
														{
															"nativeSrc": "3747:37:8",
															"nodeType": "YulAssignment",
															"src": "3747:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:8"
																},
																"nativeSrc": "3755:29:8",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:8"
																}
															]
														},
														{
															"nativeSrc": "3793:29:8",
															"nodeType": "YulAssignment",
															"src": "3793:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:8"
																		},
																		"nativeSrc": "3810:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:8"
																},
																"nativeSrc": "3801:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:8",
														"nodeType": "YulTypedName",
														"src": "3595:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:8",
														"nodeType": "YulTypedName",
														"src": "3601:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:8",
														"nodeType": "YulTypedName",
														"src": "3609:4:8",
														"type": ""
													}
												],
												"src": "3533:295:8"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:8",
													"nodeType": "YulBlock",
													"src": "3925:1303:8",
													"statements": [
														{
															"nativeSrc": "3936:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:8"
																},
																"nativeSrc": "3950:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:8",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:8",
																"nodeType": "YulBlock",
																"src": "4072:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:8"
																			},
																			"nativeSrc": "4074:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:8"
																		},
																		"nativeSrc": "4074:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:8",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:8"
																},
																"nativeSrc": "4041:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:8"
															},
															"nativeSrc": "4038:56:8",
															"nodeType": "YulIf",
															"src": "4038:56:8"
														},
														{
															"nativeSrc": "4104:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:8"
																		},
																		"nativeSrc": "4144:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:8"
																},
																"nativeSrc": "4118:38:8",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:8",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:8"
																},
																"nativeSrc": "4203:67:8",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:8"
															},
															"nativeSrc": "4203:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:8"
														},
														{
															"nativeSrc": "4280:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:8",
																"nodeType": "YulLiteral",
																"src": "4297:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:8",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:8",
															"nodeType": "YulAssignment",
															"src": "4308:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:8",
																"nodeType": "YulLiteral",
																"src": "4321:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:8",
																		"nodeType": "YulBlock",
																		"src": "4372:611:8",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:8",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:8"
																							},
																							"nativeSrc": "4413:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:8"
																					},
																					"nativeSrc": "4401:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:8",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:8"
																					},
																					"nativeSrc": "4451:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:8",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:8",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:8",
																					"nodeType": "YulBlock",
																					"src": "4569:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:8"
																												},
																												"nativeSrc": "4608:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:8"
																										},
																										"nativeSrc": "4602:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:8"
																								},
																								"nativeSrc": "4587:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:8"
																							},
																							"nativeSrc": "4587:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:8"
																						},
																						{
																							"nativeSrc": "4646:24:8",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:8",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:8"
																								},
																								"nativeSrc": "4656:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:8",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:8",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:8"
																								},
																								"nativeSrc": "4700:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:8"
																					},
																					"nativeSrc": "4532:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:8"
																				},
																				"nativeSrc": "4524:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:8",
																					"nodeType": "YulBlock",
																					"src": "4547:21:8",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:8",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:8",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:8"
																								},
																								"nativeSrc": "4554:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:8",
																					"nodeType": "YulBlock",
																					"src": "4528:3:8",
																					"statements": []
																				},
																				"src": "4524:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:8",
																					"nodeType": "YulBlock",
																					"src": "4768:156:8",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:8"
																										},
																										"nativeSrc": "4809:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:8"
																								},
																								"nativeSrc": "4803:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:8",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:8",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:8"
																												},
																												"nativeSrc": "4891:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:8"
																										},
																										"nativeSrc": "4861:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:8"
																								},
																								"nativeSrc": "4846:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:8"
																							},
																							"nativeSrc": "4846:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:8"
																					},
																					"nativeSrc": "4748:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:8"
																				},
																				"nativeSrc": "4745:179:8",
																				"nodeType": "YulIf",
																				"src": "4745:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:8",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:8"
																									},
																									"nativeSrc": "4954:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:8",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:8"
																							},
																							"nativeSrc": "4950:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:8"
																					},
																					"nativeSrc": "4937:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:8"
																				},
																				"nativeSrc": "4937:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:8"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:8",
																	"nodeType": "YulCase",
																	"src": "4365:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:8",
																		"nodeType": "YulBlock",
																		"src": "5000:222:8",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:8",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:8",
																					"nodeType": "YulBlock",
																					"src": "5051:67:8",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:8",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:8"
																										},
																										"nativeSrc": "5084:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:8"
																								},
																								"nativeSrc": "5078:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:8"
																				},
																				"nativeSrc": "5041:77:8",
																				"nodeType": "YulIf",
																				"src": "5041:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:8"
																							},
																							"nativeSrc": "5144:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:8"
																					},
																					"nativeSrc": "5131:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:8"
																				},
																				"nativeSrc": "5131:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:8"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:8",
																	"nodeType": "YulCase",
																	"src": "4992:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:8"
																},
																"nativeSrc": "4342:14:8",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:8"
															},
															"nativeSrc": "4335:887:8",
															"nodeType": "YulSwitch",
															"src": "4335:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:8",
														"nodeType": "YulTypedName",
														"src": "3914:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:8",
														"nodeType": "YulTypedName",
														"src": "3920:3:8",
														"type": ""
													}
												],
												"src": "3833:1395:8"
											},
											{
												"body": {
													"nativeSrc": "5279:81:8",
													"nodeType": "YulBlock",
													"src": "5279:81:8",
													"statements": [
														{
															"nativeSrc": "5289:65:8",
															"nodeType": "YulAssignment",
															"src": "5289:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:8",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:8"
																},
																"nativeSrc": "5300:54:8",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:8",
														"nodeType": "YulTypedName",
														"src": "5261:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:8",
														"nodeType": "YulTypedName",
														"src": "5271:7:8",
														"type": ""
													}
												],
												"src": "5234:126:8"
											},
											{
												"body": {
													"nativeSrc": "5411:51:8",
													"nodeType": "YulBlock",
													"src": "5411:51:8",
													"statements": [
														{
															"nativeSrc": "5421:35:8",
															"nodeType": "YulAssignment",
															"src": "5421:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:8"
																},
																"nativeSrc": "5432:24:8",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:8",
														"nodeType": "YulTypedName",
														"src": "5393:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:8",
														"nodeType": "YulTypedName",
														"src": "5403:7:8",
														"type": ""
													}
												],
												"src": "5366:96:8"
											},
											{
												"body": {
													"nativeSrc": "5533:53:8",
													"nodeType": "YulBlock",
													"src": "5533:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:8"
																		},
																		"nativeSrc": "5555:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:8"
																},
																"nativeSrc": "5543:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:8"
															},
															"nativeSrc": "5543:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:8",
														"nodeType": "YulTypedName",
														"src": "5521:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:8",
														"nodeType": "YulTypedName",
														"src": "5528:3:8",
														"type": ""
													}
												],
												"src": "5468:118:8"
											},
											{
												"body": {
													"nativeSrc": "5690:124:8",
													"nodeType": "YulBlock",
													"src": "5690:124:8",
													"statements": [
														{
															"nativeSrc": "5700:26:8",
															"nodeType": "YulAssignment",
															"src": "5700:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:8"
																},
																"nativeSrc": "5708:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:8"
																		},
																		"nativeSrc": "5789:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:8"
																},
																"nativeSrc": "5736:71:8",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:8"
															},
															"nativeSrc": "5736:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:8",
														"nodeType": "YulTypedName",
														"src": "5662:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:8",
														"nodeType": "YulTypedName",
														"src": "5674:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:8",
														"nodeType": "YulTypedName",
														"src": "5685:4:8",
														"type": ""
													}
												],
												"src": "5592:222:8"
											},
											{
												"body": {
													"nativeSrc": "5848:152:8",
													"nodeType": "YulBlock",
													"src": "5848:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5865:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5865:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5868:77:8",
																		"nodeType": "YulLiteral",
																		"src": "5868:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5858:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5858:6:8"
																},
																"nativeSrc": "5858:88:8",
																"nodeType": "YulFunctionCall",
																"src": "5858:88:8"
															},
															"nativeSrc": "5858:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "5858:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5962:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5962:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5965:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5965:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5955:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5955:6:8"
																},
																"nativeSrc": "5955:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5955:15:8"
															},
															"nativeSrc": "5955:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5955:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5986:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5986:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5989:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5989:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5979:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5979:6:8"
																},
																"nativeSrc": "5979:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5979:15:8"
															},
															"nativeSrc": "5979:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5979:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5820:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "5820:180:8"
											},
											{
												"body": {
													"nativeSrc": "6050:147:8",
													"nodeType": "YulBlock",
													"src": "6050:147:8",
													"statements": [
														{
															"nativeSrc": "6060:25:8",
															"nodeType": "YulAssignment",
															"src": "6060:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6083:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6083:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6065:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "6065:17:8"
																},
																"nativeSrc": "6065:20:8",
																"nodeType": "YulFunctionCall",
																"src": "6065:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6060:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "6060:1:8"
																}
															]
														},
														{
															"nativeSrc": "6094:25:8",
															"nodeType": "YulAssignment",
															"src": "6094:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6117:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6117:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6099:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "6099:17:8"
																},
																"nativeSrc": "6099:20:8",
																"nodeType": "YulFunctionCall",
																"src": "6099:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6094:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "6094:1:8"
																}
															]
														},
														{
															"nativeSrc": "6128:16:8",
															"nodeType": "YulAssignment",
															"src": "6128:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6139:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6139:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6142:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6142:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6135:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6135:3:8"
																},
																"nativeSrc": "6135:9:8",
																"nodeType": "YulFunctionCall",
																"src": "6135:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6128:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6128:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6168:22:8",
																"nodeType": "YulBlock",
																"src": "6168:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6170:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "6170:16:8"
																			},
																			"nativeSrc": "6170:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6170:18:8"
																		},
																		"nativeSrc": "6170:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6170:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6160:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6160:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6163:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6163:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6157:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6157:2:8"
																},
																"nativeSrc": "6157:10:8",
																"nodeType": "YulFunctionCall",
																"src": "6157:10:8"
															},
															"nativeSrc": "6154:36:8",
															"nodeType": "YulIf",
															"src": "6154:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6006:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6037:1:8",
														"nodeType": "YulTypedName",
														"src": "6037:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6040:1:8",
														"nodeType": "YulTypedName",
														"src": "6040:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6046:3:8",
														"nodeType": "YulTypedName",
														"src": "6046:3:8",
														"type": ""
													}
												],
												"src": "6006:191:8"
											},
											{
												"body": {
													"nativeSrc": "6268:53:8",
													"nodeType": "YulBlock",
													"src": "6268:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6285:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6285:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6308:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6308:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6290:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "6290:17:8"
																		},
																		"nativeSrc": "6290:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6290:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6278:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6278:6:8"
																},
																"nativeSrc": "6278:37:8",
																"nodeType": "YulFunctionCall",
																"src": "6278:37:8"
															},
															"nativeSrc": "6278:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "6278:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "6203:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6256:5:8",
														"nodeType": "YulTypedName",
														"src": "6256:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6263:3:8",
														"nodeType": "YulTypedName",
														"src": "6263:3:8",
														"type": ""
													}
												],
												"src": "6203:118:8"
											},
											{
												"body": {
													"nativeSrc": "6481:288:8",
													"nodeType": "YulBlock",
													"src": "6481:288:8",
													"statements": [
														{
															"nativeSrc": "6491:26:8",
															"nodeType": "YulAssignment",
															"src": "6491:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6503:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6503:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6514:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6514:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6499:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6499:3:8"
																},
																"nativeSrc": "6499:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6499:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6491:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6491:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6571:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6571:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6584:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6584:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6595:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6595:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6580:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6580:3:8"
																		},
																		"nativeSrc": "6580:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6580:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6527:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6527:43:8"
																},
																"nativeSrc": "6527:71:8",
																"nodeType": "YulFunctionCall",
																"src": "6527:71:8"
															},
															"nativeSrc": "6527:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "6527:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6652:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6652:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6665:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6665:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6676:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6676:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6661:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6661:3:8"
																		},
																		"nativeSrc": "6661:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6661:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6608:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6608:43:8"
																},
																"nativeSrc": "6608:72:8",
																"nodeType": "YulFunctionCall",
																"src": "6608:72:8"
															},
															"nativeSrc": "6608:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "6608:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6734:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6734:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6747:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6747:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6758:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6758:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6743:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6743:3:8"
																		},
																		"nativeSrc": "6743:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6743:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6690:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6690:43:8"
																},
																"nativeSrc": "6690:72:8",
																"nodeType": "YulFunctionCall",
																"src": "6690:72:8"
															},
															"nativeSrc": "6690:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "6690:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6327:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6437:9:8",
														"nodeType": "YulTypedName",
														"src": "6437:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6449:6:8",
														"nodeType": "YulTypedName",
														"src": "6449:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6457:6:8",
														"nodeType": "YulTypedName",
														"src": "6457:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6465:6:8",
														"nodeType": "YulTypedName",
														"src": "6465:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6476:4:8",
														"nodeType": "YulTypedName",
														"src": "6476:4:8",
														"type": ""
													}
												],
												"src": "6327:442:8"
											},
											{
												"body": {
													"nativeSrc": "6873:124:8",
													"nodeType": "YulBlock",
													"src": "6873:124:8",
													"statements": [
														{
															"nativeSrc": "6883:26:8",
															"nodeType": "YulAssignment",
															"src": "6883:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6895:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6895:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6906:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6906:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6891:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6891:3:8"
																},
																"nativeSrc": "6891:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6891:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6883:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6883:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6963:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6963:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6976:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6976:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6987:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6987:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6972:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6972:3:8"
																		},
																		"nativeSrc": "6972:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6972:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6919:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6919:43:8"
																},
																"nativeSrc": "6919:71:8",
																"nodeType": "YulFunctionCall",
																"src": "6919:71:8"
															},
															"nativeSrc": "6919:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "6919:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6775:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6845:9:8",
														"nodeType": "YulTypedName",
														"src": "6845:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6857:6:8",
														"nodeType": "YulTypedName",
														"src": "6857:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6868:4:8",
														"nodeType": "YulTypedName",
														"src": "6868:4:8",
														"type": ""
													}
												],
												"src": "6775:222:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7374616B656420586F7261000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7374584F52410000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x6E9 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x6E9 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11E DUP2 PUSH2 0x14E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x142 ADDRESS PUSH11 0x24A0A79C2149432B000000 PUSH2 0x211 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST TIMESTAMP PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x8CD JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x281 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x292 PUSH0 DUP4 DUP4 PUSH2 0x296 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2E6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x83D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3B4 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x36F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x366 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x87F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3FB JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x445 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x8B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x52A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x53D JUMPI PUSH2 0x53C PUSH2 0x4E6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x59F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x564 JUMP JUMPDEST PUSH2 0x5A9 DUP7 DUP4 PUSH2 0x564 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5ED PUSH2 0x5E8 PUSH2 0x5E3 DUP5 PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x5CA JUMP JUMPDEST PUSH2 0x5C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x606 DUP4 PUSH2 0x5D3 JUMP JUMPDEST PUSH2 0x61A PUSH2 0x612 DUP3 PUSH2 0x5F4 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x570 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x62E PUSH2 0x622 JUMP JUMPDEST PUSH2 0x639 DUP2 DUP5 DUP5 PUSH2 0x5FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x65C JUMPI PUSH2 0x651 PUSH0 DUP3 PUSH2 0x626 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x63F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x6A1 JUMPI PUSH2 0x672 DUP2 PUSH2 0x543 JUMP JUMPDEST PUSH2 0x67B DUP5 PUSH2 0x555 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x68A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x69E PUSH2 0x696 DUP6 PUSH2 0x555 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x63E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6C1 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x6A6 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6D9 DUP4 DUP4 PUSH2 0x6B2 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6F2 DUP3 PUSH2 0x4AF JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x70B JUMPI PUSH2 0x70A PUSH2 0x4B9 JUMP JUMPDEST JUMPDEST PUSH2 0x715 DUP3 SLOAD PUSH2 0x513 JUMP JUMPDEST PUSH2 0x720 DUP3 DUP3 DUP6 PUSH2 0x660 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x751 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x73F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x749 DUP6 DUP3 PUSH2 0x6CE JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x7B0 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x75F DUP7 PUSH2 0x543 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x786 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x761 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x7A3 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x79F PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x6B2 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7E1 DUP3 PUSH2 0x7B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7F1 DUP2 PUSH2 0x7D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x80A PUSH0 DUP4 ADD DUP5 PUSH2 0x7E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x847 DUP3 PUSH2 0x5C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x852 DUP4 PUSH2 0x5C1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x86A JUMPI PUSH2 0x869 PUSH2 0x810 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x879 DUP2 PUSH2 0x5C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x892 PUSH0 DUP4 ADD DUP7 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x89F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x870 JUMP JUMPDEST PUSH2 0x8AC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x870 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8C7 PUSH0 DUP4 ADD DUP5 PUSH2 0x870 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D97 DUP1 PUSH2 0x8DA PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0xB544BF83 EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0xF7C899A1 EQ PUSH2 0x41B JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x7ACB7757 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x8879F730 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x345 JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x3BC46A3F EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x5997BB37 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x5DCC9391 EQ PUSH2 0x2A1 JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH3 0xF714CE EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xCD43D5D EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1CB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0x439 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x167 PUSH2 0x644 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x16E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x1700 JUMP JUMPDEST PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x1758 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B5 PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D3 PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x1799 JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x1758 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x17E9 JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x251 PUSH2 0x747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1848 JUMP JUMPDEST PUSH2 0x74F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28B PUSH2 0x99A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH2 0x99F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x17E9 JUMP JUMPDEST PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH2 0x9EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x313 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0x9FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x17E9 JUMP JUMPDEST PUSH2 0xBDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34D PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36B PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x16E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x1700 JUMP JUMPDEST PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x1758 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B9 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH2 0xCD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x419 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x17E9 JUMP JUMPDEST PUSH2 0xD53 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x423 PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x1934 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B0 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4C2 DUP3 PUSH2 0x74F JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x54E SWAP2 SWAP1 PUSH2 0x19E2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B1 SWAP3 SWAP2 SWAP1 PUSH2 0x1A15 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5CD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x1A66 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x638 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x653 SWAP1 PUSH2 0x1ABE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x67F SWAP1 PUSH2 0x1ABE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6CA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6A1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6CA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6AD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6DE PUSH2 0xDFC JUMP JUMPDEST SWAP1 POP PUSH2 0x6EB DUP2 DUP6 DUP6 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x19 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x70E PUSH2 0xDFC JUMP JUMPDEST SWAP1 POP PUSH2 0x71B DUP6 DUP3 DUP6 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x726 DUP6 DUP6 DUP6 PUSH2 0xEA7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x757 PUSH2 0xF97 JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x7D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CE SWAP1 PUSH2 0x1B38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x822 SWAP2 SWAP1 PUSH2 0x19E2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB SLOAD TIMESTAMP PUSH2 0x833 SWAP2 SWAP1 PUSH2 0x19E2 JUMP JUMPDEST SWAP1 POP PUSH3 0x76A700 DUP2 LT ISZERO PUSH2 0x87A JUMPI PUSH4 0x1E13380 PUSH1 0x64 PUSH2 0x851 SWAP2 SWAP1 PUSH2 0x1B56 JUMP JUMPDEST DUP3 PUSH1 0x19 DUP7 PUSH2 0x85F SWAP2 SWAP1 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0x869 SWAP2 SWAP1 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0x873 SWAP2 SWAP1 PUSH2 0x1BC4 JUMP JUMPDEST SWAP3 POP PUSH2 0x8B0 JUMP JUMPDEST PUSH4 0x1E13380 PUSH1 0x64 PUSH2 0x88B SWAP2 SWAP1 PUSH2 0x1B56 JUMP JUMPDEST DUP3 PUSH1 0xF DUP7 PUSH2 0x899 SWAP2 SWAP1 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0x8A3 SWAP2 SWAP1 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0x8AD SWAP2 SWAP1 PUSH2 0x1BC4 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH0 DUP4 GT PUSH2 0x8F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E9 SWAP1 PUSH2 0x1C3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8FC CALLER DUP5 PUSH2 0xFE6 JUMP JUMPDEST TIMESTAMP PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE DUP5 PUSH1 0x40 MLOAD PUSH2 0x984 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x997 PUSH2 0x1065 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xF DUP2 JUMP JUMPDEST PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F4 PUSH2 0x106F JUMP JUMPDEST PUSH2 0x9FD PUSH0 PUSH2 0x10F6 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA07 PUSH2 0xF97 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C5C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAC1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAE5 SWAP2 SWAP1 PUSH2 0x1A66 JUMP JUMPDEST POP DUP2 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB32 SWAP2 SWAP1 PUSH2 0x1C91 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xA DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP4 PUSH1 0x40 MLOAD PUSH2 0xBC8 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xBD8 PUSH2 0x1065 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xC28 SWAP1 PUSH2 0x1ABE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC54 SWAP1 PUSH2 0x1ABE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC9F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC76 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC9F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC82 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xCB3 PUSH2 0xDFC JUMP JUMPDEST SWAP1 POP PUSH2 0xCC0 DUP2 DUP6 DUP6 PUSH2 0xEA7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD5B PUSH2 0x106F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDCB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC2 SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDD4 DUP2 PUSH2 0x10F6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE10 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE20 DUP5 DUP5 PUSH2 0xCD1 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xEA1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xE92 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE89 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA0 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x11B9 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF17 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0E SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF87 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF7E SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF92 DUP4 DUP4 DUP4 PUSH2 0x1388 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xFDC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD3 SWAP1 PUSH2 0x1D43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1056 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104D SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1061 PUSH0 DUP4 DUP4 PUSH2 0x1388 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1077 PUSH2 0xDFC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1095 PUSH2 0xBF1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10F4 JUMPI PUSH2 0x10B8 PUSH2 0xDFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10EB SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1229 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1220 SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1299 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1290 SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1382 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1379 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13D8 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x13CC SWAP2 SWAP1 PUSH2 0x1C91 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x14A6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1461 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1458 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14ED JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1537 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1594 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B7 DUP2 PUSH2 0x15A5 JUMP JUMPDEST DUP2 EQ PUSH2 0x15C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15D2 DUP2 PUSH2 0x15AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1601 DUP3 PUSH2 0x15D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1611 DUP2 PUSH2 0x15F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x161B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x162C DUP2 PUSH2 0x1608 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1648 JUMPI PUSH2 0x1647 PUSH2 0x15A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1655 DUP6 DUP3 DUP7 ADD PUSH2 0x15C4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1666 DUP6 DUP3 DUP7 ADD PUSH2 0x161E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16B2 DUP3 PUSH2 0x1670 JUMP JUMPDEST PUSH2 0x16BC DUP2 DUP6 PUSH2 0x167A JUMP JUMPDEST SWAP4 POP PUSH2 0x16CC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x168A JUMP JUMPDEST PUSH2 0x16D5 DUP2 PUSH2 0x1698 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16F8 DUP2 DUP5 PUSH2 0x16A8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1716 JUMPI PUSH2 0x1715 PUSH2 0x15A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1723 DUP6 DUP3 DUP7 ADD PUSH2 0x161E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1734 DUP6 DUP3 DUP7 ADD PUSH2 0x15C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1752 DUP2 PUSH2 0x173E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x176B PUSH0 DUP4 ADD DUP5 PUSH2 0x1749 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x177A DUP2 PUSH2 0x15A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1793 PUSH0 DUP4 ADD DUP5 PUSH2 0x1771 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17B0 JUMPI PUSH2 0x17AF PUSH2 0x15A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17BD DUP7 DUP3 DUP8 ADD PUSH2 0x161E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x17CE DUP7 DUP3 DUP8 ADD PUSH2 0x161E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x17DF DUP7 DUP3 DUP8 ADD PUSH2 0x15C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17FE JUMPI PUSH2 0x17FD PUSH2 0x15A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x180B DUP5 DUP3 DUP6 ADD PUSH2 0x161E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1829 DUP2 PUSH2 0x1814 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1842 PUSH0 DUP4 ADD DUP5 PUSH2 0x1820 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x185D JUMPI PUSH2 0x185C PUSH2 0x15A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x186A DUP5 DUP3 DUP6 ADD PUSH2 0x15C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x187C DUP2 PUSH2 0x15F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1895 PUSH0 DUP4 ADD DUP5 PUSH2 0x1873 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18B1 JUMPI PUSH2 0x18B0 PUSH2 0x15A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18BE DUP6 DUP3 DUP7 ADD PUSH2 0x161E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18CF DUP6 DUP3 DUP7 ADD PUSH2 0x161E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18FC PUSH2 0x18F7 PUSH2 0x18F2 DUP5 PUSH2 0x15D8 JUMP JUMPDEST PUSH2 0x18D9 JUMP JUMPDEST PUSH2 0x15D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x190D DUP3 PUSH2 0x18E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x191E DUP3 PUSH2 0x1903 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x192E DUP2 PUSH2 0x1914 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1947 PUSH0 DUP4 ADD DUP5 PUSH2 0x1925 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1981 PUSH1 0x14 DUP4 PUSH2 0x167A JUMP JUMPDEST SWAP2 POP PUSH2 0x198C DUP3 PUSH2 0x194D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19AE DUP2 PUSH2 0x1975 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x19EC DUP3 PUSH2 0x15A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x19F7 DUP4 PUSH2 0x15A5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1A0F JUMPI PUSH2 0x1A0E PUSH2 0x19B5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A28 PUSH0 DUP4 ADD DUP6 PUSH2 0x1873 JUMP JUMPDEST PUSH2 0x1A35 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1771 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1A45 DUP2 PUSH2 0x173E JUMP JUMPDEST DUP2 EQ PUSH2 0x1A4F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A60 DUP2 PUSH2 0x1A3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A7B JUMPI PUSH2 0x1A7A PUSH2 0x15A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A88 DUP5 DUP3 DUP6 ADD PUSH2 0x1A52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1AD5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AE8 JUMPI PUSH2 0x1AE7 PUSH2 0x1A91 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x796F7520646F6E6F74206861766520656E6F7570682062616C616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B22 PUSH1 0x1D DUP4 PUSH2 0x167A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B2D DUP3 PUSH2 0x1AEE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B4F DUP2 PUSH2 0x1B16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B60 DUP3 PUSH2 0x15A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B6B DUP4 PUSH2 0x15A5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1B79 DUP2 PUSH2 0x15A5 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1B90 JUMPI PUSH2 0x1B8F PUSH2 0x19B5 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1BCE DUP3 PUSH2 0x15A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD9 DUP4 PUSH2 0x15A5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1BE9 JUMPI PUSH2 0x1BE8 PUSH2 0x1B97 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F207265776172647320746F20636C61696D00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C28 PUSH1 0x13 DUP4 PUSH2 0x167A JUMP JUMPDEST SWAP2 POP PUSH2 0x1C33 DUP3 PUSH2 0x1BF4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C55 DUP2 PUSH2 0x1C1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C6F PUSH0 DUP4 ADD DUP7 PUSH2 0x1873 JUMP JUMPDEST PUSH2 0x1C7C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1873 JUMP JUMPDEST PUSH2 0x1C89 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1771 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C9B DUP3 PUSH2 0x15A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CA6 DUP4 PUSH2 0x15A5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1CBE JUMPI PUSH2 0x1CBD PUSH2 0x19B5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CD7 PUSH0 DUP4 ADD DUP7 PUSH2 0x1873 JUMP JUMPDEST PUSH2 0x1CE4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1771 JUMP JUMPDEST PUSH2 0x1CF1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1771 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D2D PUSH1 0x1F DUP4 PUSH2 0x167A JUMP JUMPDEST SWAP2 POP PUSH2 0x1D38 DUP3 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D5A DUP2 PUSH2 0x1D21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 LOG3 0xE2 PUSH14 0x4F5885B61719D20689A1F0E98A22 0x28 0xF6 DUP13 CHAINID SWAP5 REVERT XOR MULMOD PUSH21 0x38907B8064736F6C634300081A00330000000000 ",
							"sourceMap": "288:2274:7:-:0;;;885:165;;;;;;;;;;907:10;1601:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:2;1821:7;:22;;;;960:43:7::2;974:4;981:21;960:5;;;:43;;:::i;:::-;1028:15;1013:12;:30;;;;288:2274:::0;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7466:208:3:-;7555:1;7536:21;;:7;:21;;;7532:91;;7609:1;7580:32;;;;;;;;;;;:::i;:::-;;;;;;;;7532:91;7632:35;7648:1;7652:7;7661:5;7632:7;;;:35;;:::i;:::-;7466:208;;:::o;6016:1107::-;6121:1;6105:18;;:4;:18;;;6101:540;;6257:5;6241:12;;:21;;;;;;;:::i;:::-;;;;;;;;6101:540;;;6293:19;6315:9;:15;6325:4;6315:15;;;;;;;;;;;;;;;;6293:37;;6362:5;6348:11;:19;6344:115;;;6419:4;6425:11;6438:5;6394:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6344:115;6611:5;6597:11;:19;6579:9;:15;6589:4;6579:15;;;;;;;;;;;;;;;:37;;;;6279:362;6101:540;6669:1;6655:16;;:2;:16;;;6651:425;;6834:5;6818:12;;:21;;;;;;;;;;;6651:425;;;7046:5;7029:9;:13;7039:2;7029:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6651:425;7106:2;7091:25;;7100:4;7091:25;;;7110:5;7091:25;;;;;;:::i;:::-;;;;;;;;6016:1107;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:180::-;5868:77;5865:1;5858:88;5965:4;5962:1;5955:15;5989:4;5986:1;5979:15;6006:191;6046:3;6065:20;6083:1;6065:20;:::i;:::-;6060:25;;6099:20;6117:1;6099:20;:::i;:::-;6094:25;;6142:1;6139;6135:9;6128:16;;6163:3;6160:1;6157:10;6154:36;;;6170:18;;:::i;:::-;6154:36;6006:191;;;;:::o;6203:118::-;6290:24;6308:5;6290:24;:::i;:::-;6285:3;6278:37;6203:118;;:::o;6327:442::-;6476:4;6514:2;6503:9;6499:18;6491:26;;6527:71;6595:1;6584:9;6580:17;6571:6;6527:71;:::i;:::-;6608:72;6676:2;6665:9;6661:18;6652:6;6608:72;:::i;:::-;6690;6758:2;6747:9;6743:18;6734:6;6690:72;:::i;:::-;6327:442;;;;;;:::o;6775:222::-;6868:4;6906:2;6895:9;6891:18;6883:26;;6919:71;6987:1;6976:9;6972:17;6963:6;6919:71;:::i;:::-;6775:222;;;;:::o;288:2274:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@REARLY_REWARD_RATE_1038": {
									"entryPoint": 1782,
									"id": 1038,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@REWARD_RATE_1035": {
									"entryPoint": 2458,
									"id": 1035,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SECONDS_IN_YEAR_1030": {
									"entryPoint": 2463,
									"id": 1030,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_755": {
									"entryPoint": 3587,
									"id": 755,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_815": {
									"entryPoint": 4537,
									"id": 815,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4207,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_704": {
									"entryPoint": 4070,
									"id": 704,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_980": {
									"entryPoint": 3580,
									"id": 980,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_337": {
									"entryPoint": 4197,
									"id": 337,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_329": {
									"entryPoint": 3991,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_863": {
									"entryPoint": 3605,
									"id": 863,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4342,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_594": {
									"entryPoint": 3751,
									"id": 594,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_671": {
									"entryPoint": 5000,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_491": {
									"entryPoint": 3281,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_515": {
									"entryPoint": 1748,
									"id": 515,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_450": {
									"entryPoint": 2471,
									"id": 450,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balances_1017": {
									"entryPoint": 1842,
									"id": 1017,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@clainRewards_1293": {
									"entryPoint": 1871,
									"id": 1293,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_428": {
									"entryPoint": 1863,
									"id": 428,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lockTimestamp_1032": {
									"entryPoint": 3275,
									"id": 1032,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_410": {
									"entryPoint": 1604,
									"id": 410,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 3057,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2540,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_1142": {
									"entryPoint": 2559,
									"id": 1142,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakedfromTS_1021": {
									"entryPoint": 3036,
									"id": 1021,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_419": {
									"entryPoint": 3097,
									"id": 419,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_437": {
									"entryPoint": 1787,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_547": {
									"entryPoint": 1796,
									"id": 547,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3411,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_474": {
									"entryPoint": 3241,
									"id": 474,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@withdraw_1191": {
									"entryPoint": 1081,
									"id": 1191,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@xoraToken_1013": {
									"entryPoint": 3543,
									"id": 1013,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 5682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$942_to_t_address_fromStack": {
									"entryPoint": 6437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f7d3967cfde58b67385c8023f773e1b407dd3cf471a261f64b0eb38ecec65d91_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7260,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6677,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7364,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$942__to_t_address__fromStack_reversed": {
									"entryPoint": 6452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f7d3967cfde58b67385c8023f773e1b407dd3cf471a261f64b0eb38ecec65d91__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$942_to_t_address": {
									"entryPoint": 6420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5770,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6581,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7063,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6801,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5537,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 6477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d": {
									"entryPoint": 7156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 7417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f7d3967cfde58b67385c8023f773e1b407dd3cf471a261f64b0eb38ecec65d91": {
									"entryPoint": 6894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15287:8",
										"nodeType": "YulBlock",
										"src": "0:15287:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:32:8",
													"nodeType": "YulBlock",
													"src": "379:32:8",
													"statements": [
														{
															"nativeSrc": "389:16:8",
															"nodeType": "YulAssignment",
															"src": "389:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:8",
																"nodeType": "YulIdentifier",
																"src": "400:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:77:8"
											},
											{
												"body": {
													"nativeSrc": "460:79:8",
													"nodeType": "YulBlock",
													"src": "460:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:8",
																"nodeType": "YulBlock",
																"src": "517:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:8",
																					"nodeType": "YulLiteral",
																					"src": "526:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:8",
																					"nodeType": "YulLiteral",
																					"src": "529:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:8"
																			},
																			"nativeSrc": "519:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:8"
																		},
																		"nativeSrc": "519:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:8"
																				},
																				"nativeSrc": "490:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:8"
																		},
																		"nativeSrc": "480:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:8"
																},
																"nativeSrc": "473:43:8",
																"nodeType": "YulFunctionCall",
																"src": "473:43:8"
															},
															"nativeSrc": "470:63:8",
															"nodeType": "YulIf",
															"src": "470:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:8",
														"nodeType": "YulTypedName",
														"src": "453:5:8",
														"type": ""
													}
												],
												"src": "417:122:8"
											},
											{
												"body": {
													"nativeSrc": "597:87:8",
													"nodeType": "YulBlock",
													"src": "597:87:8",
													"statements": [
														{
															"nativeSrc": "607:29:8",
															"nodeType": "YulAssignment",
															"src": "607:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:8"
																},
																"nativeSrc": "616:20:8",
																"nodeType": "YulFunctionCall",
																"src": "616:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:8"
																},
																"nativeSrc": "645:33:8",
																"nodeType": "YulFunctionCall",
																"src": "645:33:8"
															},
															"nativeSrc": "645:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:8",
														"nodeType": "YulTypedName",
														"src": "575:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:8",
														"nodeType": "YulTypedName",
														"src": "583:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:8",
														"nodeType": "YulTypedName",
														"src": "591:5:8",
														"type": ""
													}
												],
												"src": "545:139:8"
											},
											{
												"body": {
													"nativeSrc": "735:81:8",
													"nodeType": "YulBlock",
													"src": "735:81:8",
													"statements": [
														{
															"nativeSrc": "745:65:8",
															"nodeType": "YulAssignment",
															"src": "745:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "760:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "760:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "767:42:8",
																		"nodeType": "YulLiteral",
																		"src": "767:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "756:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "756:3:8"
																},
																"nativeSrc": "756:54:8",
																"nodeType": "YulFunctionCall",
																"src": "756:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "745:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "745:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "690:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "717:5:8",
														"nodeType": "YulTypedName",
														"src": "717:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "727:7:8",
														"nodeType": "YulTypedName",
														"src": "727:7:8",
														"type": ""
													}
												],
												"src": "690:126:8"
											},
											{
												"body": {
													"nativeSrc": "867:51:8",
													"nodeType": "YulBlock",
													"src": "867:51:8",
													"statements": [
														{
															"nativeSrc": "877:35:8",
															"nodeType": "YulAssignment",
															"src": "877:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "906:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "906:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "888:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "888:17:8"
																},
																"nativeSrc": "888:24:8",
																"nodeType": "YulFunctionCall",
																"src": "888:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "877:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "877:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "822:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "849:5:8",
														"nodeType": "YulTypedName",
														"src": "849:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "859:7:8",
														"nodeType": "YulTypedName",
														"src": "859:7:8",
														"type": ""
													}
												],
												"src": "822:96:8"
											},
											{
												"body": {
													"nativeSrc": "967:79:8",
													"nodeType": "YulBlock",
													"src": "967:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:8",
																"nodeType": "YulBlock",
																"src": "1024:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:8"
																			},
																			"nativeSrc": "1026:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:8"
																		},
																		"nativeSrc": "1026:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "997:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:8"
																				},
																				"nativeSrc": "997:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:8"
																		},
																		"nativeSrc": "987:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:8"
																},
																"nativeSrc": "980:43:8",
																"nodeType": "YulFunctionCall",
																"src": "980:43:8"
															},
															"nativeSrc": "977:63:8",
															"nodeType": "YulIf",
															"src": "977:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "924:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:8",
														"nodeType": "YulTypedName",
														"src": "960:5:8",
														"type": ""
													}
												],
												"src": "924:122:8"
											},
											{
												"body": {
													"nativeSrc": "1104:87:8",
													"nodeType": "YulBlock",
													"src": "1104:87:8",
													"statements": [
														{
															"nativeSrc": "1114:29:8",
															"nodeType": "YulAssignment",
															"src": "1114:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:8"
																},
																"nativeSrc": "1123:20:8",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1152:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:8"
																},
																"nativeSrc": "1152:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:8"
															},
															"nativeSrc": "1152:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1052:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:8",
														"nodeType": "YulTypedName",
														"src": "1082:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:8",
														"nodeType": "YulTypedName",
														"src": "1090:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:8",
														"nodeType": "YulTypedName",
														"src": "1098:5:8",
														"type": ""
													}
												],
												"src": "1052:139:8"
											},
											{
												"body": {
													"nativeSrc": "1280:391:8",
													"nodeType": "YulBlock",
													"src": "1280:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:8",
																"nodeType": "YulBlock",
																"src": "1326:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:8"
																			},
																			"nativeSrc": "1328:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:8"
																		},
																		"nativeSrc": "1328:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:8"
																		},
																		"nativeSrc": "1297:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:8"
																},
																"nativeSrc": "1293:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:8"
															},
															"nativeSrc": "1290:119:8",
															"nodeType": "YulIf",
															"src": "1290:119:8"
														},
														{
															"nativeSrc": "1419:117:8",
															"nodeType": "YulBlock",
															"src": "1419:117:8",
															"statements": [
																{
																	"nativeSrc": "1434:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:8",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:8"
																				},
																				"nativeSrc": "1494:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1473:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:8"
																		},
																		"nativeSrc": "1473:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:8",
															"nodeType": "YulBlock",
															"src": "1546:118:8",
															"statements": [
																{
																	"nativeSrc": "1561:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:8",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:8"
																				},
																				"nativeSrc": "1622:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1601:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:8"
																		},
																		"nativeSrc": "1601:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "1197:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:8",
														"nodeType": "YulTypedName",
														"src": "1242:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:8",
														"nodeType": "YulTypedName",
														"src": "1253:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:8",
														"nodeType": "YulTypedName",
														"src": "1265:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:8",
														"nodeType": "YulTypedName",
														"src": "1273:6:8",
														"type": ""
													}
												],
												"src": "1197:474:8"
											},
											{
												"body": {
													"nativeSrc": "1736:40:8",
													"nodeType": "YulBlock",
													"src": "1736:40:8",
													"statements": [
														{
															"nativeSrc": "1747:22:8",
															"nodeType": "YulAssignment",
															"src": "1747:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1763:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1763:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1757:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1757:5:8"
																},
																"nativeSrc": "1757:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1757:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1747:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1747:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1677:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1719:5:8",
														"nodeType": "YulTypedName",
														"src": "1719:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1729:6:8",
														"nodeType": "YulTypedName",
														"src": "1729:6:8",
														"type": ""
													}
												],
												"src": "1677:99:8"
											},
											{
												"body": {
													"nativeSrc": "1878:73:8",
													"nodeType": "YulBlock",
													"src": "1878:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1895:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1895:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1900:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1900:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1888:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1888:6:8"
																},
																"nativeSrc": "1888:19:8",
																"nodeType": "YulFunctionCall",
																"src": "1888:19:8"
															},
															"nativeSrc": "1888:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "1888:19:8"
														},
														{
															"nativeSrc": "1916:29:8",
															"nodeType": "YulAssignment",
															"src": "1916:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1935:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1935:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1940:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1940:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1931:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1931:3:8"
																},
																"nativeSrc": "1931:14:8",
																"nodeType": "YulFunctionCall",
																"src": "1931:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1916:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "1916:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1782:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1850:3:8",
														"nodeType": "YulTypedName",
														"src": "1850:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1855:6:8",
														"nodeType": "YulTypedName",
														"src": "1855:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1866:11:8",
														"nodeType": "YulTypedName",
														"src": "1866:11:8",
														"type": ""
													}
												],
												"src": "1782:169:8"
											},
											{
												"body": {
													"nativeSrc": "2019:77:8",
													"nodeType": "YulBlock",
													"src": "2019:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2036:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2036:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2041:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2041:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2046:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2046:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2030:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2030:5:8"
																},
																"nativeSrc": "2030:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2030:23:8"
															},
															"nativeSrc": "2030:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "2030:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2073:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2073:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2078:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2078:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2069:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2069:3:8"
																		},
																		"nativeSrc": "2069:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2069:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2087:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2087:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2062:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2062:6:8"
																},
																"nativeSrc": "2062:27:8",
																"nodeType": "YulFunctionCall",
																"src": "2062:27:8"
															},
															"nativeSrc": "2062:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "2062:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1957:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2001:3:8",
														"nodeType": "YulTypedName",
														"src": "2001:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2006:3:8",
														"nodeType": "YulTypedName",
														"src": "2006:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2011:6:8",
														"nodeType": "YulTypedName",
														"src": "2011:6:8",
														"type": ""
													}
												],
												"src": "1957:139:8"
											},
											{
												"body": {
													"nativeSrc": "2150:54:8",
													"nodeType": "YulBlock",
													"src": "2150:54:8",
													"statements": [
														{
															"nativeSrc": "2160:38:8",
															"nodeType": "YulAssignment",
															"src": "2160:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2178:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2178:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2185:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2185:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2174:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2174:3:8"
																		},
																		"nativeSrc": "2174:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2174:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2194:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2194:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2190:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2190:3:8"
																		},
																		"nativeSrc": "2190:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2190:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2170:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2170:3:8"
																},
																"nativeSrc": "2170:28:8",
																"nodeType": "YulFunctionCall",
																"src": "2170:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2160:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2160:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2102:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2133:5:8",
														"nodeType": "YulTypedName",
														"src": "2133:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2143:6:8",
														"nodeType": "YulTypedName",
														"src": "2143:6:8",
														"type": ""
													}
												],
												"src": "2102:102:8"
											},
											{
												"body": {
													"nativeSrc": "2302:285:8",
													"nodeType": "YulBlock",
													"src": "2302:285:8",
													"statements": [
														{
															"nativeSrc": "2312:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2312:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2359:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2359:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2326:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "2326:32:8"
																},
																"nativeSrc": "2326:39:8",
																"nodeType": "YulFunctionCall",
																"src": "2326:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2316:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2316:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2374:78:8",
															"nodeType": "YulAssignment",
															"src": "2374:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2440:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2440:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2445:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2445:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2381:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "2381:58:8"
																},
																"nativeSrc": "2381:71:8",
																"nodeType": "YulFunctionCall",
																"src": "2381:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2374:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2374:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2500:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2500:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2507:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2507:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2496:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2496:3:8"
																		},
																		"nativeSrc": "2496:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2496:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2514:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2514:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2519:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2519:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2461:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "2461:34:8"
																},
																"nativeSrc": "2461:65:8",
																"nodeType": "YulFunctionCall",
																"src": "2461:65:8"
															},
															"nativeSrc": "2461:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "2461:65:8"
														},
														{
															"nativeSrc": "2535:46:8",
															"nodeType": "YulAssignment",
															"src": "2535:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2546:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2546:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2573:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2573:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2551:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "2551:21:8"
																		},
																		"nativeSrc": "2551:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2551:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2542:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2542:3:8"
																},
																"nativeSrc": "2542:39:8",
																"nodeType": "YulFunctionCall",
																"src": "2542:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2535:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2535:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2210:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2283:5:8",
														"nodeType": "YulTypedName",
														"src": "2283:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2290:3:8",
														"nodeType": "YulTypedName",
														"src": "2290:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2298:3:8",
														"nodeType": "YulTypedName",
														"src": "2298:3:8",
														"type": ""
													}
												],
												"src": "2210:377:8"
											},
											{
												"body": {
													"nativeSrc": "2711:195:8",
													"nodeType": "YulBlock",
													"src": "2711:195:8",
													"statements": [
														{
															"nativeSrc": "2721:26:8",
															"nodeType": "YulAssignment",
															"src": "2721:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2733:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2733:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2744:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2744:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2729:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2729:3:8"
																},
																"nativeSrc": "2729:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2729:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2721:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2721:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2768:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2768:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2779:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2779:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2764:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2764:3:8"
																		},
																		"nativeSrc": "2764:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2764:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2787:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "2787:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2793:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2793:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2783:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2783:3:8"
																		},
																		"nativeSrc": "2783:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2783:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2757:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2757:6:8"
																},
																"nativeSrc": "2757:47:8",
																"nodeType": "YulFunctionCall",
																"src": "2757:47:8"
															},
															"nativeSrc": "2757:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "2757:47:8"
														},
														{
															"nativeSrc": "2813:86:8",
															"nodeType": "YulAssignment",
															"src": "2813:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2885:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2885:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2894:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2894:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2821:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "2821:63:8"
																},
																"nativeSrc": "2821:78:8",
																"nodeType": "YulFunctionCall",
																"src": "2821:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2813:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2813:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2593:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2683:9:8",
														"nodeType": "YulTypedName",
														"src": "2683:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2695:6:8",
														"nodeType": "YulTypedName",
														"src": "2695:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2706:4:8",
														"nodeType": "YulTypedName",
														"src": "2706:4:8",
														"type": ""
													}
												],
												"src": "2593:313:8"
											},
											{
												"body": {
													"nativeSrc": "2995:391:8",
													"nodeType": "YulBlock",
													"src": "2995:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3041:83:8",
																"nodeType": "YulBlock",
																"src": "3041:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3043:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3043:77:8"
																			},
																			"nativeSrc": "3043:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3043:79:8"
																		},
																		"nativeSrc": "3043:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3043:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3016:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3016:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3025:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3025:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3012:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3012:3:8"
																		},
																		"nativeSrc": "3012:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3012:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3037:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3037:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3008:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3008:3:8"
																},
																"nativeSrc": "3008:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3008:32:8"
															},
															"nativeSrc": "3005:119:8",
															"nodeType": "YulIf",
															"src": "3005:119:8"
														},
														{
															"nativeSrc": "3134:117:8",
															"nodeType": "YulBlock",
															"src": "3134:117:8",
															"statements": [
																{
																	"nativeSrc": "3149:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3149:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3163:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3163:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3153:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3153:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3178:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3178:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3213:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3213:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3224:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3224:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3209:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3209:3:8"
																				},
																				"nativeSrc": "3209:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3209:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3233:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3233:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3188:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3188:20:8"
																		},
																		"nativeSrc": "3188:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3188:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3178:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3178:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3261:118:8",
															"nodeType": "YulBlock",
															"src": "3261:118:8",
															"statements": [
																{
																	"nativeSrc": "3276:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3276:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3290:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3290:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3280:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3280:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3306:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3306:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3341:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3341:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3352:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3352:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3337:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3337:3:8"
																				},
																				"nativeSrc": "3337:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3337:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3361:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3361:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3316:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3316:20:8"
																		},
																		"nativeSrc": "3316:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3316:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3306:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3306:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2912:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2957:9:8",
														"nodeType": "YulTypedName",
														"src": "2957:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2968:7:8",
														"nodeType": "YulTypedName",
														"src": "2968:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2980:6:8",
														"nodeType": "YulTypedName",
														"src": "2980:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2988:6:8",
														"nodeType": "YulTypedName",
														"src": "2988:6:8",
														"type": ""
													}
												],
												"src": "2912:474:8"
											},
											{
												"body": {
													"nativeSrc": "3434:48:8",
													"nodeType": "YulBlock",
													"src": "3434:48:8",
													"statements": [
														{
															"nativeSrc": "3444:32:8",
															"nodeType": "YulAssignment",
															"src": "3444:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3469:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3469:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3462:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:8"
																		},
																		"nativeSrc": "3462:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3462:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3455:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3455:6:8"
																},
																"nativeSrc": "3455:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3455:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3444:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3444:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3392:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3416:5:8",
														"nodeType": "YulTypedName",
														"src": "3416:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3426:7:8",
														"nodeType": "YulTypedName",
														"src": "3426:7:8",
														"type": ""
													}
												],
												"src": "3392:90:8"
											},
											{
												"body": {
													"nativeSrc": "3547:50:8",
													"nodeType": "YulBlock",
													"src": "3547:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3564:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3564:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3584:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3584:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3569:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3569:14:8"
																		},
																		"nativeSrc": "3569:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3569:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3557:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3557:6:8"
																},
																"nativeSrc": "3557:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3557:34:8"
															},
															"nativeSrc": "3557:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3557:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3488:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3535:5:8",
														"nodeType": "YulTypedName",
														"src": "3535:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3542:3:8",
														"nodeType": "YulTypedName",
														"src": "3542:3:8",
														"type": ""
													}
												],
												"src": "3488:109:8"
											},
											{
												"body": {
													"nativeSrc": "3695:118:8",
													"nodeType": "YulBlock",
													"src": "3695:118:8",
													"statements": [
														{
															"nativeSrc": "3705:26:8",
															"nodeType": "YulAssignment",
															"src": "3705:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3717:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3717:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3728:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3728:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3713:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3713:3:8"
																},
																"nativeSrc": "3713:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3713:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3705:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3705:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3779:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3779:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3792:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3792:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3803:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3803:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3788:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3788:3:8"
																		},
																		"nativeSrc": "3788:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3788:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3741:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3741:37:8"
																},
																"nativeSrc": "3741:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3741:65:8"
															},
															"nativeSrc": "3741:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3741:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3603:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3667:9:8",
														"nodeType": "YulTypedName",
														"src": "3667:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3679:6:8",
														"nodeType": "YulTypedName",
														"src": "3679:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3690:4:8",
														"nodeType": "YulTypedName",
														"src": "3690:4:8",
														"type": ""
													}
												],
												"src": "3603:210:8"
											},
											{
												"body": {
													"nativeSrc": "3884:53:8",
													"nodeType": "YulBlock",
													"src": "3884:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3901:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3901:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3924:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3924:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3906:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3906:17:8"
																		},
																		"nativeSrc": "3906:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3906:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3894:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3894:6:8"
																},
																"nativeSrc": "3894:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3894:37:8"
															},
															"nativeSrc": "3894:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3894:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3819:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3872:5:8",
														"nodeType": "YulTypedName",
														"src": "3872:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3879:3:8",
														"nodeType": "YulTypedName",
														"src": "3879:3:8",
														"type": ""
													}
												],
												"src": "3819:118:8"
											},
											{
												"body": {
													"nativeSrc": "4041:124:8",
													"nodeType": "YulBlock",
													"src": "4041:124:8",
													"statements": [
														{
															"nativeSrc": "4051:26:8",
															"nodeType": "YulAssignment",
															"src": "4051:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4063:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4063:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4074:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4074:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4059:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4059:3:8"
																},
																"nativeSrc": "4059:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4059:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4051:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4051:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4131:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4131:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4144:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4144:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4155:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4155:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4140:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4140:3:8"
																		},
																		"nativeSrc": "4140:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4140:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4087:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "4087:43:8"
																},
																"nativeSrc": "4087:71:8",
																"nodeType": "YulFunctionCall",
																"src": "4087:71:8"
															},
															"nativeSrc": "4087:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "4087:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3943:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4013:9:8",
														"nodeType": "YulTypedName",
														"src": "4013:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4025:6:8",
														"nodeType": "YulTypedName",
														"src": "4025:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4036:4:8",
														"nodeType": "YulTypedName",
														"src": "4036:4:8",
														"type": ""
													}
												],
												"src": "3943:222:8"
											},
											{
												"body": {
													"nativeSrc": "4271:519:8",
													"nodeType": "YulBlock",
													"src": "4271:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4317:83:8",
																"nodeType": "YulBlock",
																"src": "4317:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4319:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4319:77:8"
																			},
																			"nativeSrc": "4319:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4319:79:8"
																		},
																		"nativeSrc": "4319:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4319:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4292:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4292:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4301:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4301:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4288:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4288:3:8"
																		},
																		"nativeSrc": "4288:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4288:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4313:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4313:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4284:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4284:3:8"
																},
																"nativeSrc": "4284:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4284:32:8"
															},
															"nativeSrc": "4281:119:8",
															"nodeType": "YulIf",
															"src": "4281:119:8"
														},
														{
															"nativeSrc": "4410:117:8",
															"nodeType": "YulBlock",
															"src": "4410:117:8",
															"statements": [
																{
																	"nativeSrc": "4425:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4425:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4439:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4439:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4429:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4429:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4454:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4454:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4489:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4489:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4500:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4500:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4485:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4485:3:8"
																				},
																				"nativeSrc": "4485:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4485:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4509:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4509:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4464:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4464:20:8"
																		},
																		"nativeSrc": "4464:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4464:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4454:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4454:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4537:118:8",
															"nodeType": "YulBlock",
															"src": "4537:118:8",
															"statements": [
																{
																	"nativeSrc": "4552:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4552:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4566:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4566:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4556:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4556:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4582:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4582:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4617:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4617:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4628:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4628:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4613:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4613:3:8"
																				},
																				"nativeSrc": "4613:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4613:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4637:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4637:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4592:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4592:20:8"
																		},
																		"nativeSrc": "4592:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4592:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4582:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4582:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4665:118:8",
															"nodeType": "YulBlock",
															"src": "4665:118:8",
															"statements": [
																{
																	"nativeSrc": "4680:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4680:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4694:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4694:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4684:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4684:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4710:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4710:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4745:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4745:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4756:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4756:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4741:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4741:3:8"
																				},
																				"nativeSrc": "4741:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4741:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4765:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4765:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4720:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4720:20:8"
																		},
																		"nativeSrc": "4720:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4720:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4710:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4710:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4171:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4225:9:8",
														"nodeType": "YulTypedName",
														"src": "4225:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4236:7:8",
														"nodeType": "YulTypedName",
														"src": "4236:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4248:6:8",
														"nodeType": "YulTypedName",
														"src": "4248:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4256:6:8",
														"nodeType": "YulTypedName",
														"src": "4256:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4264:6:8",
														"nodeType": "YulTypedName",
														"src": "4264:6:8",
														"type": ""
													}
												],
												"src": "4171:619:8"
											},
											{
												"body": {
													"nativeSrc": "4862:263:8",
													"nodeType": "YulBlock",
													"src": "4862:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4908:83:8",
																"nodeType": "YulBlock",
																"src": "4908:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4910:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4910:77:8"
																			},
																			"nativeSrc": "4910:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4910:79:8"
																		},
																		"nativeSrc": "4910:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4910:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4883:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4883:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4892:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4892:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4879:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:8"
																		},
																		"nativeSrc": "4879:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4879:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4904:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4904:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4875:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4875:3:8"
																},
																"nativeSrc": "4875:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4875:32:8"
															},
															"nativeSrc": "4872:119:8",
															"nodeType": "YulIf",
															"src": "4872:119:8"
														},
														{
															"nativeSrc": "5001:117:8",
															"nodeType": "YulBlock",
															"src": "5001:117:8",
															"statements": [
																{
																	"nativeSrc": "5016:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5016:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5030:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5030:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5020:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5020:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5045:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5045:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5080:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5080:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5091:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5091:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5076:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5076:3:8"
																				},
																				"nativeSrc": "5076:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5076:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5100:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5100:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5055:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5055:20:8"
																		},
																		"nativeSrc": "5055:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5055:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5045:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5045:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4796:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4832:9:8",
														"nodeType": "YulTypedName",
														"src": "4832:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4843:7:8",
														"nodeType": "YulTypedName",
														"src": "4843:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4855:6:8",
														"nodeType": "YulTypedName",
														"src": "4855:6:8",
														"type": ""
													}
												],
												"src": "4796:329:8"
											},
											{
												"body": {
													"nativeSrc": "5174:43:8",
													"nodeType": "YulBlock",
													"src": "5174:43:8",
													"statements": [
														{
															"nativeSrc": "5184:27:8",
															"nodeType": "YulAssignment",
															"src": "5184:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5199:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5199:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5206:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5206:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5195:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5195:3:8"
																},
																"nativeSrc": "5195:16:8",
																"nodeType": "YulFunctionCall",
																"src": "5195:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5184:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "5184:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5131:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5156:5:8",
														"nodeType": "YulTypedName",
														"src": "5156:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5166:7:8",
														"nodeType": "YulTypedName",
														"src": "5166:7:8",
														"type": ""
													}
												],
												"src": "5131:86:8"
											},
											{
												"body": {
													"nativeSrc": "5284:51:8",
													"nodeType": "YulBlock",
													"src": "5284:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5301:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5301:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5322:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5322:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5306:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "5306:15:8"
																		},
																		"nativeSrc": "5306:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5306:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5294:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5294:6:8"
																},
																"nativeSrc": "5294:35:8",
																"nodeType": "YulFunctionCall",
																"src": "5294:35:8"
															},
															"nativeSrc": "5294:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "5294:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5223:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5272:5:8",
														"nodeType": "YulTypedName",
														"src": "5272:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5279:3:8",
														"nodeType": "YulTypedName",
														"src": "5279:3:8",
														"type": ""
													}
												],
												"src": "5223:112:8"
											},
											{
												"body": {
													"nativeSrc": "5435:120:8",
													"nodeType": "YulBlock",
													"src": "5435:120:8",
													"statements": [
														{
															"nativeSrc": "5445:26:8",
															"nodeType": "YulAssignment",
															"src": "5445:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5457:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5457:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5468:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5468:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5453:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5453:3:8"
																},
																"nativeSrc": "5453:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5453:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5445:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5445:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5521:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5521:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5534:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5534:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5545:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5545:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5530:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5530:3:8"
																		},
																		"nativeSrc": "5530:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5530:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5481:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "5481:39:8"
																},
																"nativeSrc": "5481:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5481:67:8"
															},
															"nativeSrc": "5481:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5481:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5341:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5407:9:8",
														"nodeType": "YulTypedName",
														"src": "5407:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5419:6:8",
														"nodeType": "YulTypedName",
														"src": "5419:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5430:4:8",
														"nodeType": "YulTypedName",
														"src": "5430:4:8",
														"type": ""
													}
												],
												"src": "5341:214:8"
											},
											{
												"body": {
													"nativeSrc": "5627:263:8",
													"nodeType": "YulBlock",
													"src": "5627:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5673:83:8",
																"nodeType": "YulBlock",
																"src": "5673:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5675:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5675:77:8"
																			},
																			"nativeSrc": "5675:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5675:79:8"
																		},
																		"nativeSrc": "5675:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5675:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5648:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5648:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5657:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5657:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5644:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5644:3:8"
																		},
																		"nativeSrc": "5644:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5644:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5669:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5669:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5640:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5640:3:8"
																},
																"nativeSrc": "5640:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5640:32:8"
															},
															"nativeSrc": "5637:119:8",
															"nodeType": "YulIf",
															"src": "5637:119:8"
														},
														{
															"nativeSrc": "5766:117:8",
															"nodeType": "YulBlock",
															"src": "5766:117:8",
															"statements": [
																{
																	"nativeSrc": "5781:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5781:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5795:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5795:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5785:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5785:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5810:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5810:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5845:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5845:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5856:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5856:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5841:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5841:3:8"
																				},
																				"nativeSrc": "5841:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5841:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5865:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5865:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5820:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5820:20:8"
																		},
																		"nativeSrc": "5820:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5820:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5810:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5810:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5561:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5597:9:8",
														"nodeType": "YulTypedName",
														"src": "5597:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5608:7:8",
														"nodeType": "YulTypedName",
														"src": "5608:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5620:6:8",
														"nodeType": "YulTypedName",
														"src": "5620:6:8",
														"type": ""
													}
												],
												"src": "5561:329:8"
											},
											{
												"body": {
													"nativeSrc": "5961:53:8",
													"nodeType": "YulBlock",
													"src": "5961:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5978:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5978:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6001:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6001:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5983:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "5983:17:8"
																		},
																		"nativeSrc": "5983:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5983:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5971:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5971:6:8"
																},
																"nativeSrc": "5971:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5971:37:8"
															},
															"nativeSrc": "5971:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "5971:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5896:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5949:5:8",
														"nodeType": "YulTypedName",
														"src": "5949:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5956:3:8",
														"nodeType": "YulTypedName",
														"src": "5956:3:8",
														"type": ""
													}
												],
												"src": "5896:118:8"
											},
											{
												"body": {
													"nativeSrc": "6118:124:8",
													"nodeType": "YulBlock",
													"src": "6118:124:8",
													"statements": [
														{
															"nativeSrc": "6128:26:8",
															"nodeType": "YulAssignment",
															"src": "6128:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6140:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6140:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6151:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6151:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6136:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6136:3:8"
																},
																"nativeSrc": "6136:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6136:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6128:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6128:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6208:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6208:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6221:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6221:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6232:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6232:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6217:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6217:3:8"
																		},
																		"nativeSrc": "6217:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6217:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6164:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6164:43:8"
																},
																"nativeSrc": "6164:71:8",
																"nodeType": "YulFunctionCall",
																"src": "6164:71:8"
															},
															"nativeSrc": "6164:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "6164:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6020:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6090:9:8",
														"nodeType": "YulTypedName",
														"src": "6090:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6102:6:8",
														"nodeType": "YulTypedName",
														"src": "6102:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6113:4:8",
														"nodeType": "YulTypedName",
														"src": "6113:4:8",
														"type": ""
													}
												],
												"src": "6020:222:8"
											},
											{
												"body": {
													"nativeSrc": "6331:391:8",
													"nodeType": "YulBlock",
													"src": "6331:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6377:83:8",
																"nodeType": "YulBlock",
																"src": "6377:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6379:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6379:77:8"
																			},
																			"nativeSrc": "6379:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6379:79:8"
																		},
																		"nativeSrc": "6379:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6379:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6352:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6352:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6361:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6361:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6348:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6348:3:8"
																		},
																		"nativeSrc": "6348:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6348:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6373:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6373:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6344:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6344:3:8"
																},
																"nativeSrc": "6344:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6344:32:8"
															},
															"nativeSrc": "6341:119:8",
															"nodeType": "YulIf",
															"src": "6341:119:8"
														},
														{
															"nativeSrc": "6470:117:8",
															"nodeType": "YulBlock",
															"src": "6470:117:8",
															"statements": [
																{
																	"nativeSrc": "6485:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6485:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6499:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6499:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6489:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6489:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6514:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6514:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6549:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6549:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6560:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6560:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6545:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6545:3:8"
																				},
																				"nativeSrc": "6545:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6545:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6569:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6569:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6524:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6524:20:8"
																		},
																		"nativeSrc": "6524:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6524:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6514:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6514:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6597:118:8",
															"nodeType": "YulBlock",
															"src": "6597:118:8",
															"statements": [
																{
																	"nativeSrc": "6612:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6612:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6626:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6626:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6616:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6616:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6642:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6642:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6677:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6677:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6688:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6688:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6673:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6673:3:8"
																				},
																				"nativeSrc": "6673:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6673:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6697:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6697:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6652:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6652:20:8"
																		},
																		"nativeSrc": "6652:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6652:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6642:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6642:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6248:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6293:9:8",
														"nodeType": "YulTypedName",
														"src": "6293:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6304:7:8",
														"nodeType": "YulTypedName",
														"src": "6304:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6316:6:8",
														"nodeType": "YulTypedName",
														"src": "6316:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6324:6:8",
														"nodeType": "YulTypedName",
														"src": "6324:6:8",
														"type": ""
													}
												],
												"src": "6248:474:8"
											},
											{
												"body": {
													"nativeSrc": "6760:28:8",
													"nodeType": "YulBlock",
													"src": "6760:28:8",
													"statements": [
														{
															"nativeSrc": "6770:12:8",
															"nodeType": "YulAssignment",
															"src": "6770:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "6777:5:8",
																"nodeType": "YulIdentifier",
																"src": "6777:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6770:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6770:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "6728:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6746:5:8",
														"nodeType": "YulTypedName",
														"src": "6746:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6756:3:8",
														"nodeType": "YulTypedName",
														"src": "6756:3:8",
														"type": ""
													}
												],
												"src": "6728:60:8"
											},
											{
												"body": {
													"nativeSrc": "6854:82:8",
													"nodeType": "YulBlock",
													"src": "6854:82:8",
													"statements": [
														{
															"nativeSrc": "6864:66:8",
															"nodeType": "YulAssignment",
															"src": "6864:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6922:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "6922:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "6904:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "6904:17:8"
																				},
																				"nativeSrc": "6904:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6904:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6895:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "6895:8:8"
																		},
																		"nativeSrc": "6895:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6895:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "6877:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "6877:17:8"
																},
																"nativeSrc": "6877:53:8",
																"nodeType": "YulFunctionCall",
																"src": "6877:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6864:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "6864:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "6794:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6834:5:8",
														"nodeType": "YulTypedName",
														"src": "6834:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6844:9:8",
														"nodeType": "YulTypedName",
														"src": "6844:9:8",
														"type": ""
													}
												],
												"src": "6794:142:8"
											},
											{
												"body": {
													"nativeSrc": "7002:66:8",
													"nodeType": "YulBlock",
													"src": "7002:66:8",
													"statements": [
														{
															"nativeSrc": "7012:50:8",
															"nodeType": "YulAssignment",
															"src": "7012:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7056:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7056:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "7025:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "7025:30:8"
																},
																"nativeSrc": "7025:37:8",
																"nodeType": "YulFunctionCall",
																"src": "7025:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7012:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "7012:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "6942:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6982:5:8",
														"nodeType": "YulTypedName",
														"src": "6982:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6992:9:8",
														"nodeType": "YulTypedName",
														"src": "6992:9:8",
														"type": ""
													}
												],
												"src": "6942:126:8"
											},
											{
												"body": {
													"nativeSrc": "7148:66:8",
													"nodeType": "YulBlock",
													"src": "7148:66:8",
													"statements": [
														{
															"nativeSrc": "7158:50:8",
															"nodeType": "YulAssignment",
															"src": "7158:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7202:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7202:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "7171:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "7171:30:8"
																},
																"nativeSrc": "7171:37:8",
																"nodeType": "YulFunctionCall",
																"src": "7171:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7158:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "7158:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$942_to_t_address",
												"nativeSrc": "7074:140:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7128:5:8",
														"nodeType": "YulTypedName",
														"src": "7128:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7138:9:8",
														"nodeType": "YulTypedName",
														"src": "7138:9:8",
														"type": ""
													}
												],
												"src": "7074:140:8"
											},
											{
												"body": {
													"nativeSrc": "7299:80:8",
													"nodeType": "YulBlock",
													"src": "7299:80:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7316:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7316:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7366:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7366:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$942_to_t_address",
																			"nativeSrc": "7321:44:8",
																			"nodeType": "YulIdentifier",
																			"src": "7321:44:8"
																		},
																		"nativeSrc": "7321:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7321:51:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7309:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7309:6:8"
																},
																"nativeSrc": "7309:64:8",
																"nodeType": "YulFunctionCall",
																"src": "7309:64:8"
															},
															"nativeSrc": "7309:64:8",
															"nodeType": "YulExpressionStatement",
															"src": "7309:64:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$942_to_t_address_fromStack",
												"nativeSrc": "7220:159:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7287:5:8",
														"nodeType": "YulTypedName",
														"src": "7287:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7294:3:8",
														"nodeType": "YulTypedName",
														"src": "7294:3:8",
														"type": ""
													}
												],
												"src": "7220:159:8"
											},
											{
												"body": {
													"nativeSrc": "7497:138:8",
													"nodeType": "YulBlock",
													"src": "7497:138:8",
													"statements": [
														{
															"nativeSrc": "7507:26:8",
															"nodeType": "YulAssignment",
															"src": "7507:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7519:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7519:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7530:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7530:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7515:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7515:3:8"
																},
																"nativeSrc": "7515:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7515:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7507:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7507:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7601:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7601:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7614:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7614:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7625:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7625:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7610:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7610:3:8"
																		},
																		"nativeSrc": "7610:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7610:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$942_to_t_address_fromStack",
																	"nativeSrc": "7543:57:8",
																	"nodeType": "YulIdentifier",
																	"src": "7543:57:8"
																},
																"nativeSrc": "7543:85:8",
																"nodeType": "YulFunctionCall",
																"src": "7543:85:8"
															},
															"nativeSrc": "7543:85:8",
															"nodeType": "YulExpressionStatement",
															"src": "7543:85:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$942__to_t_address__fromStack_reversed",
												"nativeSrc": "7385:250:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7469:9:8",
														"nodeType": "YulTypedName",
														"src": "7469:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7481:6:8",
														"nodeType": "YulTypedName",
														"src": "7481:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7492:4:8",
														"nodeType": "YulTypedName",
														"src": "7492:4:8",
														"type": ""
													}
												],
												"src": "7385:250:8"
											},
											{
												"body": {
													"nativeSrc": "7747:64:8",
													"nodeType": "YulBlock",
													"src": "7747:64:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7769:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7769:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7777:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7777:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7765:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7765:3:8"
																		},
																		"nativeSrc": "7765:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7765:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "7781:22:8",
																		"nodeType": "YulLiteral",
																		"src": "7781:22:8",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7758:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7758:6:8"
																},
																"nativeSrc": "7758:46:8",
																"nodeType": "YulFunctionCall",
																"src": "7758:46:8"
															},
															"nativeSrc": "7758:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "7758:46:8"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "7641:170:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7739:6:8",
														"nodeType": "YulTypedName",
														"src": "7739:6:8",
														"type": ""
													}
												],
												"src": "7641:170:8"
											},
											{
												"body": {
													"nativeSrc": "7963:220:8",
													"nodeType": "YulBlock",
													"src": "7963:220:8",
													"statements": [
														{
															"nativeSrc": "7973:74:8",
															"nodeType": "YulAssignment",
															"src": "7973:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8039:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8039:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8044:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8044:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7980:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "7980:58:8"
																},
																"nativeSrc": "7980:67:8",
																"nodeType": "YulFunctionCall",
																"src": "7980:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7973:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7973:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8145:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8145:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "8056:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "8056:88:8"
																},
																"nativeSrc": "8056:93:8",
																"nodeType": "YulFunctionCall",
																"src": "8056:93:8"
															},
															"nativeSrc": "8056:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "8056:93:8"
														},
														{
															"nativeSrc": "8158:19:8",
															"nodeType": "YulAssignment",
															"src": "8158:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8169:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8169:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8174:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8174:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8165:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8165:3:8"
																},
																"nativeSrc": "8165:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8165:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8158:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8158:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7817:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7951:3:8",
														"nodeType": "YulTypedName",
														"src": "7951:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7959:3:8",
														"nodeType": "YulTypedName",
														"src": "7959:3:8",
														"type": ""
													}
												],
												"src": "7817:366:8"
											},
											{
												"body": {
													"nativeSrc": "8360:248:8",
													"nodeType": "YulBlock",
													"src": "8360:248:8",
													"statements": [
														{
															"nativeSrc": "8370:26:8",
															"nodeType": "YulAssignment",
															"src": "8370:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8382:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8382:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8393:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8393:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8378:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8378:3:8"
																},
																"nativeSrc": "8378:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8378:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8370:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8370:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8417:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8417:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8428:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8428:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8413:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8413:3:8"
																		},
																		"nativeSrc": "8413:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8413:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8436:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8436:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8442:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8442:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8432:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8432:3:8"
																		},
																		"nativeSrc": "8432:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8432:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8406:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8406:6:8"
																},
																"nativeSrc": "8406:47:8",
																"nodeType": "YulFunctionCall",
																"src": "8406:47:8"
															},
															"nativeSrc": "8406:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "8406:47:8"
														},
														{
															"nativeSrc": "8462:139:8",
															"nodeType": "YulAssignment",
															"src": "8462:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8596:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8596:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8470:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "8470:124:8"
																},
																"nativeSrc": "8470:131:8",
																"nodeType": "YulFunctionCall",
																"src": "8470:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8462:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8462:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8189:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8340:9:8",
														"nodeType": "YulTypedName",
														"src": "8340:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8355:4:8",
														"nodeType": "YulTypedName",
														"src": "8355:4:8",
														"type": ""
													}
												],
												"src": "8189:419:8"
											},
											{
												"body": {
													"nativeSrc": "8642:152:8",
													"nodeType": "YulBlock",
													"src": "8642:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8659:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8659:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8662:77:8",
																		"nodeType": "YulLiteral",
																		"src": "8662:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8652:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8652:6:8"
																},
																"nativeSrc": "8652:88:8",
																"nodeType": "YulFunctionCall",
																"src": "8652:88:8"
															},
															"nativeSrc": "8652:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "8652:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8756:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8756:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8759:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8759:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8749:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8749:6:8"
																},
																"nativeSrc": "8749:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8749:15:8"
															},
															"nativeSrc": "8749:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8749:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8780:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8780:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8783:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8783:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8773:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8773:6:8"
																},
																"nativeSrc": "8773:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8773:15:8"
															},
															"nativeSrc": "8773:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8773:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8614:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "8614:180:8"
											},
											{
												"body": {
													"nativeSrc": "8845:149:8",
													"nodeType": "YulBlock",
													"src": "8845:149:8",
													"statements": [
														{
															"nativeSrc": "8855:25:8",
															"nodeType": "YulAssignment",
															"src": "8855:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8878:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8878:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8860:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8860:17:8"
																},
																"nativeSrc": "8860:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8860:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8855:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8855:1:8"
																}
															]
														},
														{
															"nativeSrc": "8889:25:8",
															"nodeType": "YulAssignment",
															"src": "8889:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8912:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8912:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8894:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8894:17:8"
																},
																"nativeSrc": "8894:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8894:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8889:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8889:1:8"
																}
															]
														},
														{
															"nativeSrc": "8923:17:8",
															"nodeType": "YulAssignment",
															"src": "8923:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8935:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8935:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8938:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8938:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8931:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8931:3:8"
																},
																"nativeSrc": "8931:9:8",
																"nodeType": "YulFunctionCall",
																"src": "8931:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8923:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8923:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8965:22:8",
																"nodeType": "YulBlock",
																"src": "8965:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8967:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "8967:16:8"
																			},
																			"nativeSrc": "8967:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8967:18:8"
																		},
																		"nativeSrc": "8967:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8967:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8956:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8956:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8962:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8962:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8953:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8953:2:8"
																},
																"nativeSrc": "8953:11:8",
																"nodeType": "YulFunctionCall",
																"src": "8953:11:8"
															},
															"nativeSrc": "8950:37:8",
															"nodeType": "YulIf",
															"src": "8950:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8800:194:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8831:1:8",
														"nodeType": "YulTypedName",
														"src": "8831:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8834:1:8",
														"nodeType": "YulTypedName",
														"src": "8834:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8840:4:8",
														"nodeType": "YulTypedName",
														"src": "8840:4:8",
														"type": ""
													}
												],
												"src": "8800:194:8"
											},
											{
												"body": {
													"nativeSrc": "9126:206:8",
													"nodeType": "YulBlock",
													"src": "9126:206:8",
													"statements": [
														{
															"nativeSrc": "9136:26:8",
															"nodeType": "YulAssignment",
															"src": "9136:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9148:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9148:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9159:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9159:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9144:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9144:3:8"
																},
																"nativeSrc": "9144:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9144:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9136:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9136:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9216:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9216:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9229:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9229:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9240:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9240:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9225:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9225:3:8"
																		},
																		"nativeSrc": "9225:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9225:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9172:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9172:43:8"
																},
																"nativeSrc": "9172:71:8",
																"nodeType": "YulFunctionCall",
																"src": "9172:71:8"
															},
															"nativeSrc": "9172:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "9172:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9297:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9297:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9310:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9310:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9321:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9321:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9306:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9306:3:8"
																		},
																		"nativeSrc": "9306:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9306:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9253:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9253:43:8"
																},
																"nativeSrc": "9253:72:8",
																"nodeType": "YulFunctionCall",
																"src": "9253:72:8"
															},
															"nativeSrc": "9253:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "9253:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9000:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9090:9:8",
														"nodeType": "YulTypedName",
														"src": "9090:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9102:6:8",
														"nodeType": "YulTypedName",
														"src": "9102:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9110:6:8",
														"nodeType": "YulTypedName",
														"src": "9110:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9121:4:8",
														"nodeType": "YulTypedName",
														"src": "9121:4:8",
														"type": ""
													}
												],
												"src": "9000:332:8"
											},
											{
												"body": {
													"nativeSrc": "9378:76:8",
													"nodeType": "YulBlock",
													"src": "9378:76:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "9432:16:8",
																"nodeType": "YulBlock",
																"src": "9432:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9441:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9441:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9444:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9444:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9434:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9434:6:8"
																			},
																			"nativeSrc": "9434:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9434:12:8"
																		},
																		"nativeSrc": "9434:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9434:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9401:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9401:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9423:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "9423:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "9408:14:8",
																					"nodeType": "YulIdentifier",
																					"src": "9408:14:8"
																				},
																				"nativeSrc": "9408:21:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9408:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9398:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "9398:2:8"
																		},
																		"nativeSrc": "9398:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9398:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9391:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9391:6:8"
																},
																"nativeSrc": "9391:40:8",
																"nodeType": "YulFunctionCall",
																"src": "9391:40:8"
															},
															"nativeSrc": "9388:60:8",
															"nodeType": "YulIf",
															"src": "9388:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "9338:116:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9371:5:8",
														"nodeType": "YulTypedName",
														"src": "9371:5:8",
														"type": ""
													}
												],
												"src": "9338:116:8"
											},
											{
												"body": {
													"nativeSrc": "9520:77:8",
													"nodeType": "YulBlock",
													"src": "9520:77:8",
													"statements": [
														{
															"nativeSrc": "9530:22:8",
															"nodeType": "YulAssignment",
															"src": "9530:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9545:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9545:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9539:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9539:5:8"
																},
																"nativeSrc": "9539:13:8",
																"nodeType": "YulFunctionCall",
																"src": "9539:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9530:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9530:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9585:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9585:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9561:23:8",
																	"nodeType": "YulIdentifier",
																	"src": "9561:23:8"
																},
																"nativeSrc": "9561:30:8",
																"nodeType": "YulFunctionCall",
																"src": "9561:30:8"
															},
															"nativeSrc": "9561:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "9561:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "9460:137:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9498:6:8",
														"nodeType": "YulTypedName",
														"src": "9498:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9506:3:8",
														"nodeType": "YulTypedName",
														"src": "9506:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9514:5:8",
														"nodeType": "YulTypedName",
														"src": "9514:5:8",
														"type": ""
													}
												],
												"src": "9460:137:8"
											},
											{
												"body": {
													"nativeSrc": "9677:271:8",
													"nodeType": "YulBlock",
													"src": "9677:271:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "9723:83:8",
																"nodeType": "YulBlock",
																"src": "9723:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9725:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "9725:77:8"
																			},
																			"nativeSrc": "9725:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9725:79:8"
																		},
																		"nativeSrc": "9725:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9725:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9698:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "9698:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9707:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9707:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9694:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9694:3:8"
																		},
																		"nativeSrc": "9694:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9694:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9719:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9719:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9690:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9690:3:8"
																},
																"nativeSrc": "9690:32:8",
																"nodeType": "YulFunctionCall",
																"src": "9690:32:8"
															},
															"nativeSrc": "9687:119:8",
															"nodeType": "YulIf",
															"src": "9687:119:8"
														},
														{
															"nativeSrc": "9816:125:8",
															"nodeType": "YulBlock",
															"src": "9816:125:8",
															"statements": [
																{
																	"nativeSrc": "9831:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9831:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9845:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9845:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9835:6:8",
																			"nodeType": "YulTypedName",
																			"src": "9835:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9860:71:8",
																	"nodeType": "YulAssignment",
																	"src": "9860:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9903:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "9903:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9914:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "9914:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9899:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9899:3:8"
																				},
																				"nativeSrc": "9899:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9899:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9923:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "9923:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "9870:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "9870:28:8"
																		},
																		"nativeSrc": "9870:61:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9870:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9860:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "9860:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "9603:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9647:9:8",
														"nodeType": "YulTypedName",
														"src": "9647:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9658:7:8",
														"nodeType": "YulTypedName",
														"src": "9658:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9670:6:8",
														"nodeType": "YulTypedName",
														"src": "9670:6:8",
														"type": ""
													}
												],
												"src": "9603:345:8"
											},
											{
												"body": {
													"nativeSrc": "9982:152:8",
													"nodeType": "YulBlock",
													"src": "9982:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9999:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9999:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10002:77:8",
																		"nodeType": "YulLiteral",
																		"src": "10002:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9992:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9992:6:8"
																},
																"nativeSrc": "9992:88:8",
																"nodeType": "YulFunctionCall",
																"src": "9992:88:8"
															},
															"nativeSrc": "9992:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "9992:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10096:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10096:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10099:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10099:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10089:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10089:6:8"
																},
																"nativeSrc": "10089:15:8",
																"nodeType": "YulFunctionCall",
																"src": "10089:15:8"
															},
															"nativeSrc": "10089:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "10089:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10120:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10120:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10123:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10123:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10113:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10113:6:8"
																},
																"nativeSrc": "10113:15:8",
																"nodeType": "YulFunctionCall",
																"src": "10113:15:8"
															},
															"nativeSrc": "10113:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "10113:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "9954:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "9954:180:8"
											},
											{
												"body": {
													"nativeSrc": "10191:269:8",
													"nodeType": "YulBlock",
													"src": "10191:269:8",
													"statements": [
														{
															"nativeSrc": "10201:22:8",
															"nodeType": "YulAssignment",
															"src": "10201:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10215:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10215:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10221:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10221:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10211:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10211:3:8"
																},
																"nativeSrc": "10211:12:8",
																"nodeType": "YulFunctionCall",
																"src": "10211:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10201:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10201:6:8"
																}
															]
														},
														{
															"nativeSrc": "10232:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "10232:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10262:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10262:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10268:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10268:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10258:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10258:3:8"
																},
																"nativeSrc": "10258:12:8",
																"nodeType": "YulFunctionCall",
																"src": "10258:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10236:18:8",
																	"nodeType": "YulTypedName",
																	"src": "10236:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10309:51:8",
																"nodeType": "YulBlock",
																"src": "10309:51:8",
																"statements": [
																	{
																		"nativeSrc": "10323:27:8",
																		"nodeType": "YulAssignment",
																		"src": "10323:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10337:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "10337:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10345:4:8",
																					"nodeType": "YulLiteral",
																					"src": "10345:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10333:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "10333:3:8"
																			},
																			"nativeSrc": "10333:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10333:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10323:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10323:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10289:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "10289:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10282:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10282:6:8"
																},
																"nativeSrc": "10282:26:8",
																"nodeType": "YulFunctionCall",
																"src": "10282:26:8"
															},
															"nativeSrc": "10279:81:8",
															"nodeType": "YulIf",
															"src": "10279:81:8"
														},
														{
															"body": {
																"nativeSrc": "10412:42:8",
																"nodeType": "YulBlock",
																"src": "10412:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10426:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10426:16:8"
																			},
																			"nativeSrc": "10426:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10426:18:8"
																		},
																		"nativeSrc": "10426:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10426:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10376:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "10376:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10399:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10399:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10407:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10407:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10396:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "10396:2:8"
																		},
																		"nativeSrc": "10396:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10396:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10373:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "10373:2:8"
																},
																"nativeSrc": "10373:38:8",
																"nodeType": "YulFunctionCall",
																"src": "10373:38:8"
															},
															"nativeSrc": "10370:84:8",
															"nodeType": "YulIf",
															"src": "10370:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10140:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10175:4:8",
														"nodeType": "YulTypedName",
														"src": "10175:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10184:6:8",
														"nodeType": "YulTypedName",
														"src": "10184:6:8",
														"type": ""
													}
												],
												"src": "10140:320:8"
											},
											{
												"body": {
													"nativeSrc": "10572:73:8",
													"nodeType": "YulBlock",
													"src": "10572:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10594:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10594:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10602:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10602:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10590:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10590:3:8"
																		},
																		"nativeSrc": "10590:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10590:14:8"
																	},
																	{
																		"hexValue": "796f7520646f6e6f74206861766520656e6f7570682062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "10606:31:8",
																		"nodeType": "YulLiteral",
																		"src": "10606:31:8",
																		"type": "",
																		"value": "you donot have enouph balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10583:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10583:6:8"
																},
																"nativeSrc": "10583:55:8",
																"nodeType": "YulFunctionCall",
																"src": "10583:55:8"
															},
															"nativeSrc": "10583:55:8",
															"nodeType": "YulExpressionStatement",
															"src": "10583:55:8"
														}
													]
												},
												"name": "store_literal_in_memory_f7d3967cfde58b67385c8023f773e1b407dd3cf471a261f64b0eb38ecec65d91",
												"nativeSrc": "10466:179:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10564:6:8",
														"nodeType": "YulTypedName",
														"src": "10564:6:8",
														"type": ""
													}
												],
												"src": "10466:179:8"
											},
											{
												"body": {
													"nativeSrc": "10797:220:8",
													"nodeType": "YulBlock",
													"src": "10797:220:8",
													"statements": [
														{
															"nativeSrc": "10807:74:8",
															"nodeType": "YulAssignment",
															"src": "10807:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10873:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10873:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10878:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10878:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10814:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "10814:58:8"
																},
																"nativeSrc": "10814:67:8",
																"nodeType": "YulFunctionCall",
																"src": "10814:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10807:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10807:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10979:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10979:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f7d3967cfde58b67385c8023f773e1b407dd3cf471a261f64b0eb38ecec65d91",
																	"nativeSrc": "10890:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "10890:88:8"
																},
																"nativeSrc": "10890:93:8",
																"nodeType": "YulFunctionCall",
																"src": "10890:93:8"
															},
															"nativeSrc": "10890:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "10890:93:8"
														},
														{
															"nativeSrc": "10992:19:8",
															"nodeType": "YulAssignment",
															"src": "10992:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11003:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11003:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11008:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11008:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10999:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10999:3:8"
																},
																"nativeSrc": "10999:12:8",
																"nodeType": "YulFunctionCall",
																"src": "10999:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10992:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10992:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f7d3967cfde58b67385c8023f773e1b407dd3cf471a261f64b0eb38ecec65d91_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10651:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10785:3:8",
														"nodeType": "YulTypedName",
														"src": "10785:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10793:3:8",
														"nodeType": "YulTypedName",
														"src": "10793:3:8",
														"type": ""
													}
												],
												"src": "10651:366:8"
											},
											{
												"body": {
													"nativeSrc": "11194:248:8",
													"nodeType": "YulBlock",
													"src": "11194:248:8",
													"statements": [
														{
															"nativeSrc": "11204:26:8",
															"nodeType": "YulAssignment",
															"src": "11204:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11216:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11216:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11227:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11227:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11212:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11212:3:8"
																},
																"nativeSrc": "11212:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11212:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11204:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11204:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11251:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11251:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11262:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11262:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11247:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11247:3:8"
																		},
																		"nativeSrc": "11247:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11247:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11270:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "11270:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11276:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11276:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11266:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11266:3:8"
																		},
																		"nativeSrc": "11266:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11266:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11240:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11240:6:8"
																},
																"nativeSrc": "11240:47:8",
																"nodeType": "YulFunctionCall",
																"src": "11240:47:8"
															},
															"nativeSrc": "11240:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "11240:47:8"
														},
														{
															"nativeSrc": "11296:139:8",
															"nodeType": "YulAssignment",
															"src": "11296:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11430:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11430:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f7d3967cfde58b67385c8023f773e1b407dd3cf471a261f64b0eb38ecec65d91_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11304:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "11304:124:8"
																},
																"nativeSrc": "11304:131:8",
																"nodeType": "YulFunctionCall",
																"src": "11304:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11296:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11296:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f7d3967cfde58b67385c8023f773e1b407dd3cf471a261f64b0eb38ecec65d91__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11023:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11174:9:8",
														"nodeType": "YulTypedName",
														"src": "11174:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11189:4:8",
														"nodeType": "YulTypedName",
														"src": "11189:4:8",
														"type": ""
													}
												],
												"src": "11023:419:8"
											},
											{
												"body": {
													"nativeSrc": "11496:362:8",
													"nodeType": "YulBlock",
													"src": "11496:362:8",
													"statements": [
														{
															"nativeSrc": "11506:25:8",
															"nodeType": "YulAssignment",
															"src": "11506:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11529:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11529:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11511:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11511:17:8"
																},
																"nativeSrc": "11511:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11511:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11506:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11506:1:8"
																}
															]
														},
														{
															"nativeSrc": "11540:25:8",
															"nodeType": "YulAssignment",
															"src": "11540:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11563:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11563:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11545:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11545:17:8"
																},
																"nativeSrc": "11545:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11545:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11540:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11540:1:8"
																}
															]
														},
														{
															"nativeSrc": "11574:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "11574:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11597:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11597:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11600:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11600:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11593:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11593:3:8"
																},
																"nativeSrc": "11593:9:8",
																"nodeType": "YulFunctionCall",
																"src": "11593:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "11578:11:8",
																	"nodeType": "YulTypedName",
																	"src": "11578:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11611:41:8",
															"nodeType": "YulAssignment",
															"src": "11611:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "11640:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "11640:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11622:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11622:17:8"
																},
																"nativeSrc": "11622:30:8",
																"nodeType": "YulFunctionCall",
																"src": "11622:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11611:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "11611:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11829:22:8",
																"nodeType": "YulBlock",
																"src": "11829:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11831:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "11831:16:8"
																			},
																			"nativeSrc": "11831:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11831:18:8"
																		},
																		"nativeSrc": "11831:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11831:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11762:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "11762:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11755:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "11755:6:8"
																				},
																				"nativeSrc": "11755:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11755:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11785:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "11785:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "11792:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "11792:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "11801:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "11801:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11788:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "11788:3:8"
																						},
																						"nativeSrc": "11788:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "11788:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11782:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "11782:2:8"
																				},
																				"nativeSrc": "11782:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11782:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11735:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "11735:2:8"
																		},
																		"nativeSrc": "11735:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11735:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11715:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11715:6:8"
																},
																"nativeSrc": "11715:113:8",
																"nodeType": "YulFunctionCall",
																"src": "11715:113:8"
															},
															"nativeSrc": "11712:139:8",
															"nodeType": "YulIf",
															"src": "11712:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "11448:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11479:1:8",
														"nodeType": "YulTypedName",
														"src": "11479:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11482:1:8",
														"nodeType": "YulTypedName",
														"src": "11482:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "11488:7:8",
														"nodeType": "YulTypedName",
														"src": "11488:7:8",
														"type": ""
													}
												],
												"src": "11448:410:8"
											},
											{
												"body": {
													"nativeSrc": "11892:152:8",
													"nodeType": "YulBlock",
													"src": "11892:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11909:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11909:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11912:77:8",
																		"nodeType": "YulLiteral",
																		"src": "11912:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11902:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11902:6:8"
																},
																"nativeSrc": "11902:88:8",
																"nodeType": "YulFunctionCall",
																"src": "11902:88:8"
															},
															"nativeSrc": "11902:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "11902:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12006:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12006:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12009:4:8",
																		"nodeType": "YulLiteral",
																		"src": "12009:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11999:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11999:6:8"
																},
																"nativeSrc": "11999:15:8",
																"nodeType": "YulFunctionCall",
																"src": "11999:15:8"
															},
															"nativeSrc": "11999:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "11999:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12030:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12030:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12033:4:8",
																		"nodeType": "YulLiteral",
																		"src": "12033:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12023:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12023:6:8"
																},
																"nativeSrc": "12023:15:8",
																"nodeType": "YulFunctionCall",
																"src": "12023:15:8"
															},
															"nativeSrc": "12023:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "12023:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "11864:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "11864:180:8"
											},
											{
												"body": {
													"nativeSrc": "12092:143:8",
													"nodeType": "YulBlock",
													"src": "12092:143:8",
													"statements": [
														{
															"nativeSrc": "12102:25:8",
															"nodeType": "YulAssignment",
															"src": "12102:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12125:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12125:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12107:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "12107:17:8"
																},
																"nativeSrc": "12107:20:8",
																"nodeType": "YulFunctionCall",
																"src": "12107:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12102:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "12102:1:8"
																}
															]
														},
														{
															"nativeSrc": "12136:25:8",
															"nodeType": "YulAssignment",
															"src": "12136:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12159:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12159:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12141:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "12141:17:8"
																},
																"nativeSrc": "12141:20:8",
																"nodeType": "YulFunctionCall",
																"src": "12141:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12136:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "12136:1:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12183:22:8",
																"nodeType": "YulBlock",
																"src": "12183:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "12185:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "12185:16:8"
																			},
																			"nativeSrc": "12185:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12185:18:8"
																		},
																		"nativeSrc": "12185:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12185:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12180:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12180:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12173:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12173:6:8"
																},
																"nativeSrc": "12173:9:8",
																"nodeType": "YulFunctionCall",
																"src": "12173:9:8"
															},
															"nativeSrc": "12170:35:8",
															"nodeType": "YulIf",
															"src": "12170:35:8"
														},
														{
															"nativeSrc": "12215:14:8",
															"nodeType": "YulAssignment",
															"src": "12215:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12224:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12224:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12227:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12227:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12220:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12220:3:8"
																},
																"nativeSrc": "12220:9:8",
																"nodeType": "YulFunctionCall",
																"src": "12220:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "12215:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "12215:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "12050:185:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12081:1:8",
														"nodeType": "YulTypedName",
														"src": "12081:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12084:1:8",
														"nodeType": "YulTypedName",
														"src": "12084:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "12090:1:8",
														"nodeType": "YulTypedName",
														"src": "12090:1:8",
														"type": ""
													}
												],
												"src": "12050:185:8"
											},
											{
												"body": {
													"nativeSrc": "12347:63:8",
													"nodeType": "YulBlock",
													"src": "12347:63:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12369:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12369:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12377:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12377:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12365:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12365:3:8"
																		},
																		"nativeSrc": "12365:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12365:14:8"
																	},
																	{
																		"hexValue": "4e6f207265776172647320746f20636c61696d",
																		"kind": "string",
																		"nativeSrc": "12381:21:8",
																		"nodeType": "YulLiteral",
																		"src": "12381:21:8",
																		"type": "",
																		"value": "No rewards to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12358:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12358:6:8"
																},
																"nativeSrc": "12358:45:8",
																"nodeType": "YulFunctionCall",
																"src": "12358:45:8"
															},
															"nativeSrc": "12358:45:8",
															"nodeType": "YulExpressionStatement",
															"src": "12358:45:8"
														}
													]
												},
												"name": "store_literal_in_memory_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
												"nativeSrc": "12241:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12339:6:8",
														"nodeType": "YulTypedName",
														"src": "12339:6:8",
														"type": ""
													}
												],
												"src": "12241:169:8"
											},
											{
												"body": {
													"nativeSrc": "12562:220:8",
													"nodeType": "YulBlock",
													"src": "12562:220:8",
													"statements": [
														{
															"nativeSrc": "12572:74:8",
															"nodeType": "YulAssignment",
															"src": "12572:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12638:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12638:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12643:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12643:2:8",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12579:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "12579:58:8"
																},
																"nativeSrc": "12579:67:8",
																"nodeType": "YulFunctionCall",
																"src": "12579:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12572:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12572:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12744:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12744:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
																	"nativeSrc": "12655:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "12655:88:8"
																},
																"nativeSrc": "12655:93:8",
																"nodeType": "YulFunctionCall",
																"src": "12655:93:8"
															},
															"nativeSrc": "12655:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "12655:93:8"
														},
														{
															"nativeSrc": "12757:19:8",
															"nodeType": "YulAssignment",
															"src": "12757:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12768:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12768:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12773:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12773:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12764:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12764:3:8"
																},
																"nativeSrc": "12764:12:8",
																"nodeType": "YulFunctionCall",
																"src": "12764:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12757:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12757:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12416:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12550:3:8",
														"nodeType": "YulTypedName",
														"src": "12550:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12558:3:8",
														"nodeType": "YulTypedName",
														"src": "12558:3:8",
														"type": ""
													}
												],
												"src": "12416:366:8"
											},
											{
												"body": {
													"nativeSrc": "12959:248:8",
													"nodeType": "YulBlock",
													"src": "12959:248:8",
													"statements": [
														{
															"nativeSrc": "12969:26:8",
															"nodeType": "YulAssignment",
															"src": "12969:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12981:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "12981:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12992:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12992:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12977:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12977:3:8"
																},
																"nativeSrc": "12977:18:8",
																"nodeType": "YulFunctionCall",
																"src": "12977:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12969:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12969:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13016:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13016:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13027:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13027:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13012:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13012:3:8"
																		},
																		"nativeSrc": "13012:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13012:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13035:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "13035:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13041:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13041:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13031:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13031:3:8"
																		},
																		"nativeSrc": "13031:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13031:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13005:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13005:6:8"
																},
																"nativeSrc": "13005:47:8",
																"nodeType": "YulFunctionCall",
																"src": "13005:47:8"
															},
															"nativeSrc": "13005:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "13005:47:8"
														},
														{
															"nativeSrc": "13061:139:8",
															"nodeType": "YulAssignment",
															"src": "13061:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13195:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13195:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13069:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "13069:124:8"
																},
																"nativeSrc": "13069:131:8",
																"nodeType": "YulFunctionCall",
																"src": "13069:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13061:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13061:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12788:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12939:9:8",
														"nodeType": "YulTypedName",
														"src": "12939:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12954:4:8",
														"nodeType": "YulTypedName",
														"src": "12954:4:8",
														"type": ""
													}
												],
												"src": "12788:419:8"
											},
											{
												"body": {
													"nativeSrc": "13367:288:8",
													"nodeType": "YulBlock",
													"src": "13367:288:8",
													"statements": [
														{
															"nativeSrc": "13377:26:8",
															"nodeType": "YulAssignment",
															"src": "13377:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13389:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13389:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13400:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13400:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13385:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13385:3:8"
																},
																"nativeSrc": "13385:18:8",
																"nodeType": "YulFunctionCall",
																"src": "13385:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13377:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13377:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13457:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13457:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13470:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13470:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13481:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13481:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13466:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13466:3:8"
																		},
																		"nativeSrc": "13466:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13466:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13413:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "13413:43:8"
																},
																"nativeSrc": "13413:71:8",
																"nodeType": "YulFunctionCall",
																"src": "13413:71:8"
															},
															"nativeSrc": "13413:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "13413:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13538:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13538:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13551:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13551:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13562:2:8",
																				"nodeType": "YulLiteral",
																				"src": "13562:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13547:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13547:3:8"
																		},
																		"nativeSrc": "13547:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13547:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13494:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "13494:43:8"
																},
																"nativeSrc": "13494:72:8",
																"nodeType": "YulFunctionCall",
																"src": "13494:72:8"
															},
															"nativeSrc": "13494:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "13494:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13620:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13620:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13633:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13633:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13644:2:8",
																				"nodeType": "YulLiteral",
																				"src": "13644:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13629:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13629:3:8"
																		},
																		"nativeSrc": "13629:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13629:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13576:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "13576:43:8"
																},
																"nativeSrc": "13576:72:8",
																"nodeType": "YulFunctionCall",
																"src": "13576:72:8"
															},
															"nativeSrc": "13576:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "13576:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13213:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13323:9:8",
														"nodeType": "YulTypedName",
														"src": "13323:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13335:6:8",
														"nodeType": "YulTypedName",
														"src": "13335:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13343:6:8",
														"nodeType": "YulTypedName",
														"src": "13343:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13351:6:8",
														"nodeType": "YulTypedName",
														"src": "13351:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13362:4:8",
														"nodeType": "YulTypedName",
														"src": "13362:4:8",
														"type": ""
													}
												],
												"src": "13213:442:8"
											},
											{
												"body": {
													"nativeSrc": "13705:147:8",
													"nodeType": "YulBlock",
													"src": "13705:147:8",
													"statements": [
														{
															"nativeSrc": "13715:25:8",
															"nodeType": "YulAssignment",
															"src": "13715:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13738:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13738:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13720:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "13720:17:8"
																},
																"nativeSrc": "13720:20:8",
																"nodeType": "YulFunctionCall",
																"src": "13720:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13715:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "13715:1:8"
																}
															]
														},
														{
															"nativeSrc": "13749:25:8",
															"nodeType": "YulAssignment",
															"src": "13749:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13772:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13772:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13754:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "13754:17:8"
																},
																"nativeSrc": "13754:20:8",
																"nodeType": "YulFunctionCall",
																"src": "13754:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13749:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "13749:1:8"
																}
															]
														},
														{
															"nativeSrc": "13783:16:8",
															"nodeType": "YulAssignment",
															"src": "13783:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13794:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13794:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13797:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13797:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13790:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13790:3:8"
																},
																"nativeSrc": "13790:9:8",
																"nodeType": "YulFunctionCall",
																"src": "13790:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13783:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13783:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13823:22:8",
																"nodeType": "YulBlock",
																"src": "13823:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13825:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "13825:16:8"
																			},
																			"nativeSrc": "13825:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "13825:18:8"
																		},
																		"nativeSrc": "13825:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "13825:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13815:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13815:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13818:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13818:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13812:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "13812:2:8"
																},
																"nativeSrc": "13812:10:8",
																"nodeType": "YulFunctionCall",
																"src": "13812:10:8"
															},
															"nativeSrc": "13809:36:8",
															"nodeType": "YulIf",
															"src": "13809:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13661:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13692:1:8",
														"nodeType": "YulTypedName",
														"src": "13692:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13695:1:8",
														"nodeType": "YulTypedName",
														"src": "13695:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13701:3:8",
														"nodeType": "YulTypedName",
														"src": "13701:3:8",
														"type": ""
													}
												],
												"src": "13661:191:8"
											},
											{
												"body": {
													"nativeSrc": "14012:288:8",
													"nodeType": "YulBlock",
													"src": "14012:288:8",
													"statements": [
														{
															"nativeSrc": "14022:26:8",
															"nodeType": "YulAssignment",
															"src": "14022:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14034:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14034:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14045:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14045:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14030:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14030:3:8"
																},
																"nativeSrc": "14030:18:8",
																"nodeType": "YulFunctionCall",
																"src": "14030:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14022:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14022:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14102:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14102:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14115:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14115:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14126:1:8",
																				"nodeType": "YulLiteral",
																				"src": "14126:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14111:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14111:3:8"
																		},
																		"nativeSrc": "14111:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14111:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14058:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "14058:43:8"
																},
																"nativeSrc": "14058:71:8",
																"nodeType": "YulFunctionCall",
																"src": "14058:71:8"
															},
															"nativeSrc": "14058:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "14058:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14183:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14183:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14196:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14196:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14207:2:8",
																				"nodeType": "YulLiteral",
																				"src": "14207:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14192:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14192:3:8"
																		},
																		"nativeSrc": "14192:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14192:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14139:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "14139:43:8"
																},
																"nativeSrc": "14139:72:8",
																"nodeType": "YulFunctionCall",
																"src": "14139:72:8"
															},
															"nativeSrc": "14139:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "14139:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14265:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14265:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14278:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14278:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14289:2:8",
																				"nodeType": "YulLiteral",
																				"src": "14289:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14274:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14274:3:8"
																		},
																		"nativeSrc": "14274:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14274:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14221:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "14221:43:8"
																},
																"nativeSrc": "14221:72:8",
																"nodeType": "YulFunctionCall",
																"src": "14221:72:8"
															},
															"nativeSrc": "14221:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "14221:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13858:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13968:9:8",
														"nodeType": "YulTypedName",
														"src": "13968:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13980:6:8",
														"nodeType": "YulTypedName",
														"src": "13980:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13988:6:8",
														"nodeType": "YulTypedName",
														"src": "13988:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13996:6:8",
														"nodeType": "YulTypedName",
														"src": "13996:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14007:4:8",
														"nodeType": "YulTypedName",
														"src": "14007:4:8",
														"type": ""
													}
												],
												"src": "13858:442:8"
											},
											{
												"body": {
													"nativeSrc": "14412:75:8",
													"nodeType": "YulBlock",
													"src": "14412:75:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14434:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "14434:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14442:1:8",
																				"nodeType": "YulLiteral",
																				"src": "14442:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14430:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14430:3:8"
																		},
																		"nativeSrc": "14430:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14430:14:8"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "14446:33:8",
																		"nodeType": "YulLiteral",
																		"src": "14446:33:8",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14423:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14423:6:8"
																},
																"nativeSrc": "14423:57:8",
																"nodeType": "YulFunctionCall",
																"src": "14423:57:8"
															},
															"nativeSrc": "14423:57:8",
															"nodeType": "YulExpressionStatement",
															"src": "14423:57:8"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "14306:181:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14404:6:8",
														"nodeType": "YulTypedName",
														"src": "14404:6:8",
														"type": ""
													}
												],
												"src": "14306:181:8"
											},
											{
												"body": {
													"nativeSrc": "14639:220:8",
													"nodeType": "YulBlock",
													"src": "14639:220:8",
													"statements": [
														{
															"nativeSrc": "14649:74:8",
															"nodeType": "YulAssignment",
															"src": "14649:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14715:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14715:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14720:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14720:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14656:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "14656:58:8"
																},
																"nativeSrc": "14656:67:8",
																"nodeType": "YulFunctionCall",
																"src": "14656:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14649:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14649:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14821:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14821:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "14732:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "14732:88:8"
																},
																"nativeSrc": "14732:93:8",
																"nodeType": "YulFunctionCall",
																"src": "14732:93:8"
															},
															"nativeSrc": "14732:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "14732:93:8"
														},
														{
															"nativeSrc": "14834:19:8",
															"nodeType": "YulAssignment",
															"src": "14834:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14845:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14845:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14850:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14850:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14841:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14841:3:8"
																},
																"nativeSrc": "14841:12:8",
																"nodeType": "YulFunctionCall",
																"src": "14841:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14834:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14834:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14493:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14627:3:8",
														"nodeType": "YulTypedName",
														"src": "14627:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14635:3:8",
														"nodeType": "YulTypedName",
														"src": "14635:3:8",
														"type": ""
													}
												],
												"src": "14493:366:8"
											},
											{
												"body": {
													"nativeSrc": "15036:248:8",
													"nodeType": "YulBlock",
													"src": "15036:248:8",
													"statements": [
														{
															"nativeSrc": "15046:26:8",
															"nodeType": "YulAssignment",
															"src": "15046:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15058:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "15058:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15069:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15069:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15054:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15054:3:8"
																},
																"nativeSrc": "15054:18:8",
																"nodeType": "YulFunctionCall",
																"src": "15054:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15046:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15046:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15093:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15093:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15104:1:8",
																				"nodeType": "YulLiteral",
																				"src": "15104:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15089:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15089:3:8"
																		},
																		"nativeSrc": "15089:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15089:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15112:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "15112:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15118:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15118:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15108:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15108:3:8"
																		},
																		"nativeSrc": "15108:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15108:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15082:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15082:6:8"
																},
																"nativeSrc": "15082:47:8",
																"nodeType": "YulFunctionCall",
																"src": "15082:47:8"
															},
															"nativeSrc": "15082:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "15082:47:8"
														},
														{
															"nativeSrc": "15138:139:8",
															"nodeType": "YulAssignment",
															"src": "15138:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15272:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "15272:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15146:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "15146:124:8"
																},
																"nativeSrc": "15146:131:8",
																"nodeType": "YulFunctionCall",
																"src": "15146:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15138:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15138:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14865:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15016:9:8",
														"nodeType": "YulTypedName",
														"src": "15016:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15031:4:8",
														"nodeType": "YulTypedName",
														"src": "15031:4:8",
														"type": ""
													}
												],
												"src": "14865:419:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$942_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$942_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$942_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$942__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$942_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_f7d3967cfde58b67385c8023f773e1b407dd3cf471a261f64b0eb38ecec65d91(memPtr) {\n\n        mstore(add(memPtr, 0), \"you donot have enouph balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_f7d3967cfde58b67385c8023f773e1b407dd3cf471a261f64b0eb38ecec65d91_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_f7d3967cfde58b67385c8023f773e1b407dd3cf471a261f64b0eb38ecec65d91(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f7d3967cfde58b67385c8023f773e1b407dd3cf471a261f64b0eb38ecec65d91__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f7d3967cfde58b67385c8023f773e1b407dd3cf471a261f64b0eb38ecec65d91_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d(memPtr) {\n\n        mstore(add(memPtr, 0), \"No rewards to claim\")\n\n    }\n\n    function abi_encode_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061013f575f3560e01c806370a08231116100b657806395d89b411161007a57806395d89b4114610363578063a9059cbb14610381578063b544bf83146103b1578063dd62ed3e146103cf578063f2fde38b146103ff578063f7c899a11461041b5761013f565b806370a08231146102bf578063715018a6146102ef5780637acb7757146102f95780638879f730146103155780638da5cb5b146103455761013f565b806323b872dd1161010857806323b872dd146101e957806327e235e314610219578063313ce567146102495780633bc46a3f146102675780635997bb37146102835780635dcc9391146102a15761013f565b8062f714ce1461014357806306fdde031461015f578063095ea7b31461017d5780630cd43d5d146101ad57806318160ddd146101cb575b5f80fd5b61015d60048036038101906101589190611632565b610439565b005b610167610644565b60405161017491906116e0565b60405180910390f35b61019760048036038101906101929190611700565b6106d4565b6040516101a49190611758565b60405180910390f35b6101b56106f6565b6040516101c29190611780565b60405180910390f35b6101d36106fb565b6040516101e09190611780565b60405180910390f35b61020360048036038101906101fe9190611799565b610704565b6040516102109190611758565b60405180910390f35b610233600480360381019061022e91906117e9565b610732565b6040516102409190611780565b60405180910390f35b610251610747565b60405161025e919061182f565b60405180910390f35b610281600480360381019061027c9190611848565b61074f565b005b61028b61099a565b6040516102989190611780565b60405180910390f35b6102a961099f565b6040516102b69190611780565b60405180910390f35b6102d960048036038101906102d491906117e9565b6109a7565b6040516102e69190611780565b60405180910390f35b6102f76109ec565b005b610313600480360381019061030e9190611632565b6109ff565b005b61032f600480360381019061032a91906117e9565b610bdc565b60405161033c9190611780565b60405180910390f35b61034d610bf1565b60405161035a9190611882565b60405180910390f35b61036b610c19565b60405161037891906116e0565b60405180910390f35b61039b60048036038101906103969190611700565b610ca9565b6040516103a89190611758565b60405180910390f35b6103b9610ccb565b6040516103c69190611780565b60405180910390f35b6103e960048036038101906103e4919061189b565b610cd1565b6040516103f69190611780565b60405180910390f35b610419600480360381019061041491906117e9565b610d53565b005b610423610dd7565b6040516104309190611934565b60405180910390f35b8160085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090611997565b60405180910390fd5b6104c28261074f565b8060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461054e91906119e2565b9250508190555060075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016105b1929190611a15565b6020604051808303815f875af11580156105cd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105f19190611a66565b503373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5836040516106389190611780565b60405180910390a25050565b60606003805461065390611abe565b80601f016020809104026020016040519081016040528092919081815260200182805461067f90611abe565b80156106ca5780601f106106a1576101008083540402835291602001916106ca565b820191905f5260205f20905b8154815290600101906020018083116106ad57829003601f168201915b5050505050905090565b5f806106de610dfc565b90506106eb818585610e03565b600191505092915050565b601981565b5f600254905090565b5f8061070e610dfc565b905061071b858285610e15565b610726858585610ea7565b60019150509392505050565b6008602052805f5260405f205f915090505481565b5f6012905090565b610757610f97565b8060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156107d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ce90611b38565b60405180910390fd5b5f8060095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20544261082291906119e2565b90505f600b544261083391906119e2565b90506276a70081101561087a576301e1338060646108519190611b56565b8260198661085f9190611b56565b6108699190611b56565b6108739190611bc4565b92506108b0565b6301e13380606461088b9190611b56565b82600f866108999190611b56565b6108a39190611b56565b6108ad9190611bc4565b92505b5f83116108f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e990611c3e565b60405180910390fd5b6108fc3384610fe6565b4260095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe846040516109849190611780565b60405180910390a2505050610997611065565b50565b600f81565b6301e1338081565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6109f461106f565b6109fd5f6110f6565b565b610a07610f97565b8060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610aa593929190611c5c565b6020604051808303815f875af1158015610ac1573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ae59190611a66565b508160085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610b329190611c91565b925050819055504260095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555042600a819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d83604051610bc89190611780565b60405180910390a2610bd8611065565b5050565b6009602052805f5260405f205f915090505481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610c2890611abe565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5490611abe565b8015610c9f5780601f10610c7657610100808354040283529160200191610c9f565b820191905f5260205f20905b815481529060010190602001808311610c8257829003601f168201915b5050505050905090565b5f80610cb3610dfc565b9050610cc0818585610ea7565b600191505092915050565b600a5481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610d5b61106f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610dcb575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610dc29190611882565b60405180910390fd5b610dd4816110f6565b50565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f33905090565b610e1083838360016111b9565b505050565b5f610e208484610cd1565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610ea15781811015610e92578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610e8993929190611cc4565b60405180910390fd5b610ea084848484035f6111b9565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f17575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610f0e9190611882565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f87575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610f7e9190611882565b60405180910390fd5b610f92838383611388565b505050565b600260065403610fdc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd390611d43565b60405180910390fd5b6002600681905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611056575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161104d9190611882565b60405180910390fd5b6110615f8383611388565b5050565b6001600681905550565b611077610dfc565b73ffffffffffffffffffffffffffffffffffffffff16611095610bf1565b73ffffffffffffffffffffffffffffffffffffffff16146110f4576110b8610dfc565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016110eb9190611882565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611229575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016112209190611882565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611299575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016112909190611882565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611382578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113799190611780565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113d8578060025f8282546113cc9190611c91565b925050819055506114a6565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611461578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161145893929190611cc4565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114ed578060025f8282540392505081905550611537565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516115949190611780565b60405180910390a3505050565b5f80fd5b5f819050919050565b6115b7816115a5565b81146115c1575f80fd5b50565b5f813590506115d2816115ae565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611601826115d8565b9050919050565b611611816115f7565b811461161b575f80fd5b50565b5f8135905061162c81611608565b92915050565b5f8060408385031215611648576116476115a1565b5b5f611655858286016115c4565b92505060206116668582860161161e565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6116b282611670565b6116bc818561167a565b93506116cc81856020860161168a565b6116d581611698565b840191505092915050565b5f6020820190508181035f8301526116f881846116a8565b905092915050565b5f8060408385031215611716576117156115a1565b5b5f6117238582860161161e565b9250506020611734858286016115c4565b9150509250929050565b5f8115159050919050565b6117528161173e565b82525050565b5f60208201905061176b5f830184611749565b92915050565b61177a816115a5565b82525050565b5f6020820190506117935f830184611771565b92915050565b5f805f606084860312156117b0576117af6115a1565b5b5f6117bd8682870161161e565b93505060206117ce8682870161161e565b92505060406117df868287016115c4565b9150509250925092565b5f602082840312156117fe576117fd6115a1565b5b5f61180b8482850161161e565b91505092915050565b5f60ff82169050919050565b61182981611814565b82525050565b5f6020820190506118425f830184611820565b92915050565b5f6020828403121561185d5761185c6115a1565b5b5f61186a848285016115c4565b91505092915050565b61187c816115f7565b82525050565b5f6020820190506118955f830184611873565b92915050565b5f80604083850312156118b1576118b06115a1565b5b5f6118be8582860161161e565b92505060206118cf8582860161161e565b9150509250929050565b5f819050919050565b5f6118fc6118f76118f2846115d8565b6118d9565b6115d8565b9050919050565b5f61190d826118e2565b9050919050565b5f61191e82611903565b9050919050565b61192e81611914565b82525050565b5f6020820190506119475f830184611925565b92915050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f61198160148361167a565b915061198c8261194d565b602082019050919050565b5f6020820190508181035f8301526119ae81611975565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6119ec826115a5565b91506119f7836115a5565b9250828203905081811115611a0f57611a0e6119b5565b5b92915050565b5f604082019050611a285f830185611873565b611a356020830184611771565b9392505050565b611a458161173e565b8114611a4f575f80fd5b50565b5f81519050611a6081611a3c565b92915050565b5f60208284031215611a7b57611a7a6115a1565b5b5f611a8884828501611a52565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611ad557607f821691505b602082108103611ae857611ae7611a91565b5b50919050565b7f796f7520646f6e6f74206861766520656e6f7570682062616c616e63650000005f82015250565b5f611b22601d8361167a565b9150611b2d82611aee565b602082019050919050565b5f6020820190508181035f830152611b4f81611b16565b9050919050565b5f611b60826115a5565b9150611b6b836115a5565b9250828202611b79816115a5565b91508282048414831517611b9057611b8f6119b5565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611bce826115a5565b9150611bd9836115a5565b925082611be957611be8611b97565b5b828204905092915050565b7f4e6f207265776172647320746f20636c61696d000000000000000000000000005f82015250565b5f611c2860138361167a565b9150611c3382611bf4565b602082019050919050565b5f6020820190508181035f830152611c5581611c1c565b9050919050565b5f606082019050611c6f5f830186611873565b611c7c6020830185611873565b611c896040830184611771565b949350505050565b5f611c9b826115a5565b9150611ca6836115a5565b9250828201905080821115611cbe57611cbd6119b5565b5b92915050565b5f606082019050611cd75f830186611873565b611ce46020830185611771565b611cf16040830184611771565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611d2d601f8361167a565b9150611d3882611cf9565b602082019050919050565b5f6020820190508181035f830152611d5a81611d21565b905091905056fea2646970667358221220b3a3e26d4f5885b61719d20689a1f0e98a2228f68c4694fd1809740038907b8064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0xB544BF83 EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0xF7C899A1 EQ PUSH2 0x41B JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x7ACB7757 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x8879F730 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x345 JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x3BC46A3F EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x5997BB37 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x5DCC9391 EQ PUSH2 0x2A1 JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH3 0xF714CE EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xCD43D5D EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1CB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0x439 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x167 PUSH2 0x644 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x16E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x1700 JUMP JUMPDEST PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x1758 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B5 PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D3 PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x1799 JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x1758 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x17E9 JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x251 PUSH2 0x747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1848 JUMP JUMPDEST PUSH2 0x74F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28B PUSH2 0x99A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH2 0x99F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x17E9 JUMP JUMPDEST PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH2 0x9EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x313 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0x9FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x17E9 JUMP JUMPDEST PUSH2 0xBDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34D PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36B PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x16E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x1700 JUMP JUMPDEST PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x1758 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B9 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH2 0xCD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x419 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x17E9 JUMP JUMPDEST PUSH2 0xD53 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x423 PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x1934 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B0 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4C2 DUP3 PUSH2 0x74F JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x54E SWAP2 SWAP1 PUSH2 0x19E2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B1 SWAP3 SWAP2 SWAP1 PUSH2 0x1A15 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5CD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x1A66 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x638 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x653 SWAP1 PUSH2 0x1ABE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x67F SWAP1 PUSH2 0x1ABE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6CA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6A1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6CA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6AD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6DE PUSH2 0xDFC JUMP JUMPDEST SWAP1 POP PUSH2 0x6EB DUP2 DUP6 DUP6 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x19 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x70E PUSH2 0xDFC JUMP JUMPDEST SWAP1 POP PUSH2 0x71B DUP6 DUP3 DUP6 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x726 DUP6 DUP6 DUP6 PUSH2 0xEA7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x757 PUSH2 0xF97 JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x7D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CE SWAP1 PUSH2 0x1B38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x822 SWAP2 SWAP1 PUSH2 0x19E2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB SLOAD TIMESTAMP PUSH2 0x833 SWAP2 SWAP1 PUSH2 0x19E2 JUMP JUMPDEST SWAP1 POP PUSH3 0x76A700 DUP2 LT ISZERO PUSH2 0x87A JUMPI PUSH4 0x1E13380 PUSH1 0x64 PUSH2 0x851 SWAP2 SWAP1 PUSH2 0x1B56 JUMP JUMPDEST DUP3 PUSH1 0x19 DUP7 PUSH2 0x85F SWAP2 SWAP1 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0x869 SWAP2 SWAP1 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0x873 SWAP2 SWAP1 PUSH2 0x1BC4 JUMP JUMPDEST SWAP3 POP PUSH2 0x8B0 JUMP JUMPDEST PUSH4 0x1E13380 PUSH1 0x64 PUSH2 0x88B SWAP2 SWAP1 PUSH2 0x1B56 JUMP JUMPDEST DUP3 PUSH1 0xF DUP7 PUSH2 0x899 SWAP2 SWAP1 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0x8A3 SWAP2 SWAP1 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0x8AD SWAP2 SWAP1 PUSH2 0x1BC4 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH0 DUP4 GT PUSH2 0x8F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E9 SWAP1 PUSH2 0x1C3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8FC CALLER DUP5 PUSH2 0xFE6 JUMP JUMPDEST TIMESTAMP PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE DUP5 PUSH1 0x40 MLOAD PUSH2 0x984 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x997 PUSH2 0x1065 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xF DUP2 JUMP JUMPDEST PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F4 PUSH2 0x106F JUMP JUMPDEST PUSH2 0x9FD PUSH0 PUSH2 0x10F6 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA07 PUSH2 0xF97 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C5C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAC1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAE5 SWAP2 SWAP1 PUSH2 0x1A66 JUMP JUMPDEST POP DUP2 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB32 SWAP2 SWAP1 PUSH2 0x1C91 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xA DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP4 PUSH1 0x40 MLOAD PUSH2 0xBC8 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xBD8 PUSH2 0x1065 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xC28 SWAP1 PUSH2 0x1ABE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC54 SWAP1 PUSH2 0x1ABE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC9F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC76 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC9F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC82 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xCB3 PUSH2 0xDFC JUMP JUMPDEST SWAP1 POP PUSH2 0xCC0 DUP2 DUP6 DUP6 PUSH2 0xEA7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD5B PUSH2 0x106F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDCB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC2 SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDD4 DUP2 PUSH2 0x10F6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE10 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE20 DUP5 DUP5 PUSH2 0xCD1 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xEA1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xE92 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE89 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA0 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x11B9 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF17 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0E SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF87 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF7E SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF92 DUP4 DUP4 DUP4 PUSH2 0x1388 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xFDC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD3 SWAP1 PUSH2 0x1D43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1056 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104D SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1061 PUSH0 DUP4 DUP4 PUSH2 0x1388 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1077 PUSH2 0xDFC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1095 PUSH2 0xBF1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10F4 JUMPI PUSH2 0x10B8 PUSH2 0xDFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10EB SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1229 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1220 SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1299 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1290 SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1382 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1379 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13D8 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x13CC SWAP2 SWAP1 PUSH2 0x1C91 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x14A6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1461 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1458 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14ED JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1537 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1594 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B7 DUP2 PUSH2 0x15A5 JUMP JUMPDEST DUP2 EQ PUSH2 0x15C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15D2 DUP2 PUSH2 0x15AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1601 DUP3 PUSH2 0x15D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1611 DUP2 PUSH2 0x15F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x161B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x162C DUP2 PUSH2 0x1608 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1648 JUMPI PUSH2 0x1647 PUSH2 0x15A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1655 DUP6 DUP3 DUP7 ADD PUSH2 0x15C4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1666 DUP6 DUP3 DUP7 ADD PUSH2 0x161E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16B2 DUP3 PUSH2 0x1670 JUMP JUMPDEST PUSH2 0x16BC DUP2 DUP6 PUSH2 0x167A JUMP JUMPDEST SWAP4 POP PUSH2 0x16CC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x168A JUMP JUMPDEST PUSH2 0x16D5 DUP2 PUSH2 0x1698 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16F8 DUP2 DUP5 PUSH2 0x16A8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1716 JUMPI PUSH2 0x1715 PUSH2 0x15A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1723 DUP6 DUP3 DUP7 ADD PUSH2 0x161E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1734 DUP6 DUP3 DUP7 ADD PUSH2 0x15C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1752 DUP2 PUSH2 0x173E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x176B PUSH0 DUP4 ADD DUP5 PUSH2 0x1749 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x177A DUP2 PUSH2 0x15A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1793 PUSH0 DUP4 ADD DUP5 PUSH2 0x1771 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17B0 JUMPI PUSH2 0x17AF PUSH2 0x15A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17BD DUP7 DUP3 DUP8 ADD PUSH2 0x161E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x17CE DUP7 DUP3 DUP8 ADD PUSH2 0x161E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x17DF DUP7 DUP3 DUP8 ADD PUSH2 0x15C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17FE JUMPI PUSH2 0x17FD PUSH2 0x15A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x180B DUP5 DUP3 DUP6 ADD PUSH2 0x161E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1829 DUP2 PUSH2 0x1814 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1842 PUSH0 DUP4 ADD DUP5 PUSH2 0x1820 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x185D JUMPI PUSH2 0x185C PUSH2 0x15A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x186A DUP5 DUP3 DUP6 ADD PUSH2 0x15C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x187C DUP2 PUSH2 0x15F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1895 PUSH0 DUP4 ADD DUP5 PUSH2 0x1873 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18B1 JUMPI PUSH2 0x18B0 PUSH2 0x15A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18BE DUP6 DUP3 DUP7 ADD PUSH2 0x161E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18CF DUP6 DUP3 DUP7 ADD PUSH2 0x161E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18FC PUSH2 0x18F7 PUSH2 0x18F2 DUP5 PUSH2 0x15D8 JUMP JUMPDEST PUSH2 0x18D9 JUMP JUMPDEST PUSH2 0x15D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x190D DUP3 PUSH2 0x18E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x191E DUP3 PUSH2 0x1903 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x192E DUP2 PUSH2 0x1914 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1947 PUSH0 DUP4 ADD DUP5 PUSH2 0x1925 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1981 PUSH1 0x14 DUP4 PUSH2 0x167A JUMP JUMPDEST SWAP2 POP PUSH2 0x198C DUP3 PUSH2 0x194D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19AE DUP2 PUSH2 0x1975 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x19EC DUP3 PUSH2 0x15A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x19F7 DUP4 PUSH2 0x15A5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1A0F JUMPI PUSH2 0x1A0E PUSH2 0x19B5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A28 PUSH0 DUP4 ADD DUP6 PUSH2 0x1873 JUMP JUMPDEST PUSH2 0x1A35 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1771 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1A45 DUP2 PUSH2 0x173E JUMP JUMPDEST DUP2 EQ PUSH2 0x1A4F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A60 DUP2 PUSH2 0x1A3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A7B JUMPI PUSH2 0x1A7A PUSH2 0x15A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A88 DUP5 DUP3 DUP6 ADD PUSH2 0x1A52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1AD5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AE8 JUMPI PUSH2 0x1AE7 PUSH2 0x1A91 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x796F7520646F6E6F74206861766520656E6F7570682062616C616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B22 PUSH1 0x1D DUP4 PUSH2 0x167A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B2D DUP3 PUSH2 0x1AEE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B4F DUP2 PUSH2 0x1B16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B60 DUP3 PUSH2 0x15A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B6B DUP4 PUSH2 0x15A5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1B79 DUP2 PUSH2 0x15A5 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1B90 JUMPI PUSH2 0x1B8F PUSH2 0x19B5 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1BCE DUP3 PUSH2 0x15A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD9 DUP4 PUSH2 0x15A5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1BE9 JUMPI PUSH2 0x1BE8 PUSH2 0x1B97 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F207265776172647320746F20636C61696D00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C28 PUSH1 0x13 DUP4 PUSH2 0x167A JUMP JUMPDEST SWAP2 POP PUSH2 0x1C33 DUP3 PUSH2 0x1BF4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C55 DUP2 PUSH2 0x1C1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C6F PUSH0 DUP4 ADD DUP7 PUSH2 0x1873 JUMP JUMPDEST PUSH2 0x1C7C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1873 JUMP JUMPDEST PUSH2 0x1C89 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1771 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C9B DUP3 PUSH2 0x15A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CA6 DUP4 PUSH2 0x15A5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1CBE JUMPI PUSH2 0x1CBD PUSH2 0x19B5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CD7 PUSH0 DUP4 ADD DUP7 PUSH2 0x1873 JUMP JUMPDEST PUSH2 0x1CE4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1771 JUMP JUMPDEST PUSH2 0x1CF1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1771 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D2D PUSH1 0x1F DUP4 PUSH2 0x167A JUMP JUMPDEST SWAP2 POP PUSH2 0x1D38 DUP3 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D5A DUP2 PUSH2 0x1D21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 LOG3 0xE2 PUSH14 0x4F5885B61719D20689A1F0E98A22 0x28 0xF6 DUP13 CHAINID SWAP5 REVERT XOR MULMOD PUSH21 0x38907B8064736F6C634300081A00330000000000 ",
							"sourceMap": "288:2274:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1425:345;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;625:47:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;376:43:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1777:782:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;579:40;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;479:60;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1056:363:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;425:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;545:28:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;346:23:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1425:345;1530:6;1506:8;:20;1515:10;1506:20;;;;;;;;;;;;;;;;:30;;1498:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1571:20;1584:6;1571:12;:20::i;:::-;1620:10;1601:9;;:30;;;;;;;;;;;;;;;;;;1664:6;1641:8;:20;1650:10;1641:20;;;;;;;;;;;;;;;;:29;;;;;;;:::i;:::-;;;;;;;;1680:9;;;;;;;;;;;:18;;;1700:10;1712:6;1680:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1744:10;1734:29;;;1756:6;1734:29;;;;;;:::i;:::-;;;;;;;;1425:345;;:::o;1779:89:3:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;625:47:7:-;670:2;625:47;:::o;2849:97:3:-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;376:43:7:-;;;;;;;;;;;;;;;;;:::o;2707:82:3:-;2756:5;2780:2;2773:9;;2707:82;:::o;1777:782:7:-;2261:21:2;:19;:21::i;:::-;1877:7:7::1;1853:8;:20;1862:10;1853:20;;;;;;;;;;;;;;;;:31;;1845:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;1928:14;1952:21:::0;1994:12:::1;:24;2007:10;1994:24;;;;;;;;;;;;;;;;1976:15;:42;;;;:::i;:::-;1952:66;;2028:32;2081:12;;2063:15;:30;;;;:::i;:::-;2028:65;;2134:11;2106:24;:40;2103:261;;;521:18;2219:3;:21;;;;:::i;:::-;2203:13;670:2;2172:7;:28;;;;:::i;:::-;:44;;;;:::i;:::-;2171:70;;;;:::i;:::-;2162:79;;2103:261;;;521:18;2331:3;:21;;;;:::i;:::-;2315:13;617:2;2291:7;:21;;;;:::i;:::-;:37;;;;:::i;:::-;2290:63;;;;:::i;:::-;2281:72;;2103:261;2390:1;2381:6;:10;2373:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;2425:25;2431:10;2443:6;2425:5;:25::i;:::-;2487:15;2460:12;:24;2473:10;2460:24;;;;;;;;;;;;;;;:42;;;;2532:10;2517:34;;;2544:6;2517:34;;;;;;:::i;:::-;;;;;;;;1835:724;;;2303:20:2::0;:18;:20::i;:::-;1777:782:7;:::o;579:40::-;617:2;579:40;:::o;479:60::-;521:18;479:60;:::o;3004:116:3:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1056:363:7:-;2261:21:2;:19;:21::i;:::-;1160:10:7::1;1141:9;;:30;;;;;;;;;;;;;;;;;;1181:9;;;;;;;;;;;:22;;;1204:10;1224:4;1231:6;1181:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1272:6;1248:8;:20;1257:10;1248:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;1315:15;1288:12;:24;1301:10;1288:24;;;;;;;;;;;;;;;:42;;;;1356:15;1340:13;:31;;;;1393:10;1386:26;;;1405:6;1386:26;;;;;;:::i;:::-;;;;;;;;2303:20:2::0;:18;:20::i;:::-;1056:363:7;;:::o;425:47::-;;;;;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:3:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;545:28:7:-;;;;:::o;3551:140:3:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;346:23:7:-;;;;;;;;;;;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8734:128:3:-;8818:37;8827:5;8834:7;8843:5;8850:4;8818:8;:37::i;:::-;8734:128;;;:::o;10423:477::-;10522:24;10549:25;10559:5;10566:7;10549:9;:25::i;:::-;10522:52;;10608:17;10588:16;:37;10584:310;;10664:5;10645:16;:24;10641:130;;;10723:7;10732:16;10750:5;10696:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10641:130;10812:57;10821:5;10828:7;10856:5;10837:16;:24;10863:5;10812:8;:57::i;:::-;10584:310;10512:388;10423:477;;;:::o;5393:308::-;5500:1;5484:18;;:4;:18;;;5480:86;;5552:1;5525:30;;;;;;;;;;;:::i;:::-;;;;;;;;5480:86;5593:1;5579:16;;:2;:16;;;5575:86;;5647:1;5618:32;;;;;;;;;;;:::i;:::-;;;;;;;;5575:86;5670:24;5678:4;5684:2;5688:5;5670:7;:24::i;:::-;5393:308;;;:::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;7466:208:3:-;7555:1;7536:21;;:7;:21;;;7532:91;;7609:1;7580:32;;;;;;;;;;;:::i;:::-;;;;;;;;7532:91;7632:35;7648:1;7652:7;7661:5;7632:7;:35::i;:::-;7466:208;;:::o;2629:209:2:-;1716:1;2809:7;:22;;;;2629:209::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9709:432:3:-;9838:1;9821:19;;:5;:19;;;9817:89;;9892:1;9863:32;;;;;;;;;;;:::i;:::-;;;;;;;;9817:89;9938:1;9919:21;;:7;:21;;;9915:90;;9991:1;9963:31;;;;;;;;;;;:::i;:::-;;;;;;;;9915:90;10044:5;10014:11;:18;10026:5;10014:18;;;;;;;;;;;;;;;:27;10033:7;10014:27;;;;;;;;;;;;;;;:35;;;;10063:9;10059:76;;;10109:7;10093:31;;10102:5;10093:31;;;10118:5;10093:31;;;;;;:::i;:::-;;;;;;;;10059:76;9709:432;;;;:::o;6016:1107::-;6121:1;6105:18;;:4;:18;;;6101:540;;6257:5;6241:12;;:21;;;;;;;:::i;:::-;;;;;;;;6101:540;;;6293:19;6315:9;:15;6325:4;6315:15;;;;;;;;;;;;;;;;6293:37;;6362:5;6348:11;:19;6344:115;;;6419:4;6425:11;6438:5;6394:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6344:115;6611:5;6597:11;:19;6579:9;:15;6589:4;6579:15;;;;;;;;;;;;;;;:37;;;;6279:362;6101:540;6669:1;6655:16;;:2;:16;;;6651:425;;6834:5;6818:12;;:21;;;;;;;;;;;6651:425;;;7046:5;7029:9;:13;7039:2;7029:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6651:425;7106:2;7091:25;;7100:4;7091:25;;;7110:5;7091:25;;;;;;:::i;:::-;;;;;;;;6016:1107;;;:::o;88:117:8:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:126::-;727:7;767:42;760:5;756:54;745:65;;690:126;;;:::o;822:96::-;859:7;888:24;906:5;888:24;:::i;:::-;877:35;;822:96;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:99::-;1729:6;1763:5;1757:12;1747:22;;1677:99;;;:::o;1782:169::-;1866:11;1900:6;1895:3;1888:19;1940:4;1935:3;1931:14;1916:29;;1782:169;;;;:::o;1957:139::-;2046:6;2041:3;2036;2030:23;2087:1;2078:6;2073:3;2069:16;2062:27;1957:139;;;:::o;2102:102::-;2143:6;2194:2;2190:7;2185:2;2178:5;2174:14;2170:28;2160:38;;2102:102;;;:::o;2210:377::-;2298:3;2326:39;2359:5;2326:39;:::i;:::-;2381:71;2445:6;2440:3;2381:71;:::i;:::-;2374:78;;2461:65;2519:6;2514:3;2507:4;2500:5;2496:16;2461:65;:::i;:::-;2551:29;2573:6;2551:29;:::i;:::-;2546:3;2542:39;2535:46;;2302:285;2210:377;;;;:::o;2593:313::-;2706:4;2744:2;2733:9;2729:18;2721:26;;2793:9;2787:4;2783:20;2779:1;2768:9;2764:17;2757:47;2821:78;2894:4;2885:6;2821:78;:::i;:::-;2813:86;;2593:313;;;;:::o;2912:474::-;2980:6;2988;3037:2;3025:9;3016:7;3012:23;3008:32;3005:119;;;3043:79;;:::i;:::-;3005:119;3163:1;3188:53;3233:7;3224:6;3213:9;3209:22;3188:53;:::i;:::-;3178:63;;3134:117;3290:2;3316:53;3361:7;3352:6;3341:9;3337:22;3316:53;:::i;:::-;3306:63;;3261:118;2912:474;;;;;:::o;3392:90::-;3426:7;3469:5;3462:13;3455:21;3444:32;;3392:90;;;:::o;3488:109::-;3569:21;3584:5;3569:21;:::i;:::-;3564:3;3557:34;3488:109;;:::o;3603:210::-;3690:4;3728:2;3717:9;3713:18;3705:26;;3741:65;3803:1;3792:9;3788:17;3779:6;3741:65;:::i;:::-;3603:210;;;;:::o;3819:118::-;3906:24;3924:5;3906:24;:::i;:::-;3901:3;3894:37;3819:118;;:::o;3943:222::-;4036:4;4074:2;4063:9;4059:18;4051:26;;4087:71;4155:1;4144:9;4140:17;4131:6;4087:71;:::i;:::-;3943:222;;;;:::o;4171:619::-;4248:6;4256;4264;4313:2;4301:9;4292:7;4288:23;4284:32;4281:119;;;4319:79;;:::i;:::-;4281:119;4439:1;4464:53;4509:7;4500:6;4489:9;4485:22;4464:53;:::i;:::-;4454:63;;4410:117;4566:2;4592:53;4637:7;4628:6;4617:9;4613:22;4592:53;:::i;:::-;4582:63;;4537:118;4694:2;4720:53;4765:7;4756:6;4745:9;4741:22;4720:53;:::i;:::-;4710:63;;4665:118;4171:619;;;;;:::o;4796:329::-;4855:6;4904:2;4892:9;4883:7;4879:23;4875:32;4872:119;;;4910:79;;:::i;:::-;4872:119;5030:1;5055:53;5100:7;5091:6;5080:9;5076:22;5055:53;:::i;:::-;5045:63;;5001:117;4796:329;;;;:::o;5131:86::-;5166:7;5206:4;5199:5;5195:16;5184:27;;5131:86;;;:::o;5223:112::-;5306:22;5322:5;5306:22;:::i;:::-;5301:3;5294:35;5223:112;;:::o;5341:214::-;5430:4;5468:2;5457:9;5453:18;5445:26;;5481:67;5545:1;5534:9;5530:17;5521:6;5481:67;:::i;:::-;5341:214;;;;:::o;5561:329::-;5620:6;5669:2;5657:9;5648:7;5644:23;5640:32;5637:119;;;5675:79;;:::i;:::-;5637:119;5795:1;5820:53;5865:7;5856:6;5845:9;5841:22;5820:53;:::i;:::-;5810:63;;5766:117;5561:329;;;;:::o;5896:118::-;5983:24;6001:5;5983:24;:::i;:::-;5978:3;5971:37;5896:118;;:::o;6020:222::-;6113:4;6151:2;6140:9;6136:18;6128:26;;6164:71;6232:1;6221:9;6217:17;6208:6;6164:71;:::i;:::-;6020:222;;;;:::o;6248:474::-;6316:6;6324;6373:2;6361:9;6352:7;6348:23;6344:32;6341:119;;;6379:79;;:::i;:::-;6341:119;6499:1;6524:53;6569:7;6560:6;6549:9;6545:22;6524:53;:::i;:::-;6514:63;;6470:117;6626:2;6652:53;6697:7;6688:6;6677:9;6673:22;6652:53;:::i;:::-;6642:63;;6597:118;6248:474;;;;;:::o;6728:60::-;6756:3;6777:5;6770:12;;6728:60;;;:::o;6794:142::-;6844:9;6877:53;6895:34;6904:24;6922:5;6904:24;:::i;:::-;6895:34;:::i;:::-;6877:53;:::i;:::-;6864:66;;6794:142;;;:::o;6942:126::-;6992:9;7025:37;7056:5;7025:37;:::i;:::-;7012:50;;6942:126;;;:::o;7074:140::-;7138:9;7171:37;7202:5;7171:37;:::i;:::-;7158:50;;7074:140;;;:::o;7220:159::-;7321:51;7366:5;7321:51;:::i;:::-;7316:3;7309:64;7220:159;;:::o;7385:250::-;7492:4;7530:2;7519:9;7515:18;7507:26;;7543:85;7625:1;7614:9;7610:17;7601:6;7543:85;:::i;:::-;7385:250;;;;:::o;7641:170::-;7781:22;7777:1;7769:6;7765:14;7758:46;7641:170;:::o;7817:366::-;7959:3;7980:67;8044:2;8039:3;7980:67;:::i;:::-;7973:74;;8056:93;8145:3;8056:93;:::i;:::-;8174:2;8169:3;8165:12;8158:19;;7817:366;;;:::o;8189:419::-;8355:4;8393:2;8382:9;8378:18;8370:26;;8442:9;8436:4;8432:20;8428:1;8417:9;8413:17;8406:47;8470:131;8596:4;8470:131;:::i;:::-;8462:139;;8189:419;;;:::o;8614:180::-;8662:77;8659:1;8652:88;8759:4;8756:1;8749:15;8783:4;8780:1;8773:15;8800:194;8840:4;8860:20;8878:1;8860:20;:::i;:::-;8855:25;;8894:20;8912:1;8894:20;:::i;:::-;8889:25;;8938:1;8935;8931:9;8923:17;;8962:1;8956:4;8953:11;8950:37;;;8967:18;;:::i;:::-;8950:37;8800:194;;;;:::o;9000:332::-;9121:4;9159:2;9148:9;9144:18;9136:26;;9172:71;9240:1;9229:9;9225:17;9216:6;9172:71;:::i;:::-;9253:72;9321:2;9310:9;9306:18;9297:6;9253:72;:::i;:::-;9000:332;;;;;:::o;9338:116::-;9408:21;9423:5;9408:21;:::i;:::-;9401:5;9398:32;9388:60;;9444:1;9441;9434:12;9388:60;9338:116;:::o;9460:137::-;9514:5;9545:6;9539:13;9530:22;;9561:30;9585:5;9561:30;:::i;:::-;9460:137;;;;:::o;9603:345::-;9670:6;9719:2;9707:9;9698:7;9694:23;9690:32;9687:119;;;9725:79;;:::i;:::-;9687:119;9845:1;9870:61;9923:7;9914:6;9903:9;9899:22;9870:61;:::i;:::-;9860:71;;9816:125;9603:345;;;;:::o;9954:180::-;10002:77;9999:1;9992:88;10099:4;10096:1;10089:15;10123:4;10120:1;10113:15;10140:320;10184:6;10221:1;10215:4;10211:12;10201:22;;10268:1;10262:4;10258:12;10289:18;10279:81;;10345:4;10337:6;10333:17;10323:27;;10279:81;10407:2;10399:6;10396:14;10376:18;10373:38;10370:84;;10426:18;;:::i;:::-;10370:84;10191:269;10140:320;;;:::o;10466:179::-;10606:31;10602:1;10594:6;10590:14;10583:55;10466:179;:::o;10651:366::-;10793:3;10814:67;10878:2;10873:3;10814:67;:::i;:::-;10807:74;;10890:93;10979:3;10890:93;:::i;:::-;11008:2;11003:3;10999:12;10992:19;;10651:366;;;:::o;11023:419::-;11189:4;11227:2;11216:9;11212:18;11204:26;;11276:9;11270:4;11266:20;11262:1;11251:9;11247:17;11240:47;11304:131;11430:4;11304:131;:::i;:::-;11296:139;;11023:419;;;:::o;11448:410::-;11488:7;11511:20;11529:1;11511:20;:::i;:::-;11506:25;;11545:20;11563:1;11545:20;:::i;:::-;11540:25;;11600:1;11597;11593:9;11622:30;11640:11;11622:30;:::i;:::-;11611:41;;11801:1;11792:7;11788:15;11785:1;11782:22;11762:1;11755:9;11735:83;11712:139;;11831:18;;:::i;:::-;11712:139;11496:362;11448:410;;;;:::o;11864:180::-;11912:77;11909:1;11902:88;12009:4;12006:1;11999:15;12033:4;12030:1;12023:15;12050:185;12090:1;12107:20;12125:1;12107:20;:::i;:::-;12102:25;;12141:20;12159:1;12141:20;:::i;:::-;12136:25;;12180:1;12170:35;;12185:18;;:::i;:::-;12170:35;12227:1;12224;12220:9;12215:14;;12050:185;;;;:::o;12241:169::-;12381:21;12377:1;12369:6;12365:14;12358:45;12241:169;:::o;12416:366::-;12558:3;12579:67;12643:2;12638:3;12579:67;:::i;:::-;12572:74;;12655:93;12744:3;12655:93;:::i;:::-;12773:2;12768:3;12764:12;12757:19;;12416:366;;;:::o;12788:419::-;12954:4;12992:2;12981:9;12977:18;12969:26;;13041:9;13035:4;13031:20;13027:1;13016:9;13012:17;13005:47;13069:131;13195:4;13069:131;:::i;:::-;13061:139;;12788:419;;;:::o;13213:442::-;13362:4;13400:2;13389:9;13385:18;13377:26;;13413:71;13481:1;13470:9;13466:17;13457:6;13413:71;:::i;:::-;13494:72;13562:2;13551:9;13547:18;13538:6;13494:72;:::i;:::-;13576;13644:2;13633:9;13629:18;13620:6;13576:72;:::i;:::-;13213:442;;;;;;:::o;13661:191::-;13701:3;13720:20;13738:1;13720:20;:::i;:::-;13715:25;;13754:20;13772:1;13754:20;:::i;:::-;13749:25;;13797:1;13794;13790:9;13783:16;;13818:3;13815:1;13812:10;13809:36;;;13825:18;;:::i;:::-;13809:36;13661:191;;;;:::o;13858:442::-;14007:4;14045:2;14034:9;14030:18;14022:26;;14058:71;14126:1;14115:9;14111:17;14102:6;14058:71;:::i;:::-;14139:72;14207:2;14196:9;14192:18;14183:6;14139:72;:::i;:::-;14221;14289:2;14278:9;14274:18;14265:6;14221:72;:::i;:::-;13858:442;;;;;;:::o;14306:181::-;14446:33;14442:1;14434:6;14430:14;14423:57;14306:181;:::o;14493:366::-;14635:3;14656:67;14720:2;14715:3;14656:67;:::i;:::-;14649:74;;14732:93;14821:3;14732:93;:::i;:::-;14850:2;14845:3;14841:12;14834:19;;14493:366;;;:::o;14865:419::-;15031:4;15069:2;15058:9;15054:18;15046:26;;15118:9;15112:4;15108:20;15104:1;15093:9;15089:17;15082:47;15146:131;15272:4;15146:131;:::i;:::-;15138:139;;14865:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1515000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"REARLY_REWARD_RATE()": "415",
								"REWARD_RATE()": "436",
								"SECONDS_IN_YEAR()": "458",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2852",
								"balances(address)": "2847",
								"clainRewards(uint256)": "infinite",
								"decimals()": "405",
								"lockTimestamp()": "2491",
								"name()": "infinite",
								"owner()": "2626",
								"renounceOwnership()": "infinite",
								"stake(uint256,address)": "infinite",
								"stakedfromTS(address)": "2891",
								"symbol()": "infinite",
								"totalSupply()": "2544",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"withdraw(uint256,address)": "infinite",
								"xoraToken()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 288,
									"end": 2562,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 288,
									"end": 2562,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 288,
									"end": 2562,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 885,
									"end": 1050,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 885,
									"end": 1050,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 885,
									"end": 1050,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 885,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 885,
									"end": 1050,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 885,
									"end": 1050,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 885,
									"end": 1050,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 885,
									"end": 1050,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 885,
									"end": 1050,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 885,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 885,
									"end": 1050,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 907,
									"end": 917,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "7374616B656420586F7261000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "7374584F52410000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 960,
									"end": 1003,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 974,
									"end": 978,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 981,
									"end": 1002,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "24A0A79C2149432B000000"
								},
								{
									"begin": 960,
									"end": 965,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 960,
									"end": 965,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 960,
									"end": 965,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 960,
									"end": 1003,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 960,
									"end": 1003,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 960,
									"end": 1003,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 960,
									"end": 1003,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 960,
									"end": 1003,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1028,
									"end": 1043,
									"modifierDepth": 2,
									"name": "TIMESTAMP",
									"source": 7
								},
								{
									"begin": 1013,
									"end": 1025,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 1013,
									"end": 1043,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1013,
									"end": 1043,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1013,
									"end": 1043,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1013,
									"end": 1043,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 288,
									"end": 2562,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 288,
									"end": 2562,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7466,
									"end": 7674,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 7466,
									"end": 7674,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7555,
									"end": 7556,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7536,
									"end": 7557,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7536,
									"end": 7557,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7536,
									"end": 7543,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7536,
									"end": 7557,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7536,
									"end": 7557,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7536,
									"end": 7557,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7532,
									"end": 7623,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 7532,
									"end": 7623,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7609,
									"end": 7610,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 7580,
									"end": 7612,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7532,
									"end": 7623,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 7532,
									"end": 7623,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7632,
									"end": 7667,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 7648,
									"end": 7649,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7652,
									"end": 7659,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7661,
									"end": 7666,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7632,
									"end": 7639,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 7632,
									"end": 7639,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7632,
									"end": 7639,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7632,
									"end": 7667,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7632,
									"end": 7667,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7632,
									"end": 7667,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7632,
									"end": 7667,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 7632,
									"end": 7667,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7466,
									"end": 7674,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7466,
									"end": 7674,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7466,
									"end": 7674,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6016,
									"end": 7123,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 6016,
									"end": 7123,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6121,
									"end": 6122,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6105,
									"end": 6123,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6105,
									"end": 6123,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6105,
									"end": 6109,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6105,
									"end": 6123,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6105,
									"end": 6123,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6105,
									"end": 6123,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6101,
									"end": 6641,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 6101,
									"end": 6641,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6257,
									"end": 6262,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6241,
									"end": 6253,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6241,
									"end": 6253,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 6241,
									"end": 6262,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6101,
									"end": 6641,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 6101,
									"end": 6641,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6101,
									"end": 6641,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 6101,
									"end": 6641,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6293,
									"end": 6312,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6324,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6325,
									"end": 6329,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6293,
									"end": 6330,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6293,
									"end": 6330,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6362,
									"end": 6367,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6348,
									"end": 6359,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6348,
									"end": 6367,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6344,
									"end": 6459,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6344,
									"end": 6459,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 6344,
									"end": 6459,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6419,
									"end": 6423,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6425,
									"end": 6436,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6438,
									"end": 6443,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6394,
									"end": 6444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6344,
									"end": 6459,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 6344,
									"end": 6459,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6611,
									"end": 6616,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6597,
									"end": 6608,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6597,
									"end": 6616,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6588,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6593,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6616,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6616,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6616,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6616,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6279,
									"end": 6641,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6101,
									"end": 6641,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 6101,
									"end": 6641,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6669,
									"end": 6670,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6655,
									"end": 6671,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6655,
									"end": 6671,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6655,
									"end": 6657,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6655,
									"end": 6671,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6655,
									"end": 6671,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6655,
									"end": 6671,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6651,
									"end": 7076,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 6651,
									"end": 7076,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6839,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6818,
									"end": 6830,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6818,
									"end": 6830,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6651,
									"end": 7076,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 6651,
									"end": 7076,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6651,
									"end": 7076,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 6651,
									"end": 7076,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7046,
									"end": 7051,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7038,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7039,
									"end": 7041,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6651,
									"end": 7076,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 6651,
									"end": 7076,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7106,
									"end": 7108,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7100,
									"end": 7104,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7110,
									"end": 7115,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 7091,
									"end": 7116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 6016,
									"end": 7123,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6016,
									"end": 7123,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6016,
									"end": 7123,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6016,
									"end": 7123,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5868,
									"end": 5945,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5865,
									"end": 5866,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5858,
									"end": 5946,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5965,
									"end": 5969,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 5962,
									"end": 5963,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 5955,
									"end": 5970,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5989,
									"end": 5993,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 5986,
									"end": 5987,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5979,
									"end": 5994,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6046,
									"end": 6049,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 6083,
									"end": 6084,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 6065,
									"end": 6085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "tag",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6060,
									"end": 6085,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6060,
									"end": 6085,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 6117,
									"end": 6118,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 6099,
									"end": 6119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "tag",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6094,
									"end": 6119,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6094,
									"end": 6119,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6142,
									"end": 6143,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6139,
									"end": 6140,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6135,
									"end": 6144,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6128,
									"end": 6144,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6128,
									"end": 6144,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6163,
									"end": 6166,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6160,
									"end": 6161,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6157,
									"end": 6167,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 6170,
									"end": 6188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "tag",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "tag",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6006,
									"end": 6197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 6308,
									"end": 6313,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 6290,
									"end": 6314,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "tag",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6285,
									"end": 6288,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6278,
									"end": 6315,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6203,
									"end": 6321,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6476,
									"end": 6480,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6514,
									"end": 6516,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6503,
									"end": 6512,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6499,
									"end": 6517,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6491,
									"end": 6517,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6491,
									"end": 6517,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "142"
								},
								{
									"begin": 6595,
									"end": 6596,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6584,
									"end": 6593,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6580,
									"end": 6597,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6571,
									"end": 6577,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 6527,
									"end": 6598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "tag",
									"source": 8,
									"value": "142"
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 6676,
									"end": 6678,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6665,
									"end": 6674,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6661,
									"end": 6679,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6652,
									"end": 6658,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 6608,
									"end": 6680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "tag",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 6758,
									"end": 6760,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 6747,
									"end": 6756,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6743,
									"end": 6761,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6734,
									"end": 6740,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 6690,
									"end": 6762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "tag",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6327,
									"end": 6769,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6868,
									"end": 6872,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6906,
									"end": 6908,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6895,
									"end": 6904,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6891,
									"end": 6909,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6883,
									"end": 6909,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6883,
									"end": 6909,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 6987,
									"end": 6988,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6976,
									"end": 6985,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6972,
									"end": 6989,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6963,
									"end": 6969,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 6919,
									"end": 6990,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "tag",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6775,
									"end": 6997,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 288,
									"end": 2562,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 288,
									"end": 2562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 288,
									"end": 2562,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 288,
									"end": 2562,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 288,
									"end": 2562,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 288,
									"end": 2562,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 2562,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 288,
									"end": 2562,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 2562,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b3a3e26d4f5885b61719d20689a1f0e98a2228f68c4694fd1809740038907b8064736f6c634300081a0033",
									".code": [
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "B544BF83"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "F7C899A1"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "7ACB7757"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "8879F730"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "27E235E3"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "3BC46A3F"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "5997BB37"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "5DCC9391"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "F714CE"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "CD43D5D"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 288,
											"end": 2562,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1425,
											"end": 1770,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1425,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1425,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1425,
											"end": 1770,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1425,
											"end": 1770,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1425,
											"end": 1770,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1425,
											"end": 1770,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1425,
											"end": 1770,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1425,
											"end": 1770,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1425,
											"end": 1770,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1425,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1425,
											"end": 1770,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1425,
											"end": 1770,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1425,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1425,
											"end": 1770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1425,
											"end": 1770,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1425,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1425,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1425,
											"end": 1770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1425,
											"end": 1770,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1425,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1425,
											"end": 1770,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 625,
											"end": 672,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 625,
											"end": 672,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 625,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 625,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 625,
											"end": 672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 625,
											"end": 672,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 625,
											"end": 672,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 625,
											"end": 672,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 625,
											"end": 672,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 625,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 625,
											"end": 672,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 625,
											"end": 672,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 625,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 625,
											"end": 672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 625,
											"end": 672,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 625,
											"end": 672,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 625,
											"end": 672,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 625,
											"end": 672,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 625,
											"end": 672,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 625,
											"end": 672,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 625,
											"end": 672,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 625,
											"end": 672,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 625,
											"end": 672,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 376,
											"end": 419,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 376,
											"end": 419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 376,
											"end": 419,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 376,
											"end": 419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 376,
											"end": 419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 376,
											"end": 419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 376,
											"end": 419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 376,
											"end": 419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 376,
											"end": 419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 376,
											"end": 419,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 376,
											"end": 419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 376,
											"end": 419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 376,
											"end": 419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 376,
											"end": 419,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1777,
											"end": 2559,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1777,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1777,
											"end": 2559,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1777,
											"end": 2559,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 2559,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 2559,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 2559,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 2559,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 2559,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1777,
											"end": 2559,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 2559,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1777,
											"end": 2559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 2559,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1777,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 1777,
											"end": 2559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 2559,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1777,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 2559,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 579,
											"end": 619,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 579,
											"end": 619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 579,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 579,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 579,
											"end": 619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 579,
											"end": 619,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 579,
											"end": 619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 579,
											"end": 619,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 619,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 579,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 579,
											"end": 619,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 579,
											"end": 619,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 579,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 579,
											"end": 619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 579,
											"end": 619,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 579,
											"end": 619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 579,
											"end": 619,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 619,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 579,
											"end": 619,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 579,
											"end": 619,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 579,
											"end": 619,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 579,
											"end": 619,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 579,
											"end": 619,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 479,
											"end": 539,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 479,
											"end": 539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 479,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 479,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 479,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 479,
											"end": 539,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 479,
											"end": 539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 479,
											"end": 539,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 479,
											"end": 539,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 479,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 479,
											"end": 539,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 479,
											"end": 539,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 479,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 479,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 479,
											"end": 539,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 479,
											"end": 539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 479,
											"end": 539,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 479,
											"end": 539,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 479,
											"end": 539,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 479,
											"end": 539,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 479,
											"end": 539,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 479,
											"end": 539,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 479,
											"end": 539,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1056,
											"end": 1419,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1056,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1056,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 1056,
											"end": 1419,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1056,
											"end": 1419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1056,
											"end": 1419,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1056,
											"end": 1419,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1056,
											"end": 1419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1056,
											"end": 1419,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1056,
											"end": 1419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1056,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1056,
											"end": 1419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1056,
											"end": 1419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1056,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1056,
											"end": 1419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1056,
											"end": 1419,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1056,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1056,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 1056,
											"end": 1419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1056,
											"end": 1419,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 1056,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1056,
											"end": 1419,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 425,
											"end": 472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 425,
											"end": 472,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 425,
											"end": 472,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 425,
											"end": 472,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 425,
											"end": 472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 425,
											"end": 472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 425,
											"end": 472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 425,
											"end": 472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 425,
											"end": 472,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 425,
											"end": 472,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 425,
											"end": 472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 425,
											"end": 472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 425,
											"end": 472,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 545,
											"end": 573,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 545,
											"end": 573,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 545,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 545,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 545,
											"end": 573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 573,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 545,
											"end": 573,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 545,
											"end": 573,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 573,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 545,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 545,
											"end": 573,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 545,
											"end": 573,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 545,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 545,
											"end": 573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 573,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 545,
											"end": 573,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 545,
											"end": 573,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 573,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 545,
											"end": 573,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 545,
											"end": 573,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 545,
											"end": 573,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 545,
											"end": 573,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 545,
											"end": 573,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 346,
											"end": 369,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 346,
											"end": 369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 346,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 346,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 346,
											"end": 369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 346,
											"end": 369,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 346,
											"end": 369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 346,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 346,
											"end": 369,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 346,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 346,
											"end": 369,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 346,
											"end": 369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 346,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 346,
											"end": 369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 346,
											"end": 369,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 346,
											"end": 369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 346,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 346,
											"end": 369,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 346,
											"end": 369,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 346,
											"end": 369,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 346,
											"end": 369,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 346,
											"end": 369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 346,
											"end": 369,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1425,
											"end": 1770,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1425,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1530,
											"end": 1536,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1514,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1506,
											"end": 1526,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1515,
											"end": 1525,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1526,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1506,
											"end": 1526,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1526,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1506,
											"end": 1526,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1526,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1526,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1526,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1526,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1526,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1526,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1526,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1526,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1526,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1526,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1536,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1536,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1498,
											"end": 1561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1584,
											"end": 1590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 1571,
											"end": 1591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1591,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1571,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1620,
											"end": 1630,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1610,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1601,
											"end": 1610,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1631,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1601,
											"end": 1631,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1631,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1631,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1631,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1631,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1601,
											"end": 1631,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1631,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1631,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1631,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1631,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1631,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1601,
											"end": 1631,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1631,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1631,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1631,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1631,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1631,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1670,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1649,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1641,
											"end": 1661,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1660,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1661,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1641,
											"end": 1661,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1661,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1641,
											"end": 1661,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1661,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1661,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1661,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1641,
											"end": 1661,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1661,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1661,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1661,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1661,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1641,
											"end": 1661,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1661,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1641,
											"end": 1661,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1661,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1641,
											"end": 1670,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1670,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1670,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1670,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 1641,
											"end": 1670,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1670,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1670,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 1641,
											"end": 1670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1670,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 1641,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1670,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1670,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1670,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1670,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1670,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1670,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1670,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1689,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1680,
											"end": 1689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1689,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1680,
											"end": 1689,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1689,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1689,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1680,
											"end": 1689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1698,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1680,
											"end": 1698,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1698,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 1700,
											"end": 1710,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1680,
											"end": 1719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 1680,
											"end": 1719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1719,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1754,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "PUSH",
											"source": 7,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 1756,
											"end": 1762,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1734,
											"end": 1763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1734,
											"end": 1763,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 1425,
											"end": 1770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1425,
											"end": 1770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1425,
											"end": 1770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 625,
											"end": 672,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 625,
											"end": 672,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 670,
											"end": 672,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 625,
											"end": 672,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 625,
											"end": 672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 376,
											"end": 419,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 376,
											"end": 419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 376,
											"end": 419,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 376,
											"end": 419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 376,
											"end": 419,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 419,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 376,
											"end": 419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1777,
											"end": 2559,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 1777,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1884,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1853,
											"end": 1873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1872,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1853,
											"end": 1873,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1853,
											"end": 1873,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1873,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1873,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1853,
											"end": 1873,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1873,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1873,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1873,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1853,
											"end": 1873,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1853,
											"end": 1873,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1873,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1884,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1884,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 1845,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1845,
											"end": 1918,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1845,
											"end": 1918,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1918,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1845,
											"end": 1918,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1845,
											"end": 1918,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1845,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1845,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1845,
											"end": 1918,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1918,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1918,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1918,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1918,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1918,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 1845,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1928,
											"end": 1942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1973,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1994,
											"end": 2018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2017,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1994,
											"end": 2018,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1994,
											"end": 2018,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2018,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2018,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1994,
											"end": 2018,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2018,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2018,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2018,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1994,
											"end": 2018,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1994,
											"end": 2018,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2018,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1976,
											"end": 1991,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 1976,
											"end": 2018,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1976,
											"end": 2018,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1976,
											"end": 2018,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1976,
											"end": 2018,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 1976,
											"end": 2018,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1976,
											"end": 2018,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1976,
											"end": 2018,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1952,
											"end": 2018,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1952,
											"end": 2018,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 2081,
											"end": 2093,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2063,
											"end": 2078,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2063,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2063,
											"end": 2093,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2063,
											"end": 2093,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2063,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 2063,
											"end": 2093,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2063,
											"end": 2093,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2063,
											"end": 2093,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2093,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2093,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "76A700"
										},
										{
											"begin": 2106,
											"end": 2130,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2106,
											"end": 2146,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2103,
											"end": 2364,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2103,
											"end": 2364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 2103,
											"end": 2364,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 521,
											"end": 539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1E13380"
										},
										{
											"begin": 2219,
											"end": 2222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2219,
											"end": 2240,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2219,
											"end": 2240,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2219,
											"end": 2240,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2219,
											"end": 2240,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2219,
											"end": 2240,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2219,
											"end": 2240,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2219,
											"end": 2240,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2203,
											"end": 2216,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 670,
											"end": 672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 2172,
											"end": 2179,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 2172,
											"end": 2200,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2172,
											"end": 2200,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2200,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 2172,
											"end": 2200,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2216,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 2172,
											"end": 2216,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2216,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2216,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2172,
											"end": 2216,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2216,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 2172,
											"end": 2216,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2171,
											"end": 2241,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2171,
											"end": 2241,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2171,
											"end": 2241,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2171,
											"end": 2241,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2171,
											"end": 2241,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2171,
											"end": 2241,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2171,
											"end": 2241,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2162,
											"end": 2241,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2162,
											"end": 2241,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2103,
											"end": 2364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2103,
											"end": 2364,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2103,
											"end": 2364,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 2103,
											"end": 2364,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1E13380"
										},
										{
											"begin": 2331,
											"end": 2334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2331,
											"end": 2352,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2331,
											"end": 2352,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2331,
											"end": 2352,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2331,
											"end": 2352,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2331,
											"end": 2352,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2331,
											"end": 2352,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2331,
											"end": 2352,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2315,
											"end": 2328,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 617,
											"end": 619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 2291,
											"end": 2298,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2291,
											"end": 2312,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2312,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2291,
											"end": 2312,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2291,
											"end": 2312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2328,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2291,
											"end": 2328,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2328,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2328,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2291,
											"end": 2328,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2328,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2291,
											"end": 2328,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2290,
											"end": 2353,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2290,
											"end": 2353,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2290,
											"end": 2353,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2290,
											"end": 2353,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2290,
											"end": 2353,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2290,
											"end": 2353,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2290,
											"end": 2353,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2353,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2353,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2103,
											"end": 2364,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2103,
											"end": 2364,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2391,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2381,
											"end": 2387,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2381,
											"end": 2391,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2373,
											"end": 2415,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2373,
											"end": 2415,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2373,
											"end": 2415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2373,
											"end": 2415,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2373,
											"end": 2415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2373,
											"end": 2415,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2373,
											"end": 2415,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2373,
											"end": 2415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2373,
											"end": 2415,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2373,
											"end": 2415,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2373,
											"end": 2415,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2373,
											"end": 2415,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2373,
											"end": 2415,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2373,
											"end": 2415,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2373,
											"end": 2415,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2373,
											"end": 2415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2373,
											"end": 2415,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2373,
											"end": 2415,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2373,
											"end": 2415,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2373,
											"end": 2415,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2373,
											"end": 2415,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2373,
											"end": 2415,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2373,
											"end": 2415,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2373,
											"end": 2415,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2425,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 2431,
											"end": 2441,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2443,
											"end": 2449,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2425,
											"end": 2430,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 2425,
											"end": 2450,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2425,
											"end": 2450,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 2425,
											"end": 2450,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2502,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2460,
											"end": 2484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2483,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2460,
											"end": 2484,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2460,
											"end": 2484,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2484,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2484,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2484,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2484,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2484,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2484,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2484,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2502,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2502,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2502,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2502,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2542,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2517,
											"end": 2551,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE"
										},
										{
											"begin": 2544,
											"end": 2550,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2517,
											"end": 2551,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2551,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 2517,
											"end": 2551,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2551,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2551,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 2517,
											"end": 2551,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2551,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 2517,
											"end": 2551,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2517,
											"end": 2551,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2551,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2551,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2551,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2551,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2551,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 1835,
											"end": 2559,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1835,
											"end": 2559,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1835,
											"end": 2559,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1777,
											"end": 2559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 579,
											"end": 619,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 579,
											"end": 619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 617,
											"end": 619,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 579,
											"end": 619,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 579,
											"end": 619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 479,
											"end": 539,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 479,
											"end": 539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 539,
											"name": "PUSH",
											"source": 7,
											"value": "1E13380"
										},
										{
											"begin": 479,
											"end": 539,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 479,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1056,
											"end": 1419,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 1056,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1170,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1141,
											"end": 1150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1141,
											"end": 1171,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1171,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1171,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1171,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1141,
											"end": 1171,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1171,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1171,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1171,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1171,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1141,
											"end": 1171,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1171,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1171,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1171,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1171,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1171,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1181,
											"end": 1190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1190,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1190,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1190,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1181,
											"end": 1190,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1190,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1190,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1181,
											"end": 1190,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1181,
											"end": 1203,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 1204,
											"end": 1214,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1228,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1237,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 1181,
											"end": 1238,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1238,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 1181,
											"end": 1238,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1238,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1278,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1248,
											"end": 1268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1257,
											"end": 1267,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1268,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1268,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1268,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1268,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1248,
											"end": 1268,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1268,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1268,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1268,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1248,
											"end": 1268,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1268,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1278,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1278,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1278,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1278,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 1248,
											"end": 1278,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1278,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1278,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 1248,
											"end": 1278,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1278,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 1248,
											"end": 1278,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1278,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1278,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1278,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1278,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1278,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1278,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1278,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1315,
											"end": 1330,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 1288,
											"end": 1300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1288,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1311,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1288,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1288,
											"end": 1312,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1288,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1288,
											"end": 1312,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1288,
											"end": 1312,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1288,
											"end": 1312,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1288,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1288,
											"end": 1312,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1288,
											"end": 1312,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1288,
											"end": 1312,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1288,
											"end": 1312,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1288,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1288,
											"end": 1312,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1288,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1288,
											"end": 1312,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1288,
											"end": 1330,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1288,
											"end": 1330,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1288,
											"end": 1330,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1288,
											"end": 1330,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1356,
											"end": 1371,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 1340,
											"end": 1353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1340,
											"end": 1371,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1340,
											"end": 1371,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1340,
											"end": 1371,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1340,
											"end": 1371,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1393,
											"end": 1403,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1386,
											"end": 1412,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 1405,
											"end": 1411,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1412,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1412,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 1386,
											"end": 1412,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1412,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1386,
											"end": 1412,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1412,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 1386,
											"end": 1412,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1412,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1412,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1412,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1412,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1412,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1056,
											"end": 1419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1056,
											"end": 1419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 425,
											"end": 472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 425,
											"end": 472,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 425,
											"end": 472,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 472,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 425,
											"end": 472,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 472,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 472,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 425,
											"end": 472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 573,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 545,
											"end": 573,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 545,
											"end": 573,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 545,
											"end": 573,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 545,
											"end": 573,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 545,
											"end": 573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 346,
											"end": 369,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 346,
											"end": 369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 346,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 346,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 346,
											"end": 369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 346,
											"end": 369,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 346,
											"end": 369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 346,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 346,
											"end": 369,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 346,
											"end": 369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 346,
											"end": 369,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 346,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 346,
											"end": 369,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 346,
											"end": 369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 346,
											"end": 369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8734,
											"end": 8862,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 8734,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8818,
											"end": 8855,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 8827,
											"end": 8832,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8834,
											"end": 8841,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8843,
											"end": 8848,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8850,
											"end": 8854,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8818,
											"end": 8826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 8818,
											"end": 8855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8818,
											"end": 8855,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 8818,
											"end": 8855,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8734,
											"end": 8862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8734,
											"end": 8862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8734,
											"end": 8862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8734,
											"end": 8862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10423,
											"end": 10900,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 10423,
											"end": 10900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10522,
											"end": 10546,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10549,
											"end": 10574,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 10559,
											"end": 10564,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10566,
											"end": 10573,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10549,
											"end": 10558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 10549,
											"end": 10574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10549,
											"end": 10574,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 10549,
											"end": 10574,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10522,
											"end": 10574,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10522,
											"end": 10574,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10608,
											"end": 10625,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10588,
											"end": 10604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10584,
											"end": 10894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 10584,
											"end": 10894,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10664,
											"end": 10669,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10645,
											"end": 10661,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10645,
											"end": 10669,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10641,
											"end": 10771,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10641,
											"end": 10771,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 10641,
											"end": 10771,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10723,
											"end": 10730,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10732,
											"end": 10748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10750,
											"end": 10755,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 10696,
											"end": 10756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10641,
											"end": 10771,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 10641,
											"end": 10771,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10812,
											"end": 10869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 10821,
											"end": 10826,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10835,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10856,
											"end": 10861,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10837,
											"end": 10853,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10837,
											"end": 10861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10863,
											"end": 10868,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10812,
											"end": 10820,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 10812,
											"end": 10869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10812,
											"end": 10869,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 10812,
											"end": 10869,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10584,
											"end": 10894,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 10584,
											"end": 10894,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10512,
											"end": 10900,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10423,
											"end": 10900,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10423,
											"end": 10900,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10423,
											"end": 10900,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10423,
											"end": 10900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5701,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 5393,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5502,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5484,
											"end": 5502,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5484,
											"end": 5488,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5484,
											"end": 5502,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5484,
											"end": 5502,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5484,
											"end": 5502,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5480,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 5480,
											"end": 5566,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5553,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 5525,
											"end": 5555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5480,
											"end": 5566,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 5480,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5593,
											"end": 5594,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5579,
											"end": 5595,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5579,
											"end": 5595,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5579,
											"end": 5581,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5579,
											"end": 5595,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5579,
											"end": 5595,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5579,
											"end": 5595,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5575,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 5575,
											"end": 5661,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5647,
											"end": 5648,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 5618,
											"end": 5650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5575,
											"end": 5661,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 5575,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5670,
											"end": 5694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 5678,
											"end": 5682,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5684,
											"end": 5686,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5688,
											"end": 5693,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5670,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 5670,
											"end": 5694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5670,
											"end": 5694,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 5670,
											"end": 5694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7466,
											"end": 7674,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 7466,
											"end": 7674,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7555,
											"end": 7556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7536,
											"end": 7557,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7536,
											"end": 7557,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7536,
											"end": 7543,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7536,
											"end": 7557,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7536,
											"end": 7557,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7536,
											"end": 7557,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7532,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 7532,
											"end": 7623,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7609,
											"end": 7610,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 7580,
											"end": 7612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7532,
											"end": 7623,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 7532,
											"end": 7623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7632,
											"end": 7667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 7648,
											"end": 7649,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7652,
											"end": 7659,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7661,
											"end": 7666,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7632,
											"end": 7639,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 7632,
											"end": 7667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7632,
											"end": 7667,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 7632,
											"end": 7667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 7674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 7674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 7674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 10141,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 9709,
											"end": 10141,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9838,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9821,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9821,
											"end": 9840,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9821,
											"end": 9826,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9821,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9821,
											"end": 9840,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9821,
											"end": 9840,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9817,
											"end": 9906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 9817,
											"end": 9906,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9892,
											"end": 9893,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 9863,
											"end": 9895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9817,
											"end": 9906,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 9817,
											"end": 9906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9938,
											"end": 9939,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9919,
											"end": 9940,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9919,
											"end": 9940,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9919,
											"end": 9926,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9919,
											"end": 9940,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9919,
											"end": 9940,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9919,
											"end": 9940,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9915,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 9915,
											"end": 10005,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9991,
											"end": 9992,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 9963,
											"end": 9994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9915,
											"end": 10005,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 9915,
											"end": 10005,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10044,
											"end": 10049,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10025,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10026,
											"end": 10031,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10033,
											"end": 10040,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10049,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10049,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10063,
											"end": 10072,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10059,
											"end": 10135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10059,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 10059,
											"end": 10135,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10109,
											"end": 10116,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10102,
											"end": 10107,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10118,
											"end": 10123,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 10093,
											"end": 10124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10059,
											"end": 10135,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 10059,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9709,
											"end": 10141,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9709,
											"end": 10141,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9709,
											"end": 10141,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9709,
											"end": 10141,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9709,
											"end": 10141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6016,
											"end": 7123,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 6016,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6121,
											"end": 6122,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6123,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6105,
											"end": 6123,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6105,
											"end": 6109,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6105,
											"end": 6123,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6105,
											"end": 6123,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6105,
											"end": 6123,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6101,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 6101,
											"end": 6641,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6257,
											"end": 6262,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6253,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6241,
											"end": 6253,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 6241,
											"end": 6262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6101,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 6101,
											"end": 6641,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6101,
											"end": 6641,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 6101,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6293,
											"end": 6312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6324,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6325,
											"end": 6329,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6293,
											"end": 6330,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6293,
											"end": 6330,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6362,
											"end": 6367,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6348,
											"end": 6359,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6348,
											"end": 6367,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6344,
											"end": 6459,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6344,
											"end": 6459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 6344,
											"end": 6459,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6419,
											"end": 6423,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6425,
											"end": 6436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6438,
											"end": 6443,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 6394,
											"end": 6444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6344,
											"end": 6459,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 6344,
											"end": 6459,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6611,
											"end": 6616,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6597,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6597,
											"end": 6616,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6588,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6593,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6616,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6616,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6616,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6279,
											"end": 6641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6101,
											"end": 6641,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 6101,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6669,
											"end": 6670,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6655,
											"end": 6671,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6655,
											"end": 6671,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6655,
											"end": 6657,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6655,
											"end": 6671,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6655,
											"end": 6671,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6655,
											"end": 6671,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6651,
											"end": 7076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 6651,
											"end": 7076,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6818,
											"end": 6830,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6818,
											"end": 6830,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6651,
											"end": 7076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 6651,
											"end": 7076,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6651,
											"end": 7076,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 6651,
											"end": 7076,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7046,
											"end": 7051,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7038,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7041,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6651,
											"end": 7076,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 6651,
											"end": 7076,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7106,
											"end": 7108,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7100,
											"end": 7104,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7110,
											"end": 7115,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 7091,
											"end": 7116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6016,
											"end": 7123,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6016,
											"end": 7123,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6016,
											"end": 7123,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6016,
											"end": 7123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 690,
											"end": 816,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 690,
											"end": 816,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 727,
											"end": 734,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 767,
											"end": 809,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 760,
											"end": 765,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 756,
											"end": 810,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 745,
											"end": 810,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 745,
											"end": 810,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 690,
											"end": 816,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 690,
											"end": 816,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 690,
											"end": 816,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 690,
											"end": 816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 822,
											"end": 918,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 822,
											"end": 918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 859,
											"end": 866,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 906,
											"end": 911,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 888,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 888,
											"end": 912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 888,
											"end": 912,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 888,
											"end": 912,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 877,
											"end": 912,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 877,
											"end": 912,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 822,
											"end": 918,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 822,
											"end": 918,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 822,
											"end": 918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 822,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1776,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 1677,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1729,
											"end": 1735,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1768,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1747,
											"end": 1769,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1747,
											"end": 1769,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1776,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1776,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1782,
											"end": 1951,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 1782,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 1877,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 1906,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1895,
											"end": 1898,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1907,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1944,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1935,
											"end": 1938,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 1945,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 1945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 1945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1782,
											"end": 1951,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1782,
											"end": 1951,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1782,
											"end": 1951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1782,
											"end": 1951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1782,
											"end": 1951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1957,
											"end": 2096,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 1957,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2046,
											"end": 2052,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2039,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2030,
											"end": 2053,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2088,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2073,
											"end": 2076,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2069,
											"end": 2085,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2089,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1957,
											"end": 2096,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1957,
											"end": 2096,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1957,
											"end": 2096,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1957,
											"end": 2096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2102,
											"end": 2204,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 2102,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2143,
											"end": 2149,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2194,
											"end": 2196,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2190,
											"end": 2197,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2185,
											"end": 2187,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2178,
											"end": 2183,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2188,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2198,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2160,
											"end": 2198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2160,
											"end": 2198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2102,
											"end": 2204,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2102,
											"end": 2204,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2102,
											"end": 2204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2102,
											"end": 2204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2587,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 2210,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2301,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2326,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2326,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 2326,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2326,
											"end": 2365,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 2326,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2381,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 2445,
											"end": 2451,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2443,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2381,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 2381,
											"end": 2452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2381,
											"end": 2452,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 2381,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2374,
											"end": 2452,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2374,
											"end": 2452,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2461,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 2519,
											"end": 2525,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2514,
											"end": 2517,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2507,
											"end": 2511,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2505,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2496,
											"end": 2512,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2461,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 2461,
											"end": 2526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2461,
											"end": 2526,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 2461,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 2573,
											"end": 2579,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 2551,
											"end": 2580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2580,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 2551,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2546,
											"end": 2549,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2542,
											"end": 2581,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2535,
											"end": 2581,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2535,
											"end": 2581,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2302,
											"end": 2587,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2587,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2587,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2587,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2587,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2593,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 2593,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2706,
											"end": 2710,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2744,
											"end": 2746,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2721,
											"end": 2747,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2721,
											"end": 2747,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2793,
											"end": 2802,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2787,
											"end": 2791,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2783,
											"end": 2803,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2781,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2757,
											"end": 2804,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2821,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 2894,
											"end": 2898,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2891,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2821,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 2821,
											"end": 2899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2821,
											"end": 2899,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 2821,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2813,
											"end": 2899,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2813,
											"end": 2899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2593,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2593,
											"end": 2906,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2593,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2593,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2593,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3386,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 2912,
											"end": 3386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2980,
											"end": 2986,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2988,
											"end": 2994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3039,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3025,
											"end": 3034,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3023,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3012,
											"end": 3035,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3040,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3005,
											"end": 3124,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3005,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 3005,
											"end": 3124,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3043,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 3043,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 3043,
											"end": 3122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3043,
											"end": 3122,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 3043,
											"end": 3122,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3005,
											"end": 3124,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 3005,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3164,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 3233,
											"end": 3240,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3224,
											"end": 3230,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3222,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3231,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 3188,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3134,
											"end": 3251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3290,
											"end": 3292,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3316,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 3361,
											"end": 3368,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3352,
											"end": 3358,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3341,
											"end": 3350,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3359,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 3316,
											"end": 3369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3369,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 3316,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3369,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3369,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3386,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3386,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3392,
											"end": 3482,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 3392,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3469,
											"end": 3474,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3475,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3444,
											"end": 3476,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3444,
											"end": 3476,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3392,
											"end": 3482,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3392,
											"end": 3482,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3392,
											"end": 3482,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3392,
											"end": 3482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3488,
											"end": 3597,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 3488,
											"end": 3597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3569,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 3584,
											"end": 3589,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3569,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 3569,
											"end": 3590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3569,
											"end": 3590,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 3569,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3564,
											"end": 3567,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3557,
											"end": 3591,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3488,
											"end": 3597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3488,
											"end": 3597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3488,
											"end": 3597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3603,
											"end": 3813,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 3603,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3690,
											"end": 3694,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3728,
											"end": 3730,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3717,
											"end": 3726,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3713,
											"end": 3731,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3705,
											"end": 3731,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3705,
											"end": 3731,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3741,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 3803,
											"end": 3804,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3792,
											"end": 3801,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3788,
											"end": 3805,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3779,
											"end": 3785,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3741,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 3741,
											"end": 3806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3741,
											"end": 3806,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 3741,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3603,
											"end": 3813,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3603,
											"end": 3813,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3603,
											"end": 3813,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3603,
											"end": 3813,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3603,
											"end": 3813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3819,
											"end": 3937,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 3819,
											"end": 3937,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3906,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 3924,
											"end": 3929,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3906,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 3906,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3906,
											"end": 3930,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 3906,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3901,
											"end": 3904,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3894,
											"end": 3931,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3819,
											"end": 3937,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3819,
											"end": 3937,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3819,
											"end": 3937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3943,
											"end": 4165,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 3943,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4036,
											"end": 4040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4074,
											"end": 4076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4063,
											"end": 4072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4059,
											"end": 4077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4051,
											"end": 4077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4051,
											"end": 4077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4087,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 4155,
											"end": 4156,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4144,
											"end": 4153,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4140,
											"end": 4157,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4131,
											"end": 4137,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4087,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 4087,
											"end": 4158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4087,
											"end": 4158,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 4087,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3943,
											"end": 4165,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3943,
											"end": 4165,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3943,
											"end": 4165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3943,
											"end": 4165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3943,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4171,
											"end": 4790,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 4171,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4248,
											"end": 4254,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4256,
											"end": 4262,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4264,
											"end": 4270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4301,
											"end": 4310,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4292,
											"end": 4299,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4311,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4284,
											"end": 4316,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4281,
											"end": 4400,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4281,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 4281,
											"end": 4400,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4319,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 4319,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 4319,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4319,
											"end": 4398,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 4319,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4281,
											"end": 4400,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 4281,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4439,
											"end": 4440,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4464,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 4509,
											"end": 4516,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4500,
											"end": 4506,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4489,
											"end": 4498,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 4507,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 4464,
											"end": 4517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4517,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 4464,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4454,
											"end": 4517,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4454,
											"end": 4517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 4527,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4568,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4592,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 4637,
											"end": 4644,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4628,
											"end": 4634,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4617,
											"end": 4626,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4613,
											"end": 4635,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4592,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 4592,
											"end": 4645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4592,
											"end": 4645,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 4592,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4582,
											"end": 4645,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4582,
											"end": 4645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4537,
											"end": 4655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4696,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4720,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 4765,
											"end": 4772,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4756,
											"end": 4762,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4745,
											"end": 4754,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4741,
											"end": 4763,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4720,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 4720,
											"end": 4773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4720,
											"end": 4773,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 4720,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4710,
											"end": 4773,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4710,
											"end": 4773,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4665,
											"end": 4783,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4171,
											"end": 4790,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4171,
											"end": 4790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4171,
											"end": 4790,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4171,
											"end": 4790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4171,
											"end": 4790,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4171,
											"end": 4790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4796,
											"end": 5125,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 4796,
											"end": 5125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4855,
											"end": 4861,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4906,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4892,
											"end": 4901,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4883,
											"end": 4890,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4879,
											"end": 4902,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4875,
											"end": 4907,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4872,
											"end": 4991,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4872,
											"end": 4991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 4872,
											"end": 4991,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 4910,
											"end": 4989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 4910,
											"end": 4989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4989,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 4910,
											"end": 4989,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4872,
											"end": 4991,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 4872,
											"end": 4991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5055,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 5100,
											"end": 5107,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5091,
											"end": 5097,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5080,
											"end": 5089,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5076,
											"end": 5098,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5055,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 5055,
											"end": 5108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5055,
											"end": 5108,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 5055,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5108,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5108,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5001,
											"end": 5118,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4796,
											"end": 5125,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4796,
											"end": 5125,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4796,
											"end": 5125,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4796,
											"end": 5125,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4796,
											"end": 5125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5131,
											"end": 5217,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 5131,
											"end": 5217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5166,
											"end": 5173,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5206,
											"end": 5210,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5199,
											"end": 5204,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5195,
											"end": 5211,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5131,
											"end": 5217,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5131,
											"end": 5217,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5131,
											"end": 5217,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5131,
											"end": 5217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5223,
											"end": 5335,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 5223,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 5322,
											"end": 5327,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 5306,
											"end": 5328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5328,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 5306,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5301,
											"end": 5304,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5294,
											"end": 5329,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5223,
											"end": 5335,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5223,
											"end": 5335,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5223,
											"end": 5335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5555,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 5341,
											"end": 5555,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5430,
											"end": 5434,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5468,
											"end": 5470,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5457,
											"end": 5466,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5453,
											"end": 5471,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5445,
											"end": 5471,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5445,
											"end": 5471,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5481,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 5545,
											"end": 5546,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5534,
											"end": 5543,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5530,
											"end": 5547,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5521,
											"end": 5527,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5481,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 5481,
											"end": 5548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5481,
											"end": 5548,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 5481,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5555,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5555,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5561,
											"end": 5890,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 5561,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5620,
											"end": 5626,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5669,
											"end": 5671,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5657,
											"end": 5666,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5648,
											"end": 5655,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5644,
											"end": 5667,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5672,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5637,
											"end": 5756,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5637,
											"end": 5756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 5637,
											"end": 5756,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5675,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 5675,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 5675,
											"end": 5754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5675,
											"end": 5754,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 5675,
											"end": 5754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5637,
											"end": 5756,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 5637,
											"end": 5756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5795,
											"end": 5796,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 5865,
											"end": 5872,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5862,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5845,
											"end": 5854,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5863,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 5820,
											"end": 5873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5810,
											"end": 5873,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5810,
											"end": 5873,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5766,
											"end": 5883,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5561,
											"end": 5890,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5561,
											"end": 5890,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5561,
											"end": 5890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5561,
											"end": 5890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5561,
											"end": 5890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5896,
											"end": 6014,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 5896,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5983,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 6001,
											"end": 6006,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5983,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 5983,
											"end": 6007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5983,
											"end": 6007,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 5983,
											"end": 6007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5978,
											"end": 5981,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 6008,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5896,
											"end": 6014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5896,
											"end": 6014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5896,
											"end": 6014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6020,
											"end": 6242,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 6020,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6117,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6151,
											"end": 6153,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6140,
											"end": 6149,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6136,
											"end": 6154,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6128,
											"end": 6154,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6128,
											"end": 6154,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6164,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 6232,
											"end": 6233,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6230,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6217,
											"end": 6234,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6164,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 6164,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6164,
											"end": 6235,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 6164,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6020,
											"end": 6242,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6020,
											"end": 6242,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6020,
											"end": 6242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6020,
											"end": 6242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6020,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6248,
											"end": 6722,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 6248,
											"end": 6722,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6316,
											"end": 6322,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6324,
											"end": 6330,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6373,
											"end": 6375,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6361,
											"end": 6370,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6352,
											"end": 6359,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6348,
											"end": 6371,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6344,
											"end": 6376,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6341,
											"end": 6460,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6341,
											"end": 6460,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 6341,
											"end": 6460,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6379,
											"end": 6458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 6379,
											"end": 6458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 6379,
											"end": 6458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6379,
											"end": 6458,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 6379,
											"end": 6458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6341,
											"end": 6460,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 6341,
											"end": 6460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6499,
											"end": 6500,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6524,
											"end": 6577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 6569,
											"end": 6576,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6560,
											"end": 6566,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6549,
											"end": 6558,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6545,
											"end": 6567,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 6524,
											"end": 6577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6577,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 6524,
											"end": 6577,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6514,
											"end": 6577,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6514,
											"end": 6577,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6470,
											"end": 6587,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6626,
											"end": 6628,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6652,
											"end": 6705,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 6697,
											"end": 6704,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6688,
											"end": 6694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6677,
											"end": 6686,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6673,
											"end": 6695,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6652,
											"end": 6705,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 6652,
											"end": 6705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6652,
											"end": 6705,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 6652,
											"end": 6705,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6642,
											"end": 6705,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6642,
											"end": 6705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6597,
											"end": 6715,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6248,
											"end": 6722,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6248,
											"end": 6722,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6248,
											"end": 6722,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6248,
											"end": 6722,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6248,
											"end": 6722,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6248,
											"end": 6722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6728,
											"end": 6788,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 6728,
											"end": 6788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6756,
											"end": 6759,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6777,
											"end": 6782,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6770,
											"end": 6782,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6770,
											"end": 6782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6728,
											"end": 6788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6728,
											"end": 6788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6728,
											"end": 6788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6728,
											"end": 6788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6794,
											"end": 6936,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 6794,
											"end": 6936,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6844,
											"end": 6853,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6877,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 6895,
											"end": 6929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 6904,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 6922,
											"end": 6927,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6904,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 6904,
											"end": 6928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6904,
											"end": 6928,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 6904,
											"end": 6928,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6895,
											"end": 6929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 6895,
											"end": 6929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6895,
											"end": 6929,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 6895,
											"end": 6929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 6877,
											"end": 6930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 6930,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 6877,
											"end": 6930,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6864,
											"end": 6930,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6864,
											"end": 6930,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6794,
											"end": 6936,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6794,
											"end": 6936,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6794,
											"end": 6936,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6794,
											"end": 6936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6942,
											"end": 7068,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 6942,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6992,
											"end": 7001,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7025,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 7056,
											"end": 7061,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7025,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 7025,
											"end": 7062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7025,
											"end": 7062,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 7025,
											"end": 7062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7012,
											"end": 7062,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7012,
											"end": 7062,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6942,
											"end": 7068,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6942,
											"end": 7068,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6942,
											"end": 7068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6942,
											"end": 7068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7074,
											"end": 7214,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 7074,
											"end": 7214,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7138,
											"end": 7147,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7171,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 7202,
											"end": 7207,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7171,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 7171,
											"end": 7208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7171,
											"end": 7208,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 7171,
											"end": 7208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7158,
											"end": 7208,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7158,
											"end": 7208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7074,
											"end": 7214,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7074,
											"end": 7214,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7074,
											"end": 7214,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7074,
											"end": 7214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7220,
											"end": 7379,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 7220,
											"end": 7379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7321,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 7366,
											"end": 7371,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7321,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 7321,
											"end": 7372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7321,
											"end": 7372,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 7321,
											"end": 7372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7316,
											"end": 7319,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7309,
											"end": 7373,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7220,
											"end": 7379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7220,
											"end": 7379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7220,
											"end": 7379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7385,
											"end": 7635,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 7385,
											"end": 7635,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7492,
											"end": 7496,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7530,
											"end": 7532,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7519,
											"end": 7528,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7515,
											"end": 7533,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7507,
											"end": 7533,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7507,
											"end": 7533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7543,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 7625,
											"end": 7626,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7614,
											"end": 7623,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7610,
											"end": 7627,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7601,
											"end": 7607,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7543,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 7543,
											"end": 7628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7543,
											"end": 7628,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 7543,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7385,
											"end": 7635,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7385,
											"end": 7635,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7385,
											"end": 7635,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7385,
											"end": 7635,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7385,
											"end": 7635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7811,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 7641,
											"end": 7811,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7781,
											"end": 7803,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 7777,
											"end": 7778,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7769,
											"end": 7775,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7765,
											"end": 7779,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7758,
											"end": 7804,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7811,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7817,
											"end": 8183,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 7817,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7959,
											"end": 7962,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7980,
											"end": 8047,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 8044,
											"end": 8046,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 8039,
											"end": 8042,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7980,
											"end": 8047,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 7980,
											"end": 8047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7980,
											"end": 8047,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 7980,
											"end": 8047,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7973,
											"end": 8047,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7973,
											"end": 8047,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8056,
											"end": 8149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 8145,
											"end": 8148,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8056,
											"end": 8149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 8056,
											"end": 8149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8056,
											"end": 8149,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 8056,
											"end": 8149,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8174,
											"end": 8176,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8169,
											"end": 8172,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8165,
											"end": 8177,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8158,
											"end": 8177,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8158,
											"end": 8177,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7817,
											"end": 8183,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7817,
											"end": 8183,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7817,
											"end": 8183,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7817,
											"end": 8183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8189,
											"end": 8608,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 8189,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8355,
											"end": 8359,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8393,
											"end": 8395,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8382,
											"end": 8391,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8378,
											"end": 8396,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8370,
											"end": 8396,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8370,
											"end": 8396,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8442,
											"end": 8451,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8436,
											"end": 8440,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8432,
											"end": 8452,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8428,
											"end": 8429,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8417,
											"end": 8426,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8413,
											"end": 8430,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8406,
											"end": 8453,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8470,
											"end": 8601,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 8596,
											"end": 8600,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8470,
											"end": 8601,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 8470,
											"end": 8601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8470,
											"end": 8601,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 8470,
											"end": 8601,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8462,
											"end": 8601,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8462,
											"end": 8601,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8189,
											"end": 8608,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8189,
											"end": 8608,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8189,
											"end": 8608,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8189,
											"end": 8608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8614,
											"end": 8794,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 8614,
											"end": 8794,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8662,
											"end": 8739,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8659,
											"end": 8660,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8652,
											"end": 8740,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8759,
											"end": 8763,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 8756,
											"end": 8757,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8749,
											"end": 8764,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8783,
											"end": 8787,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8780,
											"end": 8781,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8773,
											"end": 8788,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8800,
											"end": 8994,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 8800,
											"end": 8994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8840,
											"end": 8844,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8860,
											"end": 8880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 8878,
											"end": 8879,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8860,
											"end": 8880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 8860,
											"end": 8880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8860,
											"end": 8880,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 8860,
											"end": 8880,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8855,
											"end": 8880,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8855,
											"end": 8880,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8894,
											"end": 8914,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 8912,
											"end": 8913,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8894,
											"end": 8914,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 8894,
											"end": 8914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8894,
											"end": 8914,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 8894,
											"end": 8914,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8889,
											"end": 8914,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8889,
											"end": 8914,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8938,
											"end": 8939,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8935,
											"end": 8936,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8931,
											"end": 8940,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8923,
											"end": 8940,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8923,
											"end": 8940,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8962,
											"end": 8963,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8956,
											"end": 8960,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8953,
											"end": 8964,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8950,
											"end": 8987,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8950,
											"end": 8987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 8950,
											"end": 8987,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8967,
											"end": 8985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 8967,
											"end": 8985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 8967,
											"end": 8985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8967,
											"end": 8985,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 8967,
											"end": 8985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8950,
											"end": 8987,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 8950,
											"end": 8987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8800,
											"end": 8994,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8800,
											"end": 8994,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8800,
											"end": 8994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8800,
											"end": 8994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8800,
											"end": 8994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9000,
											"end": 9332,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 9000,
											"end": 9332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9121,
											"end": 9125,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9159,
											"end": 9161,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9148,
											"end": 9157,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9144,
											"end": 9162,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9136,
											"end": 9162,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9136,
											"end": 9162,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9172,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 9240,
											"end": 9241,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9229,
											"end": 9238,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9225,
											"end": 9242,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9216,
											"end": 9222,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9172,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 9172,
											"end": 9243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9172,
											"end": 9243,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 9172,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9253,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 9321,
											"end": 9323,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9310,
											"end": 9319,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9306,
											"end": 9324,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9297,
											"end": 9303,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9253,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 9253,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9253,
											"end": 9325,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 9253,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9000,
											"end": 9332,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9000,
											"end": 9332,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9000,
											"end": 9332,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9000,
											"end": 9332,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9000,
											"end": 9332,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9000,
											"end": 9332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9338,
											"end": 9454,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 9338,
											"end": 9454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9408,
											"end": 9429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 9423,
											"end": 9428,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9408,
											"end": 9429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 9408,
											"end": 9429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9408,
											"end": 9429,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 9408,
											"end": 9429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9401,
											"end": 9406,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9398,
											"end": 9430,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9388,
											"end": 9448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 9388,
											"end": 9448,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9444,
											"end": 9445,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9434,
											"end": 9446,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9388,
											"end": 9448,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 9388,
											"end": 9448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9338,
											"end": 9454,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9338,
											"end": 9454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9460,
											"end": 9597,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 9460,
											"end": 9597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9514,
											"end": 9519,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9545,
											"end": 9551,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9539,
											"end": 9552,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9530,
											"end": 9552,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9530,
											"end": 9552,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9561,
											"end": 9591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 9585,
											"end": 9590,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9561,
											"end": 9591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 9561,
											"end": 9591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9561,
											"end": 9591,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 9561,
											"end": 9591,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9460,
											"end": 9597,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9460,
											"end": 9597,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9460,
											"end": 9597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9460,
											"end": 9597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9460,
											"end": 9597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9603,
											"end": 9948,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 9603,
											"end": 9948,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9670,
											"end": 9676,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9719,
											"end": 9721,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9707,
											"end": 9716,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9698,
											"end": 9705,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9694,
											"end": 9717,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9690,
											"end": 9722,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 9687,
											"end": 9806,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9687,
											"end": 9806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 9687,
											"end": 9806,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9725,
											"end": 9804,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 9725,
											"end": 9804,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 9725,
											"end": 9804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9725,
											"end": 9804,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 9725,
											"end": 9804,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9687,
											"end": 9806,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 9687,
											"end": 9806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9845,
											"end": 9846,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9870,
											"end": 9931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 9923,
											"end": 9930,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9914,
											"end": 9920,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9903,
											"end": 9912,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9899,
											"end": 9921,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9870,
											"end": 9931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 9870,
											"end": 9931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9870,
											"end": 9931,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 9870,
											"end": 9931,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9860,
											"end": 9931,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9860,
											"end": 9931,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9816,
											"end": 9941,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9603,
											"end": 9948,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9603,
											"end": 9948,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9603,
											"end": 9948,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9603,
											"end": 9948,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9603,
											"end": 9948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9954,
											"end": 10134,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 9954,
											"end": 10134,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10002,
											"end": 10079,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9999,
											"end": 10000,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9992,
											"end": 10080,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10099,
											"end": 10103,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 10096,
											"end": 10097,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10089,
											"end": 10104,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10123,
											"end": 10127,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10120,
											"end": 10121,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10113,
											"end": 10128,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10140,
											"end": 10460,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 10140,
											"end": 10460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10184,
											"end": 10190,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10221,
											"end": 10222,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 10215,
											"end": 10219,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10211,
											"end": 10223,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10201,
											"end": 10223,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10201,
											"end": 10223,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10268,
											"end": 10269,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10262,
											"end": 10266,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10258,
											"end": 10270,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10289,
											"end": 10307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10279,
											"end": 10360,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 10279,
											"end": 10360,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10345,
											"end": 10349,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 10337,
											"end": 10343,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10333,
											"end": 10350,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10323,
											"end": 10350,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10323,
											"end": 10350,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10279,
											"end": 10360,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 10279,
											"end": 10360,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10407,
											"end": 10409,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10399,
											"end": 10405,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10396,
											"end": 10410,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10376,
											"end": 10394,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10373,
											"end": 10411,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10370,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 10370,
											"end": 10454,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10426,
											"end": 10444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 10426,
											"end": 10444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 10426,
											"end": 10444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10426,
											"end": 10444,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 10426,
											"end": 10444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10370,
											"end": 10454,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 10370,
											"end": 10454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10191,
											"end": 10460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10140,
											"end": 10460,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10140,
											"end": 10460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10140,
											"end": 10460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10140,
											"end": 10460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10466,
											"end": 10645,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 10466,
											"end": 10645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10606,
											"end": 10637,
											"name": "PUSH",
											"source": 8,
											"value": "796F7520646F6E6F74206861766520656E6F7570682062616C616E6365000000"
										},
										{
											"begin": 10602,
											"end": 10603,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10594,
											"end": 10600,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10590,
											"end": 10604,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10583,
											"end": 10638,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10466,
											"end": 10645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10466,
											"end": 10645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10651,
											"end": 11017,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 10651,
											"end": 11017,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10793,
											"end": 10796,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10814,
											"end": 10881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 10878,
											"end": 10880,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 10873,
											"end": 10876,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 10814,
											"end": 10881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10881,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 10814,
											"end": 10881,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10807,
											"end": 10881,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10807,
											"end": 10881,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10890,
											"end": 10983,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 10979,
											"end": 10982,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10890,
											"end": 10983,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 10890,
											"end": 10983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10890,
											"end": 10983,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 10890,
											"end": 10983,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11008,
											"end": 11010,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11003,
											"end": 11006,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10999,
											"end": 11011,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10992,
											"end": 11011,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10992,
											"end": 11011,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10651,
											"end": 11017,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10651,
											"end": 11017,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10651,
											"end": 11017,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10651,
											"end": 11017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11023,
											"end": 11442,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 11023,
											"end": 11442,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11189,
											"end": 11193,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11227,
											"end": 11229,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11216,
											"end": 11225,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11212,
											"end": 11230,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11204,
											"end": 11230,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11204,
											"end": 11230,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11276,
											"end": 11285,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11270,
											"end": 11274,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11266,
											"end": 11286,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11262,
											"end": 11263,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11251,
											"end": 11260,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11247,
											"end": 11264,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11240,
											"end": 11287,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11304,
											"end": 11435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 11430,
											"end": 11434,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11304,
											"end": 11435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 11304,
											"end": 11435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11304,
											"end": 11435,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 11304,
											"end": 11435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11296,
											"end": 11435,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11296,
											"end": 11435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11023,
											"end": 11442,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11023,
											"end": 11442,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11023,
											"end": 11442,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11023,
											"end": 11442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11448,
											"end": 11858,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 11448,
											"end": 11858,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11488,
											"end": 11495,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11511,
											"end": 11531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 11529,
											"end": 11530,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11511,
											"end": 11531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 11511,
											"end": 11531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11511,
											"end": 11531,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 11511,
											"end": 11531,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11506,
											"end": 11531,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11506,
											"end": 11531,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11545,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 11563,
											"end": 11564,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11545,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 11545,
											"end": 11565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11545,
											"end": 11565,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 11545,
											"end": 11565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11540,
											"end": 11565,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11540,
											"end": 11565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11600,
											"end": 11601,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11597,
											"end": 11598,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11593,
											"end": 11602,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 11622,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 11640,
											"end": 11651,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11622,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 11622,
											"end": 11652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11622,
											"end": 11652,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 11622,
											"end": 11652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11611,
											"end": 11652,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11611,
											"end": 11652,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11801,
											"end": 11802,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11792,
											"end": 11799,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11788,
											"end": 11803,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 11785,
											"end": 11786,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11782,
											"end": 11804,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 11762,
											"end": 11763,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11755,
											"end": 11764,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11735,
											"end": 11818,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 11712,
											"end": 11851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 11712,
											"end": 11851,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11831,
											"end": 11849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 11831,
											"end": 11849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 11831,
											"end": 11849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11831,
											"end": 11849,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 11831,
											"end": 11849,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11712,
											"end": 11851,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 11712,
											"end": 11851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11496,
											"end": 11858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11448,
											"end": 11858,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11448,
											"end": 11858,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11448,
											"end": 11858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11448,
											"end": 11858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11448,
											"end": 11858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11864,
											"end": 12044,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 11864,
											"end": 12044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11989,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11909,
											"end": 11910,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11902,
											"end": 11990,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12009,
											"end": 12013,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 12006,
											"end": 12007,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11999,
											"end": 12014,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12033,
											"end": 12037,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12030,
											"end": 12031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12023,
											"end": 12038,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12090,
											"end": 12091,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12107,
											"end": 12127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 12125,
											"end": 12126,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12107,
											"end": 12127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 12107,
											"end": 12127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12107,
											"end": 12127,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 12107,
											"end": 12127,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12102,
											"end": 12127,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12102,
											"end": 12127,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12141,
											"end": 12161,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 12159,
											"end": 12160,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12141,
											"end": 12161,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 12141,
											"end": 12161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12141,
											"end": 12161,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 12141,
											"end": 12161,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12136,
											"end": 12161,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12136,
											"end": 12161,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12180,
											"end": 12181,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12170,
											"end": 12205,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 12170,
											"end": 12205,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 12185,
											"end": 12203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 12185,
											"end": 12203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12203,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 12185,
											"end": 12203,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12170,
											"end": 12205,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 12170,
											"end": 12205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12227,
											"end": 12228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12224,
											"end": 12225,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12220,
											"end": 12229,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 12215,
											"end": 12229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12215,
											"end": 12229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12241,
											"end": 12410,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 12241,
											"end": 12410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12381,
											"end": 12402,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F207265776172647320746F20636C61696D00000000000000000000000000"
										},
										{
											"begin": 12377,
											"end": 12378,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12369,
											"end": 12375,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12365,
											"end": 12379,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12358,
											"end": 12403,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12241,
											"end": 12410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12241,
											"end": 12410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12416,
											"end": 12782,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 12416,
											"end": 12782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12558,
											"end": 12561,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12579,
											"end": 12646,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 12643,
											"end": 12645,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 12638,
											"end": 12641,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12579,
											"end": 12646,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 12579,
											"end": 12646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12579,
											"end": 12646,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 12579,
											"end": 12646,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12572,
											"end": 12646,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12572,
											"end": 12646,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12655,
											"end": 12748,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 12744,
											"end": 12747,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12655,
											"end": 12748,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 12655,
											"end": 12748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12655,
											"end": 12748,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 12655,
											"end": 12748,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12773,
											"end": 12775,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12768,
											"end": 12771,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 12776,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12757,
											"end": 12776,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12757,
											"end": 12776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12416,
											"end": 12782,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12416,
											"end": 12782,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12416,
											"end": 12782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12416,
											"end": 12782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12788,
											"end": 13207,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 12788,
											"end": 13207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12954,
											"end": 12958,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12992,
											"end": 12994,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12981,
											"end": 12990,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12977,
											"end": 12995,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12969,
											"end": 12995,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12969,
											"end": 12995,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13041,
											"end": 13050,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13035,
											"end": 13039,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13031,
											"end": 13051,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13027,
											"end": 13028,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13016,
											"end": 13025,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13012,
											"end": 13029,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13005,
											"end": 13052,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13069,
											"end": 13200,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 13195,
											"end": 13199,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13069,
											"end": 13200,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 13069,
											"end": 13200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13069,
											"end": 13200,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 13069,
											"end": 13200,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13061,
											"end": 13200,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13061,
											"end": 13200,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12788,
											"end": 13207,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12788,
											"end": 13207,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12788,
											"end": 13207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12788,
											"end": 13207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13213,
											"end": 13655,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 13213,
											"end": 13655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13362,
											"end": 13366,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13400,
											"end": 13402,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 13389,
											"end": 13398,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13385,
											"end": 13403,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13377,
											"end": 13403,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13377,
											"end": 13403,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13413,
											"end": 13484,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 13481,
											"end": 13482,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13470,
											"end": 13479,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13466,
											"end": 13483,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13457,
											"end": 13463,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 13413,
											"end": 13484,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 13413,
											"end": 13484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13413,
											"end": 13484,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 13413,
											"end": 13484,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13494,
											"end": 13566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 13562,
											"end": 13564,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13551,
											"end": 13560,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13547,
											"end": 13565,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13538,
											"end": 13544,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13494,
											"end": 13566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 13494,
											"end": 13566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13494,
											"end": 13566,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 13494,
											"end": 13566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13576,
											"end": 13648,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 13644,
											"end": 13646,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13633,
											"end": 13642,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13629,
											"end": 13647,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13620,
											"end": 13626,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13576,
											"end": 13648,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 13576,
											"end": 13648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13576,
											"end": 13648,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 13576,
											"end": 13648,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13213,
											"end": 13655,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 13213,
											"end": 13655,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 13213,
											"end": 13655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13213,
											"end": 13655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13213,
											"end": 13655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13213,
											"end": 13655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13213,
											"end": 13655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13661,
											"end": 13852,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 13661,
											"end": 13852,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13701,
											"end": 13704,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13720,
											"end": 13740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 13738,
											"end": 13739,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13720,
											"end": 13740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 13720,
											"end": 13740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13720,
											"end": 13740,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 13720,
											"end": 13740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13715,
											"end": 13740,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13715,
											"end": 13740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13754,
											"end": 13774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 13772,
											"end": 13773,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13754,
											"end": 13774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 13754,
											"end": 13774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13754,
											"end": 13774,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 13754,
											"end": 13774,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13749,
											"end": 13774,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13749,
											"end": 13774,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13797,
											"end": 13798,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13794,
											"end": 13795,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13790,
											"end": 13799,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13783,
											"end": 13799,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13783,
											"end": 13799,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13818,
											"end": 13821,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13815,
											"end": 13816,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13812,
											"end": 13822,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 13809,
											"end": 13845,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13809,
											"end": 13845,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 13809,
											"end": 13845,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13825,
											"end": 13843,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 13825,
											"end": 13843,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 13825,
											"end": 13843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13825,
											"end": 13843,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 13825,
											"end": 13843,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13809,
											"end": 13845,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 13809,
											"end": 13845,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13661,
											"end": 13852,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13661,
											"end": 13852,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13661,
											"end": 13852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13661,
											"end": 13852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13661,
											"end": 13852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13858,
											"end": 14300,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 13858,
											"end": 14300,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14007,
											"end": 14011,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14045,
											"end": 14047,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 14034,
											"end": 14043,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14030,
											"end": 14048,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14022,
											"end": 14048,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14022,
											"end": 14048,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14058,
											"end": 14129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 14126,
											"end": 14127,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14115,
											"end": 14124,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14111,
											"end": 14128,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14102,
											"end": 14108,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 14058,
											"end": 14129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 14058,
											"end": 14129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14058,
											"end": 14129,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 14058,
											"end": 14129,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14139,
											"end": 14211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 14207,
											"end": 14209,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14196,
											"end": 14205,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14192,
											"end": 14210,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14183,
											"end": 14189,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14139,
											"end": 14211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 14139,
											"end": 14211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14139,
											"end": 14211,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 14139,
											"end": 14211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14221,
											"end": 14293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 14289,
											"end": 14291,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14278,
											"end": 14287,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14274,
											"end": 14292,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14265,
											"end": 14271,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14221,
											"end": 14293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 14221,
											"end": 14293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14221,
											"end": 14293,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 14221,
											"end": 14293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13858,
											"end": 14300,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 13858,
											"end": 14300,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 13858,
											"end": 14300,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13858,
											"end": 14300,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13858,
											"end": 14300,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13858,
											"end": 14300,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13858,
											"end": 14300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14306,
											"end": 14487,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 14306,
											"end": 14487,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14446,
											"end": 14479,
											"name": "PUSH",
											"source": 8,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 14442,
											"end": 14443,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14434,
											"end": 14440,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14430,
											"end": 14444,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14423,
											"end": 14480,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14306,
											"end": 14487,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14306,
											"end": 14487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14493,
											"end": 14859,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 14493,
											"end": 14859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14635,
											"end": 14638,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14656,
											"end": 14723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 14720,
											"end": 14722,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 14715,
											"end": 14718,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14656,
											"end": 14723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 14656,
											"end": 14723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14656,
											"end": 14723,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 14656,
											"end": 14723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14649,
											"end": 14723,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14649,
											"end": 14723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14732,
											"end": 14825,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 14821,
											"end": 14824,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14732,
											"end": 14825,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 14732,
											"end": 14825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14732,
											"end": 14825,
											"name": "tag",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 14732,
											"end": 14825,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14850,
											"end": 14852,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14845,
											"end": 14848,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14841,
											"end": 14853,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14834,
											"end": 14853,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14834,
											"end": 14853,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14493,
											"end": 14859,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14493,
											"end": 14859,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14493,
											"end": 14859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14493,
											"end": 14859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14865,
											"end": 15284,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 14865,
											"end": 15284,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15031,
											"end": 15035,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15069,
											"end": 15071,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15058,
											"end": 15067,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15054,
											"end": 15072,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15046,
											"end": 15072,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15046,
											"end": 15072,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15118,
											"end": 15127,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15112,
											"end": 15116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15108,
											"end": 15128,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15104,
											"end": 15105,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15102,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15089,
											"end": 15106,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15082,
											"end": 15129,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15146,
											"end": 15277,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 15272,
											"end": 15276,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15146,
											"end": 15277,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 15146,
											"end": 15277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15146,
											"end": 15277,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 15146,
											"end": 15277,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15138,
											"end": 15277,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15138,
											"end": 15277,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14865,
											"end": 15284,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14865,
											"end": 15284,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14865,
											"end": 15284,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14865,
											"end": 15284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"REARLY_REWARD_RATE()": "0cd43d5d",
							"REWARD_RATE()": "5997bb37",
							"SECONDS_IN_YEAR()": "5dcc9391",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"clainRewards(uint256)": "3bc46a3f",
							"decimals()": "313ce567",
							"lockTimestamp()": "b544bf83",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"stake(uint256,address)": "7acb7757",
							"stakedfromTS(address)": "8879f730",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(uint256,address)": "00f714ce",
							"xoraToken()": "f7c899a1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"REARLY_REWARD_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REWARD_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SECONDS_IN_YEAR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"clainRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_xoraToken\",\"type\":\"address\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakedfromTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_xoraToken\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xoraToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"Staking\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x1821a0e3715b9e068355dd4560f8cedf382c4f96f2d4d3e8dfaa8206d7b393fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d21d325269a45a1bd25c1b00c4d51b34c9574f1874eb6026504fbe88e838511\",\"dweb:/ipfs/QmWBPFEnQ43J29f1ZcMmsz3wUcT9dqvWeoikRhY5SVvWoZ\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Staking.sol\":{\"keccak256\":\"0xb53d5792e0eb341d79b2683d9bb3a5840dbb302a9a781c00c5400f5511ce658f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7663024a902b57394746e9b2084323359ae055e9637e0ff986ab6efae4d6d51\",\"dweb:/ipfs/QmTqdHFtz3acZScbA48BMMxcLd8VrMUwX3ZcJjy3ZGBBXZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "contracts/Staking.sol:Staking",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "contracts/Staking.sol:Staking",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "contracts/Staking.sol:Staking",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "contracts/Staking.sol:Staking",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "contracts/Staking.sol:Staking",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/Staking.sol:Staking",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 295,
								"contract": "contracts/Staking.sol:Staking",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1013,
								"contract": "contracts/Staking.sol:Staking",
								"label": "xoraToken",
								"offset": 0,
								"slot": "7",
								"type": "t_contract(IERC20)942"
							},
							{
								"astId": 1017,
								"contract": "contracts/Staking.sol:Staking",
								"label": "balances",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1021,
								"contract": "contracts/Staking.sol:Staking",
								"label": "stakedfromTS",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1032,
								"contract": "contracts/Staking.sol:Staking",
								"label": "lockTimestamp",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1040,
								"contract": "contracts/Staking.sol:Staking",
								"label": "stakingStart",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)942": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 999,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 998,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 998,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								998
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							349
						]
					},
					"id": 350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 349,
							"linearizedBaseContracts": [
								349
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 290,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 293,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 291,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 295,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 298,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 299,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 303,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 349,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 306,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 309,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 314,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 318,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 319,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 324,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 325,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 349,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 332,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 333,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 349,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 343,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 344,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 342,
												"id": 346,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 349,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 350,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"ERC20": [
							864
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							968
						]
					},
					"id": 865,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 353,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 943,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 352,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 969,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 354,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 968,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 357,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 999,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 356,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 998,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 285,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 358,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 361,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 998,
										"src": "1133:7:3"
									},
									"id": 362,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 363,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "1142:6:3"
									},
									"id": 364,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 365,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 968,
										"src": "1150:14:3"
									},
									"id": 366,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 367,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:3"
									},
									"id": 368,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 360,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 864,
							"linearizedBaseContracts": [
								864,
								189,
								968,
								942,
								998
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 372,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 371,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 369,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 370,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 378,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 377,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 373,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 376,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 374,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 375,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 380,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 379,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 382,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 381,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 384,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 383,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "1657:57:3",
										"statements": [
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 392,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "1667:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 393,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "1675:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:3"
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 396,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "1690:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 397,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "1700:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:3"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 401,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1613:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 386,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1634:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:3"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:3"
									},
									"scope": 864,
									"src": "1601:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										955
									],
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "1839:29:3",
										"statements": [
											{
												"expression": {
													"id": 407,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 382,
													"src": "1856:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 406,
												"id": 408,
												"nodeType": "Return",
												"src": "1849:12:3"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:3"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1824:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:3"
									},
									"scope": 864,
									"src": "1779:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										961
									],
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "2043:31:3",
										"statements": [
											{
												"expression": {
													"id": 416,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 384,
													"src": "2060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 415,
												"id": 417,
												"nodeType": "Return",
												"src": "2053:14:3"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2028:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:3"
									},
									"scope": 864,
									"src": "1981:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										967
									],
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "2763:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 424,
												"id": 426,
												"nodeType": "Return",
												"src": "2773:9:3"
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:3"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "2756:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 422,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:3"
									},
									"scope": 864,
									"src": "2707:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										891
									],
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "2910:36:3",
										"statements": [
											{
												"expression": {
													"id": 434,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 380,
													"src": "2927:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 433,
												"id": 435,
												"nodeType": "Return",
												"src": "2920:19:3"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:3"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "2901:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:3"
									},
									"scope": 864,
									"src": "2849:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										899
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "3078:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 445,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "3095:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 447,
													"indexExpression": {
														"id": 446,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "3105:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 444,
												"id": 448,
												"nodeType": "Return",
												"src": "3088:25:3"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:3"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:3"
									},
									"scope": 864,
									"src": "3004:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										909
									],
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "3390:103:3",
										"statements": [
											{
												"assignments": [
													461
												],
												"declarations": [
													{
														"constant": false,
														"id": 461,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "3400:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 460,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 462,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "3416:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3448:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 467,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "3455:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "3459:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 465,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "3438:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 459,
												"id": 472,
												"nodeType": "Return",
												"src": "3475:11:3"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3333:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3345:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:3"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3384:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:3"
									},
									"scope": 864,
									"src": "3315:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										919
									],
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "3640:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 484,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "3657:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 486,
														"indexExpression": {
															"id": 485,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3669:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 488,
													"indexExpression": {
														"id": 487,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "3676:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 483,
												"id": 489,
												"nodeType": "Return",
												"src": "3650:34:3"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3570:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3585:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:3"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3631:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:3"
									},
									"scope": 864,
									"src": "3551:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										929
									],
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "4077:107:3",
										"statements": [
											{
												"assignments": [
													502
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 514,
														"src": "4087:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 501,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 505,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 503,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "4103:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 507,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "4134:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "4141:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "4150:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 755,
														"src": "4125:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 500,
												"id": 513,
												"nodeType": "Return",
												"src": "4166:11:3"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4015:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:3"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4071:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:3"
									},
									"scope": 864,
									"src": "3998:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										941
									],
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "4869:151:3",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 546,
														"src": "4879:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 527,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 529,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "4897:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 533,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4935:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "4941:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 535,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4950:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 532,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "4919:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 539,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4976:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "4982:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4986:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 538,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "4966:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 526,
												"id": 545,
												"nodeType": "Return",
												"src": "5002:11:3"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4798:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4812:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4824:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4863:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:3"
									},
									"scope": 864,
									"src": "4776:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "5470:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 557,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "5484:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5500:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5492:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 558,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5492:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5492:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5484:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "5480:86:3",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "5504:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5552:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5544:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 564,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5544:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5544:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 563,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5525:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5525:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 569,
															"nodeType": "RevertStatement",
															"src": "5518:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 572,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "5579:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5593:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5585:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 573,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5585:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5585:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5579:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 586,
												"nodeType": "IfStatement",
												"src": "5575:86:3",
												"trueBody": {
													"id": 585,
													"nodeType": "Block",
													"src": "5597:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5647:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5639:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 579,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5639:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5639:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 578,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5618:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5618:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 584,
															"nodeType": "RevertStatement",
															"src": "5611:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "5678:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "5684:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "5688:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "5670:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5670:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "5670:24:3"
											}
										]
									},
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5412:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5426:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5438:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:3"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5470:0:3"
									},
									"scope": 864,
									"src": "5393:308:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "6091:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 604,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "6105:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6121:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6113:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 605,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6113:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6113:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6105:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 641,
													"nodeType": "Block",
													"src": "6279:362:3",
													"statements": [
														{
															"assignments": [
																616
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 616,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6301:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 641,
																	"src": "6293:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 615,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6293:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 620,
															"initialValue": {
																"baseExpression": {
																	"id": 617,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "6315:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 619,
																"indexExpression": {
																	"id": 618,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "6325:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6315:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6293:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 621,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "6348:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 622,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6362:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6348:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 631,
															"nodeType": "IfStatement",
															"src": "6344:115:3",
															"trueBody": {
																"id": 630,
																"nodeType": "Block",
																"src": "6369:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 625,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 597,
																					"src": "6419:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 626,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 616,
																					"src": "6425:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 627,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 601,
																					"src": "6438:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 624,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6394:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6394:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 629,
																		"nodeType": "RevertStatement",
																		"src": "6387:57:3"
																	}
																]
															}
														},
														{
															"id": 640,
															"nodeType": "UncheckedBlock",
															"src": "6472:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 632,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "6579:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 634,
																			"indexExpression": {
																				"id": 633,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 597,
																				"src": "6589:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6579:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 635,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 616,
																				"src": "6597:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 636,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "6611:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6597:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6579:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 639,
																	"nodeType": "ExpressionStatement",
																	"src": "6579:37:3"
																}
															]
														}
													]
												},
												"id": 642,
												"nodeType": "IfStatement",
												"src": "6101:540:3",
												"trueBody": {
													"id": 614,
													"nodeType": "Block",
													"src": "6125:148:3",
													"statements": [
														{
															"expression": {
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 610,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "6241:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 611,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6257:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6241:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 613,
															"nodeType": "ExpressionStatement",
															"src": "6241:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 643,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "6655:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6669:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6661:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 644,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6661:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6661:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6655:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 662,
													"nodeType": "Block",
													"src": "6870:206:3",
													"statements": [
														{
															"id": 661,
															"nodeType": "UncheckedBlock",
															"src": "6884:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 655,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "7029:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 657,
																			"indexExpression": {
																				"id": 656,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 599,
																				"src": "7039:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7029:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 658,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "7046:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7029:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 660,
																	"nodeType": "ExpressionStatement",
																	"src": "7029:22:3"
																}
															]
														}
													]
												},
												"id": 663,
												"nodeType": "IfStatement",
												"src": "6651:425:3",
												"trueBody": {
													"id": 654,
													"nodeType": "Block",
													"src": "6673:191:3",
													"statements": [
														{
															"id": 653,
															"nodeType": "UncheckedBlock",
															"src": "6687:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 649,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 380,
																			"src": "6818:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 650,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "6834:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6818:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 652,
																	"nodeType": "ExpressionStatement",
																	"src": "6818:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 665,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "7100:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "7106:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "7110:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 664,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "7091:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7091:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "EmitStatement",
												"src": "7086:30:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "5707:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6025:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6041:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6033:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6033:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6055:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6047:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6047:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6067:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6059:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6059:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:41:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6091:0:3"
									},
									"scope": 864,
									"src": "6016:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "7522:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 679,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "7536:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7555:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7547:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 680,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7547:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7547:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7536:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 693,
												"nodeType": "IfStatement",
												"src": "7532:91:3",
												"trueBody": {
													"id": 692,
													"nodeType": "Block",
													"src": "7559:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 688,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7609:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7601:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 686,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7601:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7601:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 685,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7580:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7580:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 691,
															"nodeType": "RevertStatement",
															"src": "7573:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7648:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7640:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 695,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7640:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7640:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "7652:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "7661:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 694,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "7632:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7632:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "7632:35:3"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "7129:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7475:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7489:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7481:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7481:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7506:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7498:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7498:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7480:32:3"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7522:0:3"
									},
									"scope": 864,
									"src": "7466:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8048:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 712,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "8062:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8081:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8073:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 713,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8073:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8073:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8062:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 726,
												"nodeType": "IfStatement",
												"src": "8058:89:3",
												"trueBody": {
													"id": 725,
													"nodeType": "Block",
													"src": "8085:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8133:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8125:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 719,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8125:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8125:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 718,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8106:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8106:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 724,
															"nodeType": "RevertStatement",
															"src": "8099:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 728,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "8164:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8181:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8173:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 729,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8173:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8173:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8185:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 727,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "8156:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8156:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "8156:35:3"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "7680:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8001:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8015:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8007:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8007:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8032:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8024:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8024:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8006:32:3"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8048:0:3"
									},
									"scope": 864,
									"src": "7992:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "8808:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 748,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "8827:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "8834:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "8843:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8850:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 747,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 815,
														"src": "8818:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8818:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "8818:37:3"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "8204:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8743:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8760:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8752:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8752:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8775:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8767:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8767:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8792:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8784:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8784:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8751:47:3"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8808:0:3"
									},
									"scope": 864,
									"src": "8734:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "9807:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "9821:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9838:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9830:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 768,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9830:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9830:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9821:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "IfStatement",
												"src": "9817:89:3",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "9842:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9892:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9884:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 774,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9884:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9884:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 773,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9863:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9863:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 779,
															"nodeType": "RevertStatement",
															"src": "9856:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 782,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "9919:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9938:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9930:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 783,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9930:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9930:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9919:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "9915:90:3",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "9942:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9991:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9983:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 789,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9983:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9983:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 788,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9963:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9963:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 794,
															"nodeType": "RevertStatement",
															"src": "9956:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 797,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "10014:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 800,
															"indexExpression": {
																"id": 798,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "10026:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10014:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 801,
														"indexExpression": {
															"id": 799,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "10033:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10014:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 802,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "10044:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10014:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "10014:35:3"
											},
											{
												"condition": {
													"id": 805,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 764,
													"src": "10063:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "10059:76:3",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "10074:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 807,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "10102:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 808,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "10109:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 809,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "10118:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 806,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "10093:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10093:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 811,
															"nodeType": "EmitStatement",
															"src": "10088:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "8868:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9718:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9735:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9727:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9750:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9742:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9742:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9767:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9759:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9759:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9779:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9774:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9774:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9726:63:3"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9807:0:3"
									},
									"scope": 864,
									"src": "9709:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "10512:388:3",
										"statements": [
											{
												"assignments": [
													826
												],
												"declarations": [
													{
														"constant": false,
														"id": 826,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10530:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 862,
														"src": "10522:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 825,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10522:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 831,
												"initialValue": {
													"arguments": [
														{
															"id": 828,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "10559:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 829,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "10566:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 827,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "10549:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10549:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10522:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 832,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "10588:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10613:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 834,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10613:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 833,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10608:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10608:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10622:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10608:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10588:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 861,
												"nodeType": "IfStatement",
												"src": "10584:310:3",
												"trueBody": {
													"id": 860,
													"nodeType": "Block",
													"src": "10627:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 839,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "10645:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 840,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "10664:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10645:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 849,
															"nodeType": "IfStatement",
															"src": "10641:130:3",
															"trueBody": {
																"id": 848,
																"nodeType": "Block",
																"src": "10671:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 843,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "10723:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 844,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10732:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 845,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10750:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 842,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10696:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10696:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 847,
																		"nodeType": "RevertStatement",
																		"src": "10689:67:3"
																	}
																]
															}
														},
														{
															"id": 859,
															"nodeType": "UncheckedBlock",
															"src": "10784:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 851,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 818,
																				"src": "10821:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 852,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 820,
																				"src": "10828:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 853,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10837:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 854,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10856:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10837:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10863:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 850,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				755,
																				815
																			],
																			"referencedDeclaration": 815,
																			"src": "10812:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10812:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 858,
																	"nodeType": "ExpressionStatement",
																	"src": "10812:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "10147:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10432:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10456:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10448:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10448:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10471:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10463:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10463:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10488:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10480:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10480:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10447:47:3"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10512:0:3"
									},
									"scope": 864,
									"src": "10423:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 865,
							"src": "1106:9796:3",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "105:10798:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						]
					},
					"id": 943,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 866,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 867,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 942,
							"linearizedBaseContracts": [
								942
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 876,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 885,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 891,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 942,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 942,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 909,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 942,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 919,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 942,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 929,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 926,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 942,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 942,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 943,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						],
						"IERC20Metadata": [
							968
						]
					},
					"id": 969,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 944,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 946,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 969,
							"sourceUnit": 943,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 945,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 948,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "306:6:5"
									},
									"id": 949,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 947,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 968,
							"linearizedBaseContracts": [
								968,
								942
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 952,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 968,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 961,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 958,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 968,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 967,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 964,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 968,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 969,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							998
						]
					},
					"id": 999,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 970,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 971,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 998,
							"linearizedBaseContracts": [
								998
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 976,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 975,
												"id": 978,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 998,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 985,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 984,
												"id": 987,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 998,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 993,
												"id": 995,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 998,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 999,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"contracts/Staking.sol": {
				"ast": {
					"absolutePath": "contracts/Staking.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"ERC20": [
							864
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							968
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							349
						],
						"Staking": [
							1294
						]
					},
					"id": 1295,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1000,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1001,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1295,
							"sourceUnit": 943,
							"src": "58:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1002,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1295,
							"sourceUnit": 865,
							"src": "115:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1003,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1295,
							"sourceUnit": 148,
							"src": "171:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1004,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1295,
							"sourceUnit": 350,
							"src": "224:62:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1005,
										"name": "ERC20",
										"nameLocations": [
											"308:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 864,
										"src": "308:5:7"
									},
									"id": 1006,
									"nodeType": "InheritanceSpecifier",
									"src": "308:5:7"
								},
								{
									"baseName": {
										"id": 1007,
										"name": "Ownable",
										"nameLocations": [
											"315:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "315:7:7"
									},
									"id": 1008,
									"nodeType": "InheritanceSpecifier",
									"src": "315:7:7"
								},
								{
									"baseName": {
										"id": 1009,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"324:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 349,
										"src": "324:15:7"
									},
									"id": 1010,
									"nodeType": "InheritanceSpecifier",
									"src": "324:15:7"
								}
							],
							"canonicalName": "Staking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1294,
							"linearizedBaseContracts": [
								1294,
								349,
								147,
								864,
								189,
								968,
								942,
								998
							],
							"name": "Staking",
							"nameLocation": "297:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f7c899a1",
									"id": 1013,
									"mutability": "mutable",
									"name": "xoraToken",
									"nameLocation": "360:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1294,
									"src": "346:23:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$942",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1012,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1011,
											"name": "IERC20",
											"nameLocations": [
												"346:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 942,
											"src": "346:6:7"
										},
										"referencedDeclaration": 942,
										"src": "346:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$942",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "27e235e3",
									"id": 1017,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "411:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1294,
									"src": "376:43:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1016,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1014,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "384:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "376:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1015,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "395:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8879f730",
									"id": 1021,
									"mutability": "mutable",
									"name": "stakedfromTS",
									"nameLocation": "460:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1294,
									"src": "425:47:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1020,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1018,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "433:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "425:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1019,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "444:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5dcc9391",
									"id": 1030,
									"mutability": "constant",
									"name": "SECONDS_IN_YEAR",
									"nameLocation": "503:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1294,
									"src": "479:60:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1022,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "479:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										},
										"id": 1029,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_525600_by_1",
												"typeString": "int_const 525600"
											},
											"id": 1027,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"commonType": {
													"typeIdentifier": "t_rational_8760_by_1",
													"typeString": "int_const 8760"
												},
												"id": 1025,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "333635",
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "521:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_365_by_1",
														"typeString": "int_const 365"
													},
													"value": "365"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "3234",
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "527:2:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_24_by_1",
														"typeString": "int_const 24"
													},
													"value": "24"
												},
												"src": "521:8:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_8760_by_1",
													"typeString": "int_const 8760"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "*",
											"rightExpression": {
												"hexValue": "3630",
												"id": 1026,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "532:2:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_60_by_1",
													"typeString": "int_const 60"
												},
												"value": "60"
											},
											"src": "521:13:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_525600_by_1",
												"typeString": "int_const 525600"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "3630",
											"id": 1028,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "537:2:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_60_by_1",
												"typeString": "int_const 60"
											},
											"value": "60"
										},
										"src": "521:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b544bf83",
									"id": 1032,
									"mutability": "mutable",
									"name": "lockTimestamp",
									"nameLocation": "560:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1294,
									"src": "545:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1031,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "545:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5997bb37",
									"id": 1035,
									"mutability": "constant",
									"name": "REWARD_RATE",
									"nameLocation": "603:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1294,
									"src": "579:40:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1033,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "579:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3135",
										"id": 1034,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "617:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15_by_1",
											"typeString": "int_const 15"
										},
										"value": "15"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "0cd43d5d",
									"id": 1038,
									"mutability": "constant",
									"name": "REARLY_REWARD_RATE",
									"nameLocation": "649:18:7",
									"nodeType": "VariableDeclaration",
									"scope": 1294,
									"src": "625:47:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1036,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "625:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3235",
										"id": 1037,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "670:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25_by_1",
											"typeString": "int_const 25"
										},
										"value": "25"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1040,
									"mutability": "mutable",
									"name": "stakingStart",
									"nameLocation": "686:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1294,
									"src": "678:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1039,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "678:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 1046,
									"name": "Staked",
									"nameLocation": "711:6:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "734:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "718:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "748:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "740:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "717:38:7"
									},
									"src": "705:51:7"
								},
								{
									"anonymous": false,
									"eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
									"id": 1052,
									"name": "Withdrawn",
									"nameLocation": "767:9:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "793:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "777:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "807:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "799:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:38:7"
									},
									"src": "761:54:7"
								},
								{
									"anonymous": false,
									"eventSelector": "fc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe",
									"id": 1058,
									"name": "RewardsClaimed",
									"nameLocation": "826:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "857:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "841:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "841:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "871:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "863:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "840:38:7"
									},
									"src": "820:59:7"
								},
								{
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "950:100:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1072,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "974:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$1294",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$1294",
																		"typeString": "contract Staking"
																	}
																],
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "966:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1070,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "966:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "966:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_44280000000000000000000000_by_1",
																"typeString": "int_const 44280000000000000000000000"
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "34345f3238305f303030",
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "981:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_44280000_by_1",
																	"typeString": "int_const 44280000"
																},
																"value": "44_280_000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"id": 1077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 1075,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "995:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"hexValue": "3138",
																			"id": 1076,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "999:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18_by_1",
																				"typeString": "int_const 18"
																			},
																			"value": "18"
																		},
																		"src": "995:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	}
																],
																"id": 1078,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "994:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "981:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_44280000000000000000000000_by_1",
																"typeString": "int_const 44280000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_44280000000000000000000000_by_1",
																"typeString": "int_const 44280000000000000000000000"
															}
														],
														"id": 1069,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "960:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "960:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "960:43:7"
											},
											{
												"expression": {
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1082,
														"name": "stakingStart",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "1013:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1083,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1028:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1034:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1028:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1013:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1086,
												"nodeType": "ExpressionStatement",
												"src": "1013:30:7"
											}
										]
									},
									"id": 1088,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1061,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "907:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "911:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "907:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1063,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1060,
												"name": "Ownable",
												"nameLocations": [
													"899:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "899:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "899:19:7"
										},
										{
											"arguments": [
												{
													"hexValue": "7374616b656420586f7261",
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "925:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_3faa54afe754947b3ccf3fff448f0947ca425f3a8043efd6d5df1386d009bde3",
														"typeString": "literal_string \"staked Xora\""
													},
													"value": "staked Xora"
												},
												{
													"hexValue": "7374584f5241",
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "940:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d75508296e00d10f2d0501fc57b41ffb87eb2e86bea0e88a6ffc8ccbf5207c32",
														"typeString": "literal_string \"stXORA\""
													},
													"value": "stXORA"
												}
											],
											"id": 1067,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1064,
												"name": "ERC20",
												"nameLocations": [
													"919:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 864,
												"src": "919:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "919:30:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "896:2:7"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "950:0:7"
									},
									"scope": 1294,
									"src": "885:165:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "1131:288:7",
										"statements": [
											{
												"expression": {
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1097,
														"name": "xoraToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "1141:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$942",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1099,
																"name": "_xoraToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1092,
																"src": "1160:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1098,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "1153:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$942_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1153:18:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$942",
															"typeString": "contract IERC20"
														}
													},
													"src": "1141:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$942",
														"typeString": "contract IERC20"
													}
												},
												"id": 1102,
												"nodeType": "ExpressionStatement",
												"src": "1141:30:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1106,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1204:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1208:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1204:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1110,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1224:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$1294",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$1294",
																		"typeString": "contract Staking"
																	}
																],
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1216:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1108,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1216:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1216:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1112,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "1231:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1103,
															"name": "xoraToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "1181:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$942",
																"typeString": "contract IERC20"
															}
														},
														"id": 1105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1191:12:7",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 941,
														"src": "1181:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1181:57:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "1181:57:7"
											},
											{
												"expression": {
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1115,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "1248:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1118,
														"indexExpression": {
															"expression": {
																"id": 1116,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1257:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1261:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1257:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1248:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1119,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "1272:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1248:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "1248:30:7"
											},
											{
												"expression": {
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1122,
															"name": "stakedfromTS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "1288:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1125,
														"indexExpression": {
															"expression": {
																"id": 1123,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1301:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1305:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1301:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1288:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1126,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1315:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1321:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1315:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1288:42:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "1288:42:7"
											},
											{
												"expression": {
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1130,
														"name": "lockTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "1340:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1131,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1356:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1362:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1356:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1340:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "1340:31:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1136,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1393:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1397:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1393:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1138,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "1405:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1135,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "1386:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1386:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1140,
												"nodeType": "EmitStatement",
												"src": "1381:31:7"
											}
										]
									},
									"functionSelector": "7acb7757",
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1095,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1094,
												"name": "nonReentrant",
												"nameLocations": [
													"1118:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "1118:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1118:12:7"
										}
									],
									"name": "stake",
									"nameLocation": "1065:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1079:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "1071:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1071:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "_xoraToken",
												"nameLocation": "1096:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "1088:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1070:37:7"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1131:0:7"
									},
									"scope": 1294,
									"src": "1056:363:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1190,
										"nodeType": "Block",
										"src": "1488:282:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1150,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1017,
																	"src": "1506:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1153,
																"indexExpression": {
																	"expression": {
																		"id": 1151,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1515:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1519:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1515:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1506:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1154,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1144,
																"src": "1530:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1506:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1538:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1498:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1498:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1158,
												"nodeType": "ExpressionStatement",
												"src": "1498:63:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1160,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "1584:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1159,
														"name": "clainRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1293,
														"src": "1571:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1571:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1162,
												"nodeType": "ExpressionStatement",
												"src": "1571:20:7"
											},
											{
												"expression": {
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1163,
														"name": "xoraToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "1601:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$942",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1165,
																"name": "_xoraToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "1620:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1164,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "1613:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$942_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1613:18:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$942",
															"typeString": "contract IERC20"
														}
													},
													"src": "1601:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$942",
														"typeString": "contract IERC20"
													}
												},
												"id": 1168,
												"nodeType": "ExpressionStatement",
												"src": "1601:30:7"
											},
											{
												"expression": {
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1169,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "1641:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1172,
														"indexExpression": {
															"expression": {
																"id": 1170,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1650:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1654:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1650:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1641:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1173,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "1664:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1641:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1175,
												"nodeType": "ExpressionStatement",
												"src": "1641:29:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1179,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1700:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1704:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1700:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1181,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "1712:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1176,
															"name": "xoraToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "1680:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$942",
																"typeString": "contract IERC20"
															}
														},
														"id": 1178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1690:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 909,
														"src": "1680:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1680:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1183,
												"nodeType": "ExpressionStatement",
												"src": "1680:39:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1185,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1744:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1748:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1744:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1187,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "1756:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1184,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "1734:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1734:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1189,
												"nodeType": "EmitStatement",
												"src": "1729:34:7"
											}
										]
									},
									"functionSelector": "00f714ce",
									"id": 1191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1434:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1451:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1443:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "_xoraToken",
												"nameLocation": "1467:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1459:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1459:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:36:7"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1488:0:7"
									},
									"scope": 1294,
									"src": "1425:345:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1292,
										"nodeType": "Block",
										"src": "1835:724:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1199,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1017,
																	"src": "1853:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1202,
																"indexExpression": {
																	"expression": {
																		"id": 1200,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1862:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1866:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1862:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1853:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1203,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1193,
																"src": "1877:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1853:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f7520646f6e6f74206861766520656e6f7570682062616c616e6365",
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1886:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f7d3967cfde58b67385c8023f773e1b407dd3cf471a261f64b0eb38ecec65d91",
																"typeString": "literal_string \"you donot have enouph balance\""
															},
															"value": "you donot have enouph balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f7d3967cfde58b67385c8023f773e1b407dd3cf471a261f64b0eb38ecec65d91",
																"typeString": "literal_string \"you donot have enouph balance\""
															}
														],
														"id": 1198,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1845:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1845:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1207,
												"nodeType": "ExpressionStatement",
												"src": "1845:73:7"
											},
											{
												"assignments": [
													1209
												],
												"declarations": [
													{
														"constant": false,
														"id": 1209,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "1936:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1292,
														"src": "1928:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1208,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1928:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1210,
												"nodeType": "VariableDeclarationStatement",
												"src": "1928:14:7"
											},
											{
												"assignments": [
													1212
												],
												"declarations": [
													{
														"constant": false,
														"id": 1212,
														"mutability": "mutable",
														"name": "secondsStaked",
														"nameLocation": "1960:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1292,
														"src": "1952:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1211,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1952:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1220,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1213,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1976:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1982:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1976:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 1215,
															"name": "stakedfromTS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "1994:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1218,
														"indexExpression": {
															"expression": {
																"id": 1216,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2007:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2011:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2007:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1994:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1976:42:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1952:66:7"
											},
											{
												"assignments": [
													1222
												],
												"declarations": [
													{
														"constant": false,
														"id": 1222,
														"mutability": "mutable",
														"name": "secondsStakedFromInitial",
														"nameLocation": "2036:24:7",
														"nodeType": "VariableDeclaration",
														"scope": 1292,
														"src": "2028:32:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1221,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2028:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1227,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1223,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2063:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2069:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2063:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1225,
														"name": "stakingStart",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "2081:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2063:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2028:65:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1228,
														"name": "secondsStakedFromInitial",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "2106:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_rational_7776000_by_1",
																	"typeString": "int_const 7776000"
																},
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "33",
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2134:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3330",
																	"id": 1230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2138:7:7",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2592000_by_1",
																		"typeString": "int_const 2592000"
																	},
																	"value": "30"
																},
																"src": "2134:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_7776000_by_1",
																	"typeString": "int_const 7776000"
																}
															}
														],
														"id": 1232,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2133:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7776000_by_1",
															"typeString": "int_const 7776000"
														}
													},
													"src": "2106:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1263,
													"nodeType": "Block",
													"src": "2266:98:7",
													"statements": [
														{
															"expression": {
																"id": 1261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1249,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1209,
																	"src": "2281:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1254,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1252,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1250,
																						"name": "_amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1193,
																						"src": "2291:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1251,
																						"name": "REWARD_RATE",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1035,
																						"src": "2301:11:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2291:21:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1253,
																					"name": "secondsStaked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1212,
																					"src": "2315:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2291:37:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1255,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2290:39:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1258,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "313030",
																					"id": 1256,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2331:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1257,
																					"name": "SECONDS_IN_YEAR",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1030,
																					"src": "2337:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2331:21:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1259,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2330:23:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2290:63:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2281:72:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1262,
															"nodeType": "ExpressionStatement",
															"src": "2281:72:7"
														}
													]
												},
												"id": 1264,
												"nodeType": "IfStatement",
												"src": "2103:261:7",
												"trueBody": {
													"id": 1248,
													"nodeType": "Block",
													"src": "2147:105:7",
													"statements": [
														{
															"expression": {
																"id": 1246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1234,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1209,
																	"src": "2162:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1239,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1237,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1235,
																						"name": "_amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1193,
																						"src": "2172:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1236,
																						"name": "REARLY_REWARD_RATE",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1038,
																						"src": "2182:18:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2172:28:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1238,
																					"name": "secondsStaked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1212,
																					"src": "2203:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2172:44:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1240,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2171:46:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1243,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "313030",
																					"id": 1241,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2219:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1242,
																					"name": "SECONDS_IN_YEAR",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1030,
																					"src": "2225:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2219:21:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1244,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2218:23:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2171:70:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2162:79:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1247,
															"nodeType": "ExpressionStatement",
															"src": "2162:79:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1266,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1209,
																"src": "2381:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2390:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2381:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207265776172647320746f20636c61696d",
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2393:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
																"typeString": "literal_string \"No rewards to claim\""
															},
															"value": "No rewards to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
																"typeString": "literal_string \"No rewards to claim\""
															}
														],
														"id": 1265,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2373:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2373:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1271,
												"nodeType": "ExpressionStatement",
												"src": "2373:42:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1273,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2431:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2435:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2431:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1275,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "2443:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1272,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "2425:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2425:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1277,
												"nodeType": "ExpressionStatement",
												"src": "2425:25:7"
											},
											{
												"expression": {
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1278,
															"name": "stakedfromTS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "2460:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1281,
														"indexExpression": {
															"expression": {
																"id": 1279,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2473:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2477:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2473:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2460:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1282,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2487:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2493:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2487:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2460:42:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1285,
												"nodeType": "ExpressionStatement",
												"src": "2460:42:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1287,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2532:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2536:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2532:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1289,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "2544:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1286,
														"name": "RewardsClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "2517:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2517:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1291,
												"nodeType": "EmitStatement",
												"src": "2512:39:7"
											}
										]
									},
									"functionSelector": "3bc46a3f",
									"id": 1293,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1196,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1195,
												"name": "nonReentrant",
												"nameLocations": [
													"1823:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "1823:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1823:12:7"
										}
									],
									"name": "clainRewards",
									"nameLocation": "1786:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1807:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "1799:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:17:7"
									},
									"returnParameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1835:0:7"
									},
									"scope": 1294,
									"src": "1777:782:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1295,
							"src": "288:2274:7",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								876,
								885,
								1046,
								1052,
								1058
							]
						}
					],
					"src": "32:2531:7"
				},
				"id": 7
			}
		}
	}
}