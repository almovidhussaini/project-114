{
	"id": "45c42298438f5f3bcfcdc6f239d0c48b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/XORA.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract XORA is ERC20, Ownable, ReentrancyGuard {\n    uint256 public constant INITIAL_SUPPLY = 1_000_000_000 * (10**18);\n    IERC20 public stablecoin;\n\n    uint256 public buyTax = 1;\n    uint256 public sellTax = 1;\n    uint256 public lastHalvingTime;\n    uint256 public rewardRate;\n    uint256 public constant HALVING_PERIOD = 365 days;\n\n    uint256  teamStartTimestamp;\n    uint256  constant TEAM_CLIFF = 18 * 30 days;\n    uint256  constant TEAM_VESTING_PERIOD = 4 * 365 days;\n    uint256  TEAM_TOTAL_FUND = 100_000_000 * (10**18);\n\n    uint256 marketingStartTimestamp;\n    uint256 public constant MARKETING_INITIAL_UNLOCK = 25;\n\n    uint256 public teamAllocated = 100_000_000 * (10**18);\n    uint256 public releasedTeamAmount;\n    uint256  MARKETING_VESTING_PERIOD = 12 * 30 days;\n\n    uint256 public marketingAllocated = 75_000_000 * (10**18);\n    uint256 public releasedMarketingAmount;\n\n\n    event RewardHalved(uint256 newRewardRate);\n    event TokensBurned(uint256 amount);\n    event BuyBackAndBurn(uint256 amount);\n    event RewardParametersInitialized(\n        uint256 initialRewardRate,\n        address stablecoin\n    );\n\n    address public constant PLAY_TO_EARN =\n        0xdD870fA1b7C4700F2BD7f44238821C26f7392148;\n    address public constant LIQUIDITY_POOL =\n        0x583031D1113aD414F02576BD6afaBfb302140225;\n    address public constant TEAM_AND_DEVELOPMENT =\n        0x4B0897b0513fdC7C541B6d9D7E929C4e5364D2dB;\n    address public constant COMMUNITY_GROWTH_AND_MARKETING =\n        0x14723A09ACff6D2A60DcdF7aA4AFf308FDDC160C;\n    address public constant STRADEGIC_RESERVE =\n        0xCA35b7d915458EF540aDe6068dFe2F44E8fa733c;\n    address public constant ICO_ALLOCATION =\n        0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC;\n\n    // address public constant AIRDROP = 0x1aE0EA34a72D944a8C7603FfB3eC30a6669E454C;\n\n    constructor(address _pairLiquidityPool) Ownable(msg.sender) ERC20(\"XORA Token\", \"XORA\") {\n        _mint(PLAY_TO_EARN, 450_000_000 * (10**18)); //45%\n        _mint(_pairLiquidityPool, 150_000_000 * (10**18)); //15%\n        // _mint(TEAM_AND_DEVELOPMENT, 100_000_000 * (10**18)); //10%\n        _mint(COMMUNITY_GROWTH_AND_MARKETING, (100_000_000 * (10**18) * 25 )/100); //10% initial supply of 25%\n        _mint(STRADEGIC_RESERVE, 100_000_000 * (10**18)); //10%\n        _mint(ICO_ALLOCATION, 100_000_000 * (10**18)); //10%\n\n        teamStartTimestamp = block.timestamp;\n        marketingStartTimestamp = block.timestamp;\n    }\n\n    function releaseTeamTokens() external onlyOwner nonReentrant {\n        require(block.timestamp >= teamStartTimestamp + TEAM_CLIFF, \"Team vesting cliff not reached\");\n        uint256 elapsedTime = block.timestamp - (teamStartTimestamp + TEAM_CLIFF);\n        uint256 vestedAmount = (teamAllocated * elapsedTime) / TEAM_VESTING_PERIOD;\n        uint256 teamAmount = vestedAmount - releasedTeamAmount;\n        releasedTeamAmount += teamAmount;\n        require(vestedAmount > 0, \"No tokens available for release\");\n        require(releasedTeamAmount <= teamAllocated,\"max token limit reached\");\n        _mint(TEAM_AND_DEVELOPMENT,teamAmount);\n    }\n    function releaseMarketingTokens() external onlyOwner nonReentrant{\n        uint256 elapsedTime = block.timestamp - marketingStartTimestamp;\n        uint256 vestedAmount = (marketingAllocated * elapsedTime)/MARKETING_VESTING_PERIOD;\n        uint256 marketingAmount = vestedAmount - releasedMarketingAmount;\n        releasedMarketingAmount += marketingAmount;\n        require(vestedAmount > 0,\"no token available for release\");\n        require(releasedMarketingAmount <= marketingAllocated,\"max token imit reached\");\n        _mint(COMMUNITY_GROWTH_AND_MARKETING,marketingAmount);\n\n    }\n\n    function initializeRewardParameters(\n        uint256 _initialRewardRate,\n        address _stablecoin\n    ) external onlyOwner {\n        rewardRate = _initialRewardRate;\n        stablecoin = IERC20(_stablecoin);\n        lastHalvingTime = block.timestamp;\n        emit RewardParametersInitialized(_initialRewardRate, _stablecoin);\n    }\n\n    // ** Annual Reward Halving **\n    function halveRewards() external {\n        require(\n            block.timestamp >= lastHalvingTime + HALVING_PERIOD,\n            \"Halving not due yet\"\n        );\n\n        rewardRate = rewardRate / 2;\n        lastHalvingTime = block.timestamp;\n\n        emit RewardHalved(rewardRate);\n    }\n\n    // // ** Treasury Buy-Back Program **\n    // function buyBackAndBurn(uint256 stablecoinAmount) external onlyOwner {\n    //     // Transfer stablecoin to external address for token purchase\n    //     stablecoin.transferFrom(address(this), msg.sender, stablecoinAmount);\n    //     // Logic for token purchase goes here\n\n    //     uint256 xeroBalance = balanceOf(address(this)); // Check acquired token balance\n    //     _burn(address(this), xeroBalance); // Burn acquired tokens\n\n    //     emit BuyBackAndBurn(xeroBalance);\n    // }\n\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal override {\n        uint256 taxAmount = (amount *\n            (recipient == address(this) ? sellTax : buyTax)) / 100;\n        super._transfer(sender, recipient, amount - taxAmount);\n        if (taxAmount > 0) {\n            _burn(sender, taxAmount);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 295,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x1821a0e3715b9e068355dd4560f8cedf382c4f96f2d4d3e8dfaa8206d7b393fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d21d325269a45a1bd25c1b00c4d51b34c9574f1874eb6026504fbe88e838511\",\"dweb:/ipfs/QmWBPFEnQ43J29f1ZcMmsz3wUcT9dqvWeoikRhY5SVvWoZ\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/XORA.sol": {
				"XORA": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pairLiquidityPool",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "BuyBackAndBurn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newRewardRate",
									"type": "uint256"
								}
							],
							"name": "RewardHalved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "initialRewardRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "stablecoin",
									"type": "address"
								}
							],
							"name": "RewardParametersInitialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensBurned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "COMMUNITY_GROWTH_AND_MARKETING",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "HALVING_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ICO_ALLOCATION",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INITIAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LIQUIDITY_POOL",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MARKETING_INITIAL_UNLOCK",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PLAY_TO_EARN",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "STRADEGIC_RESERVE",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TEAM_AND_DEVELOPMENT",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyTax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "halveRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_initialRewardRate",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_stablecoin",
									"type": "address"
								}
							],
							"name": "initializeRewardParameters",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastHalvingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketingAllocated",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "releaseMarketingTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "releaseTeamTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "releasedMarketingAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "releasedTeamAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellTax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stablecoin",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "teamAllocated",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/XORA.sol\":231:5509  contract XORA is ERC20, Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/XORA.sol\":412:413  1 */\n  0x01\n    /* \"contracts/XORA.sol\":388:413  uint256 public buyTax = 1 */\n  0x08\n  sstore\n    /* \"contracts/XORA.sol\":444:445  1 */\n  0x01\n    /* \"contracts/XORA.sol\":419:445  uint256 public sellTax = 1 */\n  0x09\n  sstore\n    /* \"contracts/XORA.sol\":741:763  100_000_000 * (10**18) */\n  0x52b7d2dcc80cd2e4000000\n    /* \"contracts/XORA.sol\":714:763  uint256  TEAM_TOTAL_FUND = 100_000_000 * (10**18) */\n  0x0d\n  sstore\n    /* \"contracts/XORA.sol\":898:920  100_000_000 * (10**18) */\n  0x52b7d2dcc80cd2e4000000\n    /* \"contracts/XORA.sol\":867:920  uint256 public teamAllocated = 100_000_000 * (10**18) */\n  0x0f\n  sstore\n    /* \"contracts/XORA.sol\":1001:1013  12 * 30 days */\n  0x01da9c00\n    /* \"contracts/XORA.sol\":965:1013  uint256  MARKETING_VESTING_PERIOD = 12 * 30 days */\n  0x11\n  sstore\n    /* \"contracts/XORA.sol\":1056:1077  75_000_000 * (10**18) */\n  0x3e09de2596099e2b000000\n    /* \"contracts/XORA.sol\":1020:1077  uint256 public marketingAllocated = 75_000_000 * (10**18) */\n  0x12\n  sstore\n    /* \"contracts/XORA.sol\":2059:2682  constructor(address _pairLiquidityPool) Ownable(msg.sender) ERC20(\"XORA Token\", \"XORA\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/XORA.sol\":2107:2117  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x584f524120546f6b656e00000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x584f524100000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_11\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_13\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_17)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/XORA.sol\":2157:2200  _mint(PLAY_TO_EARN, 450_000_000 * (10**18)) */\n  tag_20\n    /* \"contracts/XORA.sol\":1414:1456  0xdD870fA1b7C4700F2BD7f44238821C26f7392148 */\n  0xdd870fa1b7c4700f2bd7f44238821c26f7392148\n    /* \"contracts/XORA.sol\":2177:2199  450_000_000 * (10**18) */\n  0x01743b34e18439b502000000\n    /* \"contracts/XORA.sol\":2157:2162  _mint */\n  shl(0x20, tag_21)\n    /* \"contracts/XORA.sol\":2157:2200  _mint(PLAY_TO_EARN, 450_000_000 * (10**18)) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"contracts/XORA.sol\":2216:2265  _mint(_pairLiquidityPool, 150_000_000 * (10**18)) */\n  tag_22\n    /* \"contracts/XORA.sol\":2222:2240  _pairLiquidityPool */\n  dup2\n    /* \"contracts/XORA.sol\":2242:2264  150_000_000 * (10**18) */\n  0x7c13bc4b2c133c56000000\n    /* \"contracts/XORA.sol\":2216:2221  _mint */\n  shl(0x20, tag_21)\n    /* \"contracts/XORA.sol\":2216:2265  _mint(_pairLiquidityPool, 150_000_000 * (10**18)) */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"contracts/XORA.sol\":2351:2424  _mint(COMMUNITY_GROWTH_AND_MARKETING, (100_000_000 * (10**18) * 25 )/100) */\n  tag_23\n    /* \"contracts/XORA.sol\":1727:1769  0x14723A09ACff6D2A60DcdF7aA4AFf308FDDC160C */\n  0x14723a09acff6d2a60dcdf7aa4aff308fddc160c\n    /* \"contracts/XORA.sol\":2389:2423  (100_000_000 * (10**18) * 25 )/100 */\n  0x14adf4b7320334b9000000\n    /* \"contracts/XORA.sol\":2351:2356  _mint */\n  shl(0x20, tag_21)\n    /* \"contracts/XORA.sol\":2351:2424  _mint(COMMUNITY_GROWTH_AND_MARKETING, (100_000_000 * (10**18) * 25 )/100) */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"contracts/XORA.sol\":2462:2510  _mint(STRADEGIC_RESERVE, 100_000_000 * (10**18)) */\n  tag_24\n    /* \"contracts/XORA.sol\":1827:1869  0xCA35b7d915458EF540aDe6068dFe2F44E8fa733c */\n  0xca35b7d915458ef540ade6068dfe2f44e8fa733c\n    /* \"contracts/XORA.sol\":2487:2509  100_000_000 * (10**18) */\n  0x52b7d2dcc80cd2e4000000\n    /* \"contracts/XORA.sol\":2462:2467  _mint */\n  shl(0x20, tag_21)\n    /* \"contracts/XORA.sol\":2462:2510  _mint(STRADEGIC_RESERVE, 100_000_000 * (10**18)) */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"contracts/XORA.sol\":2526:2571  _mint(ICO_ALLOCATION, 100_000_000 * (10**18)) */\n  tag_25\n    /* \"contracts/XORA.sol\":1924:1966  0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC */\n  0x0a098eda01ce92ff4a4ccb7a4fffb5a43ebc70dc\n    /* \"contracts/XORA.sol\":2548:2570  100_000_000 * (10**18) */\n  0x52b7d2dcc80cd2e4000000\n    /* \"contracts/XORA.sol\":2526:2531  _mint */\n  shl(0x20, tag_21)\n    /* \"contracts/XORA.sol\":2526:2571  _mint(ICO_ALLOCATION, 100_000_000 * (10**18)) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"contracts/XORA.sol\":2609:2624  block.timestamp */\n  timestamp\n    /* \"contracts/XORA.sol\":2588:2606  teamStartTimestamp */\n  0x0c\n    /* \"contracts/XORA.sol\":2588:2624  teamStartTimestamp = block.timestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/XORA.sol\":2660:2675  block.timestamp */\n  timestamp\n    /* \"contracts/XORA.sol\":2634:2657  marketingStartTimestamp */\n  0x0e\n    /* \"contracts/XORA.sol\":2634:2675  marketingStartTimestamp = block.timestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/XORA.sol\":2059:2682  constructor(address _pairLiquidityPool) Ownable(msg.sender) ERC20(\"XORA Token\", \"XORA\") {... */\n  pop\n    /* \"contracts/XORA.sol\":231:5509  contract XORA is ERC20, Ownable, ReentrancyGuard {... */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7466:7674  function _mint(address account, uint256 value) internal {... */\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7555:7556  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7536:7557  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7536:7543  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7536:7557  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7532:7623  if (account == address(0)) {... */\n  tag_29\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7609:7610  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7580:7612  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_30\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_30:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7532:7623  if (account == address(0)) {... */\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7632:7667  _update(address(0), account, value) */\n  tag_31\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7648:7649  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7652:7659  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7661:7666  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7632:7639  _update */\n  shl(0x20, tag_32)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7632:7667  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7466:7674  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6016:7123  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6121:6122  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6105:6123  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6105:6109  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6105:6123  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6101:6641  if (from == address(0)) {... */\n  tag_34\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6257:6262  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6241:6253  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6241:6262  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_35\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6101:6641  if (from == address(0)) {... */\n  jump(tag_37)\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6293:6312  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6324  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6330  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6325:6329  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6330  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6293:6330  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6362:6367  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6348:6359  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6348:6367  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6344:6459  if (fromBalance < value) {... */\n  iszero\n  tag_38\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6419:6423  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6425:6436  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6438:6443  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6394:6444  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_39\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_39:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6344:6459  if (fromBalance < value) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6611:6616  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6597:6608  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6597:6616  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6588  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6594  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6593  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6594  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6616  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6279:6641  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6101:6641  if (from == address(0)) {... */\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6669:6670  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6655:6671  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6655:6657  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6655:6671  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6651:7076  if (to == address(0)) {... */\n  tag_41\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6839  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6818:6830  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6818:6839  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6651:7076  if (to == address(0)) {... */\n  jump(tag_42)\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7046:7051  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7029:7038  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7029:7042  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7039:7041  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7029:7042  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7029:7051  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6651:7076  if (to == address(0)) {... */\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7106:7108  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7091:7116  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7100:7104  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7091:7116  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7110:7115  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7091:7116  Transfer(from, to, value) */\n  mload(0x40)\n  tag_43\n  swap2\n  swap1\n  tag_44\n  jump\t// in\ntag_43:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6016:7123  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_46:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_48:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_49:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_81\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_48\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_50:\n    /* \"#utility.yul\":641:665   */\n  tag_83\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_49\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_84\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_84:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_51:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_86\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_50\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_89\n  tag_46\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":932:1051   */\ntag_88:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_90\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_51\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_52:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_53:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_54:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_55:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_95\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_95:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_96\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_97\n  tag_54\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":1909:1993   */\ntag_96:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_56:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_57:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_58:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_59:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_102\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_58\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2624:2663   */\n  tag_103\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_58\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_60:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_61:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_62:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_107\n    /* \"#utility.yul\":3013:3047   */\n  tag_108\n    /* \"#utility.yul\":3022:3046   */\n  tag_109\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_60\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3013:3047   */\n  tag_61\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":2995:3048   */\n  tag_60\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_63:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_64:\n    /* \"#utility.yul\":3251:3290   */\n  tag_112\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_62\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":3312:3403   */\n  tag_113\n    /* \"#utility.yul\":3361:3402   */\n  tag_114\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_63\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_59\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_65:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_66:\n    /* \"#utility.yul\":3572:3604   */\n  tag_117\n  tag_65\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":3613:3678   */\n  tag_118\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_64\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_67:\n    /* \"#utility.yul\":3750:3870   */\ntag_120:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_123\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_66\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_120)\ntag_122:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_68:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_126\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_56\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":4101:4130   */\n  tag_127\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_57\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_128:\n    /* \"#utility.yul\":4328:4408   */\n  tag_129\n    /* \"#utility.yul\":4384:4406   */\n  tag_130\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_57\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_67\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_125:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_69:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_70:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_133\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_69\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_71:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_135\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_70\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_10:\n    /* \"#utility.yul\":5145:5182   */\n  tag_137\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_52\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_139\n  tag_53\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":5233:5289   */\ntag_138:\n    /* \"#utility.yul\":5313:5351   */\n  tag_140\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_55\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":5398:5465   */\n  tag_141\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_68\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_143\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_144:\n    /* \"#utility.yul\":6339:6406   */\n  tag_145\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_71\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_142)\n    /* \"#utility.yul\":5560:6178   */\ntag_143:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_146\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_56\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_147:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_149\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_147)\ntag_149:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_150\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_151\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_70\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_150:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_142:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_72:\n    /* \"#utility.yul\":6516:6540   */\n  tag_153\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_49\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_15:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_155\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_72\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6781:6961   */\ntag_73:\n    /* \"#utility.yul\":6829:6906   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6826:6827   */\n  0x00\n    /* \"#utility.yul\":6819:6907   */\n  mstore\n    /* \"#utility.yul\":6926:6930   */\n  0x11\n    /* \"#utility.yul\":6923:6924   */\n  0x04\n    /* \"#utility.yul\":6916:6931   */\n  mstore\n    /* \"#utility.yul\":6950:6954   */\n  0x24\n    /* \"#utility.yul\":6947:6948   */\n  0x00\n    /* \"#utility.yul\":6940:6955   */\n  revert\n    /* \"#utility.yul\":6967:7158   */\ntag_36:\n    /* \"#utility.yul\":7007:7010   */\n  0x00\n    /* \"#utility.yul\":7026:7046   */\n  tag_158\n    /* \"#utility.yul\":7044:7045   */\n  dup3\n    /* \"#utility.yul\":7026:7046   */\n  tag_60\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":7021:7046   */\n  swap2\n  pop\n    /* \"#utility.yul\":7060:7080   */\n  tag_159\n    /* \"#utility.yul\":7078:7079   */\n  dup4\n    /* \"#utility.yul\":7060:7080   */\n  tag_60\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":7055:7080   */\n  swap3\n  pop\n    /* \"#utility.yul\":7103:7104   */\n  dup3\n    /* \"#utility.yul\":7100:7101   */\n  dup3\n    /* \"#utility.yul\":7096:7105   */\n  add\n    /* \"#utility.yul\":7089:7105   */\n  swap1\n  pop\n    /* \"#utility.yul\":7124:7127   */\n  dup1\n    /* \"#utility.yul\":7121:7122   */\n  dup3\n    /* \"#utility.yul\":7118:7128   */\n  gt\n    /* \"#utility.yul\":7115:7151   */\n  iszero\n  tag_160\n  jumpi\n    /* \"#utility.yul\":7131:7149   */\n  tag_161\n  tag_73\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":7115:7151   */\ntag_160:\n    /* \"#utility.yul\":6967:7158   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7164:7282   */\ntag_74:\n    /* \"#utility.yul\":7251:7275   */\n  tag_163\n    /* \"#utility.yul\":7269:7274   */\n  dup2\n    /* \"#utility.yul\":7251:7275   */\n  tag_60\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":7246:7249   */\n  dup3\n    /* \"#utility.yul\":7239:7276   */\n  mstore\n    /* \"#utility.yul\":7164:7282   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7288:7730   */\ntag_40:\n    /* \"#utility.yul\":7437:7441   */\n  0x00\n    /* \"#utility.yul\":7475:7477   */\n  0x60\n    /* \"#utility.yul\":7464:7473   */\n  dup3\n    /* \"#utility.yul\":7460:7478   */\n  add\n    /* \"#utility.yul\":7452:7478   */\n  swap1\n  pop\n    /* \"#utility.yul\":7488:7559   */\n  tag_165\n    /* \"#utility.yul\":7556:7557   */\n  0x00\n    /* \"#utility.yul\":7545:7554   */\n  dup4\n    /* \"#utility.yul\":7541:7558   */\n  add\n    /* \"#utility.yul\":7532:7538   */\n  dup7\n    /* \"#utility.yul\":7488:7559   */\n  tag_72\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":7569:7641   */\n  tag_166\n    /* \"#utility.yul\":7637:7639   */\n  0x20\n    /* \"#utility.yul\":7626:7635   */\n  dup4\n    /* \"#utility.yul\":7622:7640   */\n  add\n    /* \"#utility.yul\":7613:7619   */\n  dup6\n    /* \"#utility.yul\":7569:7641   */\n  tag_74\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":7651:7723   */\n  tag_167\n    /* \"#utility.yul\":7719:7721   */\n  0x40\n    /* \"#utility.yul\":7708:7717   */\n  dup4\n    /* \"#utility.yul\":7704:7722   */\n  add\n    /* \"#utility.yul\":7695:7701   */\n  dup5\n    /* \"#utility.yul\":7651:7723   */\n  tag_74\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":7288:7730   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7736:7958   */\ntag_44:\n    /* \"#utility.yul\":7829:7833   */\n  0x00\n    /* \"#utility.yul\":7867:7869   */\n  0x20\n    /* \"#utility.yul\":7856:7865   */\n  dup3\n    /* \"#utility.yul\":7852:7870   */\n  add\n    /* \"#utility.yul\":7844:7870   */\n  swap1\n  pop\n    /* \"#utility.yul\":7880:7951   */\n  tag_169\n    /* \"#utility.yul\":7948:7949   */\n  0x00\n    /* \"#utility.yul\":7937:7946   */\n  dup4\n    /* \"#utility.yul\":7933:7950   */\n  add\n    /* \"#utility.yul\":7924:7930   */\n  dup5\n    /* \"#utility.yul\":7880:7951   */\n  tag_74\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":7736:7958   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/XORA.sol\":231:5509  contract XORA is ERC20, Ownable, ReentrancyGuard {... */\ntag_26:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/XORA.sol\":231:5509  contract XORA is ERC20, Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xdc31adee\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xdc31adee\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xdf7f989f\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xe9cbd822\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_36\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0xa9059cbb\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xb0a65b3e\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xba115cb6\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xcc1776d3\n      eq\n      tag_31\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x926165d7\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa6f59846\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x715018a6\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x7b0a47ee\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8b887e7e\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x8cbb6df7\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x2cca9dfd\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x3adde9c1\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x3adde9c1\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x4f0dbaf2\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x4f7041a5\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x56bf536c\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x2cca9dfd\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x2ff2e9dc\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x329430ca\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x18160ddd\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1f6722b6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23256627\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0733f92b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x14c411c7\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/XORA.sol\":1083:1121  uint256 public releasedMarketingAmount */\n    tag_4:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/XORA.sol\":2688:3330  function releaseTeamTokens() external onlyOwner nonReentrant {... */\n    tag_6:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/XORA.sol\":1020:1077  uint256 public marketingAllocated = 75_000_000 * (10**18) */\n    tag_8:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/XORA.sol\":807:860  uint256 public constant MARKETING_INITIAL_UNLOCK = 25 */\n    tag_9:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_10:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/XORA.sol\":1462:1553  address public constant LIQUIDITY_POOL =... */\n    tag_11:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/XORA.sol\":286:351  uint256 public constant INITIAL_SUPPLY = 1_000_000_000 * (10**18) */\n    tag_12:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_13:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/XORA.sol\":867:920  uint256 public teamAllocated = 100_000_000 * (10**18) */\n    tag_14:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/XORA.sol\":518:567  uint256 public constant HALVING_PERIOD = 365 days */\n    tag_15:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/XORA.sol\":1367:1456  address public constant PLAY_TO_EARN =... */\n    tag_16:\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/XORA.sol\":388:413  uint256 public buyTax = 1 */\n    tag_17:\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/XORA.sol\":1775:1869  address public constant STRADEGIC_RESERVE =... */\n    tag_18:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      tag_103\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_20:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      stop\n        /* \"contracts/XORA.sol\":487:512  uint256 public rewardRate */\n    tag_21:\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/XORA.sol\":4300:4588  function halveRewards() external {... */\n    tag_22:\n      tag_110\n      tag_111\n      jump\t// in\n    tag_110:\n      stop\n        /* \"contracts/XORA.sol\":451:481  uint256 public lastHalvingTime */\n    tag_23:\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_24:\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/XORA.sol\":3925:4259  function initializeRewardParameters(... */\n    tag_25:\n      tag_118\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      tag_121\n      jump\t// in\n    tag_118:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_26:\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/XORA.sol\":926:959  uint256 public releasedTeamAmount */\n    tag_27:\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      tag_127\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_28:\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/XORA.sol\":1875:1966  address public constant ICO_ALLOCATION =... */\n    tag_29:\n      tag_132\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/XORA.sol\":1662:1769  address public constant COMMUNITY_GROWTH_AND_MARKETING =... */\n    tag_30:\n      tag_135\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/XORA.sol\":419:445  uint256 public sellTax = 1 */\n    tag_31:\n      tag_138\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/XORA.sol\":3335:3919  function releaseMarketingTokens() external onlyOwner nonReentrant{... */\n    tag_32:\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_33:\n      tag_143\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      tag_146\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      tag_147\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/XORA.sol\":1559:1656  address public constant TEAM_AND_DEVELOPMENT =... */\n    tag_34:\n      tag_148\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/XORA.sol\":357:381  IERC20 public stablecoin */\n    tag_35:\n      tag_151\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      tag_153\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_36:\n      tag_155\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n    tag_155:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_161\n      swap1\n      tag_160\n      jump\t// in\n    tag_161:\n      dup1\n      iszero\n      tag_162\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_163\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_162)\n    tag_163:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_164:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_164\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/XORA.sol\":1083:1121  uint256 public releasedMarketingAmount */\n    tag_49:\n      sload(0x13)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/XORA.sol\":2688:3330  function releaseTeamTokens() external onlyOwner nonReentrant {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_174\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_175\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_174:\n        /* \"contracts/XORA.sol\":638:650  18 * 30 days */\n      0x02c7ea00\n        /* \"contracts/XORA.sol\":2786:2804  teamStartTimestamp */\n      sload(0x0c)\n        /* \"contracts/XORA.sol\":2786:2817  teamStartTimestamp + TEAM_CLIFF */\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"contracts/XORA.sol\":2767:2782  block.timestamp */\n      timestamp\n        /* \"contracts/XORA.sol\":2767:2817  block.timestamp >= teamStartTimestamp + TEAM_CLIFF */\n      lt\n      iszero\n        /* \"contracts/XORA.sol\":2759:2852  require(block.timestamp >= teamStartTimestamp + TEAM_CLIFF, \"Team vesting cliff not reached\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"contracts/XORA.sol\":2862:2881  uint256 elapsedTime */\n      0x00\n        /* \"contracts/XORA.sol\":638:650  18 * 30 days */\n      0x02c7ea00\n        /* \"contracts/XORA.sol\":2903:2921  teamStartTimestamp */\n      sload(0x0c)\n        /* \"contracts/XORA.sol\":2903:2934  teamStartTimestamp + TEAM_CLIFF */\n      tag_182\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_182:\n        /* \"contracts/XORA.sol\":2884:2899  block.timestamp */\n      timestamp\n        /* \"contracts/XORA.sol\":2884:2935  block.timestamp - (teamStartTimestamp + TEAM_CLIFF) */\n      tag_183\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n        /* \"contracts/XORA.sol\":2862:2935  uint256 elapsedTime = block.timestamp - (teamStartTimestamp + TEAM_CLIFF) */\n      swap1\n      pop\n        /* \"contracts/XORA.sol\":2945:2965  uint256 vestedAmount */\n      0x00\n        /* \"contracts/XORA.sol\":696:708  4 * 365 days */\n      0x0784ce00\n        /* \"contracts/XORA.sol\":2985:2996  elapsedTime */\n      dup3\n        /* \"contracts/XORA.sol\":2969:2982  teamAllocated */\n      sload(0x0f)\n        /* \"contracts/XORA.sol\":2969:2996  teamAllocated * elapsedTime */\n      tag_185\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"contracts/XORA.sol\":2968:3019  (teamAllocated * elapsedTime) / TEAM_VESTING_PERIOD */\n      tag_187\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"contracts/XORA.sol\":2945:3019  uint256 vestedAmount = (teamAllocated * elapsedTime) / TEAM_VESTING_PERIOD */\n      swap1\n      pop\n        /* \"contracts/XORA.sol\":3029:3047  uint256 teamAmount */\n      0x00\n        /* \"contracts/XORA.sol\":3065:3083  releasedTeamAmount */\n      sload(0x10)\n        /* \"contracts/XORA.sol\":3050:3062  vestedAmount */\n      dup3\n        /* \"contracts/XORA.sol\":3050:3083  vestedAmount - releasedTeamAmount */\n      tag_189\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_189:\n        /* \"contracts/XORA.sol\":3029:3083  uint256 teamAmount = vestedAmount - releasedTeamAmount */\n      swap1\n      pop\n        /* \"contracts/XORA.sol\":3115:3125  teamAmount */\n      dup1\n        /* \"contracts/XORA.sol\":3093:3111  releasedTeamAmount */\n      0x10\n      0x00\n        /* \"contracts/XORA.sol\":3093:3125  releasedTeamAmount += teamAmount */\n      dup3\n      dup3\n      sload\n      tag_190\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_190:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/XORA.sol\":3158:3159  0 */\n      0x00\n        /* \"contracts/XORA.sol\":3143:3155  vestedAmount */\n      dup3\n        /* \"contracts/XORA.sol\":3143:3159  vestedAmount > 0 */\n      gt\n        /* \"contracts/XORA.sol\":3135:3195  require(vestedAmount > 0, \"No tokens available for release\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"contracts/XORA.sol\":3235:3248  teamAllocated */\n      sload(0x0f)\n        /* \"contracts/XORA.sol\":3213:3231  releasedTeamAmount */\n      sload(0x10)\n        /* \"contracts/XORA.sol\":3213:3248  releasedTeamAmount <= teamAllocated */\n      gt\n      iszero\n        /* \"contracts/XORA.sol\":3205:3275  require(releasedTeamAmount <= teamAllocated,\"max token limit reached\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"contracts/XORA.sol\":3285:3323  _mint(TEAM_AND_DEVELOPMENT,teamAmount) */\n      tag_197\n        /* \"contracts/XORA.sol\":1614:1656  0x4B0897b0513fdC7C541B6d9D7E929C4e5364D2dB */\n      0x4b0897b0513fdc7c541b6d9d7e929c4e5364d2db\n        /* \"contracts/XORA.sol\":3312:3322  teamAmount */\n      dup3\n        /* \"contracts/XORA.sol\":3285:3290  _mint */\n      tag_198\n        /* \"contracts/XORA.sol\":3285:3323  _mint(TEAM_AND_DEVELOPMENT,teamAmount) */\n      jump\t// in\n    tag_197:\n        /* \"contracts/XORA.sol\":2749:3330  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_199\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_200\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_199:\n        /* \"contracts/XORA.sol\":2688:3330  function releaseTeamTokens() external onlyOwner nonReentrant {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/XORA.sol\":1020:1077  uint256 public marketingAllocated = 75_000_000 * (10**18) */\n    tag_64:\n      sload(0x12)\n      dup2\n      jump\t// out\n        /* \"contracts/XORA.sol\":807:860  uint256 public constant MARKETING_INITIAL_UNLOCK = 25 */\n    tag_67:\n        /* \"contracts/XORA.sol\":858:860  25 */\n      0x19\n        /* \"contracts/XORA.sol\":807:860  uint256 public constant MARKETING_INITIAL_UNLOCK = 25 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_203\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_204\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_205\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/XORA.sol\":1462:1553  address public constant LIQUIDITY_POOL =... */\n    tag_75:\n        /* \"contracts/XORA.sol\":1511:1553  0x583031D1113aD414F02576BD6afaBfb302140225 */\n      0x583031d1113ad414f02576bd6afabfb302140225\n        /* \"contracts/XORA.sol\":1462:1553  address public constant LIQUIDITY_POOL =... */\n      dup2\n      jump\t// out\n        /* \"contracts/XORA.sol\":286:351  uint256 public constant INITIAL_SUPPLY = 1_000_000_000 * (10**18) */\n    tag_79:\n        /* \"contracts/XORA.sol\":327:351  1_000_000_000 * (10**18) */\n      0x033b2e3c9fd0803ce8000000\n        /* \"contracts/XORA.sol\":286:351  uint256 public constant INITIAL_SUPPLY = 1_000_000_000 * (10**18) */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/XORA.sol\":867:920  uint256 public teamAllocated = 100_000_000 * (10**18) */\n    tag_86:\n      sload(0x0f)\n      dup2\n      jump\t// out\n        /* \"contracts/XORA.sol\":518:567  uint256 public constant HALVING_PERIOD = 365 days */\n    tag_89:\n        /* \"contracts/XORA.sol\":559:567  365 days */\n      0x01e13380\n        /* \"contracts/XORA.sol\":518:567  uint256 public constant HALVING_PERIOD = 365 days */\n      dup2\n      jump\t// out\n        /* \"contracts/XORA.sol\":1367:1456  address public constant PLAY_TO_EARN =... */\n    tag_92:\n        /* \"contracts/XORA.sol\":1414:1456  0xdD870fA1b7C4700F2BD7f44238821C26f7392148 */\n      0xdd870fa1b7c4700f2bd7f44238821c26f7392148\n        /* \"contracts/XORA.sol\":1367:1456  address public constant PLAY_TO_EARN =... */\n      dup2\n      jump\t// out\n        /* \"contracts/XORA.sol\":388:413  uint256 public buyTax = 1 */\n    tag_95:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/XORA.sol\":1775:1869  address public constant STRADEGIC_RESERVE =... */\n    tag_98:\n        /* \"contracts/XORA.sol\":1827:1869  0xCA35b7d915458EF540aDe6068dFe2F44E8fa733c */\n      0xca35b7d915458ef540ade6068dfe2f44e8fa733c\n        /* \"contracts/XORA.sol\":1775:1869  address public constant STRADEGIC_RESERVE =... */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_211\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_214\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/XORA.sol\":487:512  uint256 public rewardRate */\n    tag_108:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"contracts/XORA.sol\":4300:4588  function halveRewards() external {... */\n    tag_111:\n        /* \"contracts/XORA.sol\":559:567  365 days */\n      0x01e13380\n        /* \"contracts/XORA.sol\":4383:4398  lastHalvingTime */\n      sload(0x0a)\n        /* \"contracts/XORA.sol\":4383:4415  lastHalvingTime + HALVING_PERIOD */\n      tag_216\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_216:\n        /* \"contracts/XORA.sol\":4364:4379  block.timestamp */\n      timestamp\n        /* \"contracts/XORA.sol\":4364:4415  block.timestamp >= lastHalvingTime + HALVING_PERIOD */\n      lt\n      iszero\n        /* \"contracts/XORA.sol\":4343:4460  require(... */\n      tag_217\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n        /* \"contracts/XORA.sol\":4497:4498  2 */\n      0x02\n        /* \"contracts/XORA.sol\":4484:4494  rewardRate */\n      sload(0x0b)\n        /* \"contracts/XORA.sol\":4484:4498  rewardRate / 2 */\n      tag_220\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_220:\n        /* \"contracts/XORA.sol\":4471:4481  rewardRate */\n      0x0b\n        /* \"contracts/XORA.sol\":4471:4498  rewardRate = rewardRate / 2 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/XORA.sol\":4526:4541  block.timestamp */\n      timestamp\n        /* \"contracts/XORA.sol\":4508:4523  lastHalvingTime */\n      0x0a\n        /* \"contracts/XORA.sol\":4508:4541  lastHalvingTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/XORA.sol\":4557:4581  RewardHalved(rewardRate) */\n      0xf92b4d3a8d8ba77170dd5cf6b65260191092093f924263a88c3c60dd8495f091\n        /* \"contracts/XORA.sol\":4570:4580  rewardRate */\n      sload(0x0b)\n        /* \"contracts/XORA.sol\":4557:4581  RewardHalved(rewardRate) */\n      mload(0x40)\n      tag_221\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/XORA.sol\":4300:4588  function halveRewards() external {... */\n      jump\t// out\n        /* \"contracts/XORA.sol\":451:481  uint256 public lastHalvingTime */\n    tag_113:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/XORA.sol\":3925:4259  function initializeRewardParameters(... */\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_224\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_224:\n        /* \"contracts/XORA.sol\":4074:4092  _initialRewardRate */\n      dup2\n        /* \"contracts/XORA.sol\":4061:4071  rewardRate */\n      0x0b\n        /* \"contracts/XORA.sol\":4061:4092  rewardRate = _initialRewardRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/XORA.sol\":4122:4133  _stablecoin */\n      dup1\n        /* \"contracts/XORA.sol\":4102:4112  stablecoin */\n      0x07\n      0x00\n        /* \"contracts/XORA.sol\":4102:4134  stablecoin = IERC20(_stablecoin) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/XORA.sol\":4162:4177  block.timestamp */\n      timestamp\n        /* \"contracts/XORA.sol\":4144:4159  lastHalvingTime */\n      0x0a\n        /* \"contracts/XORA.sol\":4144:4177  lastHalvingTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/XORA.sol\":4192:4252  RewardParametersInitialized(_initialRewardRate, _stablecoin) */\n      0xde2d0064b82669942e6a9cff523014473c366efc3cf147b14e0b1f4cbecc4bc8\n        /* \"contracts/XORA.sol\":4220:4238  _initialRewardRate */\n      dup3\n        /* \"contracts/XORA.sol\":4240:4251  _stablecoin */\n      dup3\n        /* \"contracts/XORA.sol\":4192:4252  RewardParametersInitialized(_initialRewardRate, _stablecoin) */\n      mload(0x40)\n      tag_226\n      swap3\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/XORA.sol\":3925:4259  function initializeRewardParameters(... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_229\n      swap1\n      tag_160\n      jump\t// in\n    tag_229:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_230\n      swap1\n      tag_160\n      jump\t// in\n    tag_230:\n      dup1\n      iszero\n      tag_231\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_232\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_231)\n    tag_232:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_233:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_233\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_231:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/XORA.sol\":926:959  uint256 public releasedTeamAmount */\n    tag_126:\n      sload(0x10)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/XORA.sol\":1875:1966  address public constant ICO_ALLOCATION =... */\n    tag_133:\n        /* \"contracts/XORA.sol\":1924:1966  0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC */\n      0x0a098eda01ce92ff4a4ccb7a4fffb5a43ebc70dc\n        /* \"contracts/XORA.sol\":1875:1966  address public constant ICO_ALLOCATION =... */\n      dup2\n      jump\t// out\n        /* \"contracts/XORA.sol\":1662:1769  address public constant COMMUNITY_GROWTH_AND_MARKETING =... */\n    tag_136:\n        /* \"contracts/XORA.sol\":1727:1769  0x14723A09ACff6D2A60DcdF7aA4AFf308FDDC160C */\n      0x14723a09acff6d2a60dcdf7aa4aff308fddc160c\n        /* \"contracts/XORA.sol\":1662:1769  address public constant COMMUNITY_GROWTH_AND_MARKETING =... */\n      dup2\n      jump\t// out\n        /* \"contracts/XORA.sol\":419:445  uint256 public sellTax = 1 */\n    tag_139:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/XORA.sol\":3335:3919  function releaseMarketingTokens() external onlyOwner nonReentrant{... */\n    tag_142:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_238\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_240\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_175\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_240:\n        /* \"contracts/XORA.sol\":3410:3429  uint256 elapsedTime */\n      0x00\n        /* \"contracts/XORA.sol\":3450:3473  marketingStartTimestamp */\n      sload(0x0e)\n        /* \"contracts/XORA.sol\":3432:3447  block.timestamp */\n      timestamp\n        /* \"contracts/XORA.sol\":3432:3473  block.timestamp - marketingStartTimestamp */\n      tag_242\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_242:\n        /* \"contracts/XORA.sol\":3410:3473  uint256 elapsedTime = block.timestamp - marketingStartTimestamp */\n      swap1\n      pop\n        /* \"contracts/XORA.sol\":3483:3503  uint256 vestedAmount */\n      0x00\n        /* \"contracts/XORA.sol\":3541:3565  MARKETING_VESTING_PERIOD */\n      sload(0x11)\n        /* \"contracts/XORA.sol\":3528:3539  elapsedTime */\n      dup3\n        /* \"contracts/XORA.sol\":3507:3525  marketingAllocated */\n      sload(0x12)\n        /* \"contracts/XORA.sol\":3507:3539  marketingAllocated * elapsedTime */\n      tag_243\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_243:\n        /* \"contracts/XORA.sol\":3506:3565  (marketingAllocated * elapsedTime)/MARKETING_VESTING_PERIOD */\n      tag_244\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_244:\n        /* \"contracts/XORA.sol\":3483:3565  uint256 vestedAmount = (marketingAllocated * elapsedTime)/MARKETING_VESTING_PERIOD */\n      swap1\n      pop\n        /* \"contracts/XORA.sol\":3575:3598  uint256 marketingAmount */\n      0x00\n        /* \"contracts/XORA.sol\":3616:3639  releasedMarketingAmount */\n      sload(0x13)\n        /* \"contracts/XORA.sol\":3601:3613  vestedAmount */\n      dup3\n        /* \"contracts/XORA.sol\":3601:3639  vestedAmount - releasedMarketingAmount */\n      tag_245\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_245:\n        /* \"contracts/XORA.sol\":3575:3639  uint256 marketingAmount = vestedAmount - releasedMarketingAmount */\n      swap1\n      pop\n        /* \"contracts/XORA.sol\":3676:3691  marketingAmount */\n      dup1\n        /* \"contracts/XORA.sol\":3649:3672  releasedMarketingAmount */\n      0x13\n      0x00\n        /* \"contracts/XORA.sol\":3649:3691  releasedMarketingAmount += marketingAmount */\n      dup3\n      dup3\n      sload\n      tag_246\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_246:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/XORA.sol\":3724:3725  0 */\n      0x00\n        /* \"contracts/XORA.sol\":3709:3721  vestedAmount */\n      dup3\n        /* \"contracts/XORA.sol\":3709:3725  vestedAmount > 0 */\n      gt\n        /* \"contracts/XORA.sol\":3701:3759  require(vestedAmount > 0,\"no token available for release\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_247:\n        /* \"contracts/XORA.sol\":3804:3822  marketingAllocated */\n      sload(0x12)\n        /* \"contracts/XORA.sol\":3777:3800  releasedMarketingAmount */\n      sload(0x13)\n        /* \"contracts/XORA.sol\":3777:3822  releasedMarketingAmount <= marketingAllocated */\n      gt\n      iszero\n        /* \"contracts/XORA.sol\":3769:3848  require(releasedMarketingAmount <= marketingAllocated,\"max token imit reached\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_251\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_250:\n        /* \"contracts/XORA.sol\":3858:3911  _mint(COMMUNITY_GROWTH_AND_MARKETING,marketingAmount) */\n      tag_253\n        /* \"contracts/XORA.sol\":1727:1769  0x14723A09ACff6D2A60DcdF7aA4AFf308FDDC160C */\n      0x14723a09acff6d2a60dcdf7aa4aff308fddc160c\n        /* \"contracts/XORA.sol\":3895:3910  marketingAmount */\n      dup3\n        /* \"contracts/XORA.sol\":3858:3863  _mint */\n      tag_198\n        /* \"contracts/XORA.sol\":3858:3911  _mint(COMMUNITY_GROWTH_AND_MARKETING,marketingAmount) */\n      jump\t// in\n    tag_253:\n        /* \"contracts/XORA.sol\":3400:3919  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_254\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_200\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_254:\n        /* \"contracts/XORA.sol\":3335:3919  function releaseMarketingTokens() external onlyOwner nonReentrant{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/XORA.sol\":1559:1656  address public constant TEAM_AND_DEVELOPMENT =... */\n    tag_149:\n        /* \"contracts/XORA.sol\":1614:1656  0x4B0897b0513fdC7C541B6d9D7E929C4e5364D2dB */\n      0x4b0897b0513fdc7c541b6d9d7e929c4e5364d2db\n        /* \"contracts/XORA.sol\":1559:1656  address public constant TEAM_AND_DEVELOPMENT =... */\n      dup2\n      jump\t// out\n        /* \"contracts/XORA.sol\":357:381  IERC20 public stablecoin */\n    tag_152:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_257\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_261\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_214\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8734:8862  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8818:8855  _approve(owner, spender, value, true) */\n      tag_264\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8827:8832  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8834:8841  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8843:8848  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8850:8854  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8818:8826  _approve */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8818:8855  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8734:8862  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_267\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_268\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_269\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_270\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_273\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_274\n      swap1\n      tag_275\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_273:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7466:7674  function _mint(address account, uint256 value) internal {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7555:7556  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7536:7557  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7536:7543  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7536:7557  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7532:7623  if (account == address(0)) {... */\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7609:7610  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7580:7612  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7532:7623  if (account == address(0)) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7632:7667  _update(address(0), account, value) */\n      tag_279\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7648:7649  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7652:7659  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7661:7666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7632:7639  _update */\n      tag_280\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7632:7667  _update(address(0), account, value) */\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7466:7674  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10423:10900  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10546  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10549:10574  allowance(owner, spender) */\n      tag_283\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10559:10564  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10566:10573  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10549:10558  allowance */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10549:10574  allowance(owner, spender) */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10574  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10608:10625  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10588:10604  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10588:10625  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10584:10894  if (currentAllowance != type(uint256).max) {... */\n      tag_284\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10664:10669  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10645:10661  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10645:10669  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10641:10771  if (currentAllowance < value) {... */\n      iszero\n      tag_285\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10730  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10748  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10750:10755  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10696:10756  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_286\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_287\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10641:10771  if (currentAllowance < value) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10869  _approve(owner, spender, currentAllowance - value, false) */\n      tag_288\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10821:10826  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10835  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10856:10861  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10837:10853  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10837:10861  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10863:10868  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10820  _approve */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10869  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10584:10894  if (currentAllowance != type(uint256).max) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10512:10900  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10423:10900  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/XORA.sol\":5135:5507  function _transfer(... */\n    tag_207:\n        /* \"contracts/XORA.sol\":5263:5280  uint256 taxAmount */\n      0x00\n        /* \"contracts/XORA.sol\":5356:5359  100 */\n      0x64\n        /* \"contracts/XORA.sol\":5327:5331  this */\n      address\n        /* \"contracts/XORA.sol\":5306:5332  recipient == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/XORA.sol\":5306:5315  recipient */\n      dup5\n        /* \"contracts/XORA.sol\":5306:5332  recipient == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/XORA.sol\":5306:5351  recipient == address(this) ? sellTax : buyTax */\n      tag_290\n      jumpi\n        /* \"contracts/XORA.sol\":5345:5351  buyTax */\n      sload(0x08)\n        /* \"contracts/XORA.sol\":5306:5351  recipient == address(this) ? sellTax : buyTax */\n      jump(tag_291)\n    tag_290:\n        /* \"contracts/XORA.sol\":5335:5342  sellTax */\n      sload(0x09)\n        /* \"contracts/XORA.sol\":5306:5351  recipient == address(this) ? sellTax : buyTax */\n    tag_291:\n        /* \"contracts/XORA.sol\":5284:5290  amount */\n      dup4\n        /* \"contracts/XORA.sol\":5284:5352  amount *... */\n      tag_292\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_292:\n        /* \"contracts/XORA.sol\":5283:5359  (amount *... */\n      tag_293\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_293:\n        /* \"contracts/XORA.sol\":5263:5359  uint256 taxAmount = (amount *... */\n      swap1\n      pop\n        /* \"contracts/XORA.sol\":5369:5423  super._transfer(sender, recipient, amount - taxAmount) */\n      tag_294\n        /* \"contracts/XORA.sol\":5385:5391  sender */\n      dup5\n        /* \"contracts/XORA.sol\":5393:5402  recipient */\n      dup5\n        /* \"contracts/XORA.sol\":5413:5422  taxAmount */\n      dup4\n        /* \"contracts/XORA.sol\":5404:5410  amount */\n      dup6\n        /* \"contracts/XORA.sol\":5404:5422  amount - taxAmount */\n      tag_295\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_295:\n        /* \"contracts/XORA.sol\":5369:5384  super._transfer */\n      tag_296\n        /* \"contracts/XORA.sol\":5369:5423  super._transfer(sender, recipient, amount - taxAmount) */\n      jump\t// in\n    tag_294:\n        /* \"contracts/XORA.sol\":5449:5450  0 */\n      0x00\n        /* \"contracts/XORA.sol\":5437:5446  taxAmount */\n      dup2\n        /* \"contracts/XORA.sol\":5437:5450  taxAmount > 0 */\n      gt\n        /* \"contracts/XORA.sol\":5433:5501  if (taxAmount > 0) {... */\n      iszero\n      tag_297\n      jumpi\n        /* \"contracts/XORA.sol\":5466:5490  _burn(sender, taxAmount) */\n      tag_298\n        /* \"contracts/XORA.sol\":5472:5478  sender */\n      dup5\n        /* \"contracts/XORA.sol\":5480:5489  taxAmount */\n      dup3\n        /* \"contracts/XORA.sol\":5466:5471  _burn */\n      tag_299\n        /* \"contracts/XORA.sol\":5466:5490  _burn(sender, taxAmount) */\n      jump\t// in\n    tag_298:\n        /* \"contracts/XORA.sol\":5433:5501  if (taxAmount > 0) {... */\n    tag_297:\n        /* \"contracts/XORA.sol\":5253:5507  {... */\n      pop\n        /* \"contracts/XORA.sol\":5135:5507  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9709:10141  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9838:9839  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9821:9840  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9821:9826  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9821:9840  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9817:9906  if (owner == address(0)) {... */\n      tag_302\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9893  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9863:9895  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_303\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_303:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9817:9906  if (owner == address(0)) {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9938:9939  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9919:9940  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9919:9926  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9919:9940  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9915:10005  if (spender == address(0)) {... */\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9991:9992  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9963:9994  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_305\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9915:10005  if (spender == address(0)) {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10044:10049  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10025  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10032  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10026:10031  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10032  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10041  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10033:10040  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10041  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10049  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10063:10072  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10059:10135  if (emitEvent) {... */\n      iszero\n      tag_306\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10109:10116  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10093:10124  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10102:10107  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10093:10124  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10118:10123  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10093:10124  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_307\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_307:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10059:10135  if (emitEvent) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9709:10141  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6016:7123  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6121:6122  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6105:6123  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6105:6109  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6105:6123  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6101:6641  if (from == address(0)) {... */\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6257:6262  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6241:6253  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6241:6262  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_310\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_310:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6101:6641  if (from == address(0)) {... */\n      jump(tag_311)\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6293:6312  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6324  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6330  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6325:6329  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6330  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6293:6330  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6362:6367  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6348:6359  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6348:6367  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6344:6459  if (fromBalance < value) {... */\n      iszero\n      tag_312\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6419:6423  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6425:6436  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6438:6443  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6394:6444  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_313\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_287\n      jump\t// in\n    tag_313:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6344:6459  if (fromBalance < value) {... */\n    tag_312:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6611:6616  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6597:6608  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6597:6616  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6588  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6594  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6593  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6594  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6616  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6279:6641  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6101:6641  if (from == address(0)) {... */\n    tag_311:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6669:6670  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6655:6671  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6655:6657  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6655:6671  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6651:7076  if (to == address(0)) {... */\n      tag_314\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6839  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6818:6830  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6818:6839  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6651:7076  if (to == address(0)) {... */\n      jump(tag_315)\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7046:7051  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7029:7038  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7029:7042  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7039:7041  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7029:7042  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7029:7051  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6651:7076  if (to == address(0)) {... */\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7106:7108  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7091:7116  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7100:7104  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7091:7116  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7110:7115  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7091:7116  Transfer(from, to, value) */\n      mload(0x40)\n      tag_316\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_316:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6016:7123  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5701  function _transfer(address from, address to, uint256 value) internal virtual {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5500:5501  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5484:5502  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5484:5488  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5484:5502  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5480:5566  if (from == address(0)) {... */\n      tag_318\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5553  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5555  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_319\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_319:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5480:5566  if (from == address(0)) {... */\n    tag_318:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5593:5594  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5579:5595  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5579:5581  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5579:5595  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5575:5661  if (to == address(0)) {... */\n      tag_320\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5647:5648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5618:5650  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_321\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5575:5661  if (to == address(0)) {... */\n    tag_320:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5694  _update(from, to, value) */\n      tag_322\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5678:5682  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5684:5686  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5688:5693  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5677  _update */\n      tag_280\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5694  _update(from, to, value) */\n      jump\t// in\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5701  function _transfer(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7992:8198  function _burn(address account, uint256 value) internal {... */\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8081:8082  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8062:8083  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8062:8069  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8062:8083  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8147  if (account == address(0)) {... */\n      tag_324\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8133:8134  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8106:8136  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_325\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_325:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8147  if (account == address(0)) {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8191  _update(account, address(0), value) */\n      tag_326\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8164:8171  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8181:8182  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8185:8190  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  _update */\n      tag_280\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8191  _update(account, address(0), value) */\n      jump\t// in\n    tag_326:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7992:8198  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_327:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_328:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_329:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_330:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_331:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_376\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_327\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":711:782   */\n      tag_377\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_328\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_378\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_329\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":881:910   */\n      tag_379\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_330\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_47:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_381\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_331\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1319   */\n    tag_332:\n        /* \"#utility.yul\":1279:1286   */\n      0x00\n        /* \"#utility.yul\":1308:1313   */\n      dup2\n        /* \"#utility.yul\":1297:1313   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1319   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1325:1443   */\n    tag_333:\n        /* \"#utility.yul\":1412:1436   */\n      tag_384\n        /* \"#utility.yul\":1430:1435   */\n      dup2\n        /* \"#utility.yul\":1412:1436   */\n      tag_332\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":1407:1410   */\n      dup3\n        /* \"#utility.yul\":1400:1437   */\n      mstore\n        /* \"#utility.yul\":1325:1443   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1449:1671   */\n    tag_51:\n        /* \"#utility.yul\":1542:1546   */\n      0x00\n        /* \"#utility.yul\":1580:1582   */\n      0x20\n        /* \"#utility.yul\":1569:1578   */\n      dup3\n        /* \"#utility.yul\":1565:1583   */\n      add\n        /* \"#utility.yul\":1557:1583   */\n      swap1\n      pop\n        /* \"#utility.yul\":1593:1664   */\n      tag_386\n        /* \"#utility.yul\":1661:1662   */\n      0x00\n        /* \"#utility.yul\":1650:1659   */\n      dup4\n        /* \"#utility.yul\":1646:1663   */\n      add\n        /* \"#utility.yul\":1637:1643   */\n      dup5\n        /* \"#utility.yul\":1593:1664   */\n      tag_333\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":1449:1671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1758:1875   */\n    tag_335:\n        /* \"#utility.yul\":1867:1868   */\n      0x00\n        /* \"#utility.yul\":1864:1865   */\n      dup1\n        /* \"#utility.yul\":1857:1869   */\n      revert\n        /* \"#utility.yul\":2004:2130   */\n    tag_337:\n        /* \"#utility.yul\":2041:2048   */\n      0x00\n        /* \"#utility.yul\":2081:2123   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2074:2079   */\n      dup3\n        /* \"#utility.yul\":2070:2124   */\n      and\n        /* \"#utility.yul\":2059:2124   */\n      swap1\n      pop\n        /* \"#utility.yul\":2004:2130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2136:2232   */\n    tag_338:\n        /* \"#utility.yul\":2173:2180   */\n      0x00\n        /* \"#utility.yul\":2202:2226   */\n      tag_392\n        /* \"#utility.yul\":2220:2225   */\n      dup3\n        /* \"#utility.yul\":2202:2226   */\n      tag_337\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":2191:2226   */\n      swap1\n      pop\n        /* \"#utility.yul\":2136:2232   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2238:2360   */\n    tag_339:\n        /* \"#utility.yul\":2311:2335   */\n      tag_394\n        /* \"#utility.yul\":2329:2334   */\n      dup2\n        /* \"#utility.yul\":2311:2335   */\n      tag_338\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":2304:2309   */\n      dup2\n        /* \"#utility.yul\":2301:2336   */\n      eq\n        /* \"#utility.yul\":2291:2354   */\n      tag_395\n      jumpi\n        /* \"#utility.yul\":2350:2351   */\n      0x00\n        /* \"#utility.yul\":2347:2348   */\n      dup1\n        /* \"#utility.yul\":2340:2352   */\n      revert\n        /* \"#utility.yul\":2291:2354   */\n    tag_395:\n        /* \"#utility.yul\":2238:2360   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2366:2505   */\n    tag_340:\n        /* \"#utility.yul\":2412:2417   */\n      0x00\n        /* \"#utility.yul\":2450:2456   */\n      dup2\n        /* \"#utility.yul\":2437:2457   */\n      calldataload\n        /* \"#utility.yul\":2428:2457   */\n      swap1\n      pop\n        /* \"#utility.yul\":2466:2499   */\n      tag_397\n        /* \"#utility.yul\":2493:2498   */\n      dup2\n        /* \"#utility.yul\":2466:2499   */\n      tag_339\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":2366:2505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2511:2633   */\n    tag_341:\n        /* \"#utility.yul\":2584:2608   */\n      tag_399\n        /* \"#utility.yul\":2602:2607   */\n      dup2\n        /* \"#utility.yul\":2584:2608   */\n      tag_332\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":2577:2582   */\n      dup2\n        /* \"#utility.yul\":2574:2609   */\n      eq\n        /* \"#utility.yul\":2564:2627   */\n      tag_400\n      jumpi\n        /* \"#utility.yul\":2623:2624   */\n      0x00\n        /* \"#utility.yul\":2620:2621   */\n      dup1\n        /* \"#utility.yul\":2613:2625   */\n      revert\n        /* \"#utility.yul\":2564:2627   */\n    tag_400:\n        /* \"#utility.yul\":2511:2633   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2639:2778   */\n    tag_342:\n        /* \"#utility.yul\":2685:2690   */\n      0x00\n        /* \"#utility.yul\":2723:2729   */\n      dup2\n        /* \"#utility.yul\":2710:2730   */\n      calldataload\n        /* \"#utility.yul\":2701:2730   */\n      swap1\n      pop\n        /* \"#utility.yul\":2739:2772   */\n      tag_402\n        /* \"#utility.yul\":2766:2771   */\n      dup2\n        /* \"#utility.yul\":2739:2772   */\n      tag_341\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":2639:2778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2784:3258   */\n    tag_54:\n        /* \"#utility.yul\":2852:2858   */\n      0x00\n        /* \"#utility.yul\":2860:2866   */\n      dup1\n        /* \"#utility.yul\":2909:2911   */\n      0x40\n        /* \"#utility.yul\":2897:2906   */\n      dup4\n        /* \"#utility.yul\":2888:2895   */\n      dup6\n        /* \"#utility.yul\":2884:2907   */\n      sub\n        /* \"#utility.yul\":2880:2912   */\n      slt\n        /* \"#utility.yul\":2877:2996   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":2915:2994   */\n      tag_405\n      tag_335\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":2877:2996   */\n    tag_404:\n        /* \"#utility.yul\":3035:3036   */\n      0x00\n        /* \"#utility.yul\":3060:3113   */\n      tag_406\n        /* \"#utility.yul\":3105:3112   */\n      dup6\n        /* \"#utility.yul\":3096:3102   */\n      dup3\n        /* \"#utility.yul\":3085:3094   */\n      dup7\n        /* \"#utility.yul\":3081:3103   */\n      add\n        /* \"#utility.yul\":3060:3113   */\n      tag_340\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":3050:3113   */\n      swap3\n      pop\n        /* \"#utility.yul\":3006:3123   */\n      pop\n        /* \"#utility.yul\":3162:3164   */\n      0x20\n        /* \"#utility.yul\":3188:3241   */\n      tag_407\n        /* \"#utility.yul\":3233:3240   */\n      dup6\n        /* \"#utility.yul\":3224:3230   */\n      dup3\n        /* \"#utility.yul\":3213:3222   */\n      dup7\n        /* \"#utility.yul\":3209:3231   */\n      add\n        /* \"#utility.yul\":3188:3241   */\n      tag_342\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":3178:3241   */\n      swap2\n      pop\n        /* \"#utility.yul\":3133:3251   */\n      pop\n        /* \"#utility.yul\":2784:3258   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3354   */\n    tag_343:\n        /* \"#utility.yul\":3298:3305   */\n      0x00\n        /* \"#utility.yul\":3341:3346   */\n      dup2\n        /* \"#utility.yul\":3334:3347   */\n      iszero\n        /* \"#utility.yul\":3327:3348   */\n      iszero\n        /* \"#utility.yul\":3316:3348   */\n      swap1\n      pop\n        /* \"#utility.yul\":3264:3354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3360:3469   */\n    tag_344:\n        /* \"#utility.yul\":3441:3462   */\n      tag_410\n        /* \"#utility.yul\":3456:3461   */\n      dup2\n        /* \"#utility.yul\":3441:3462   */\n      tag_343\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":3436:3439   */\n      dup3\n        /* \"#utility.yul\":3429:3463   */\n      mstore\n        /* \"#utility.yul\":3360:3469   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3475:3685   */\n    tag_57:\n        /* \"#utility.yul\":3562:3566   */\n      0x00\n        /* \"#utility.yul\":3600:3602   */\n      0x20\n        /* \"#utility.yul\":3589:3598   */\n      dup3\n        /* \"#utility.yul\":3585:3603   */\n      add\n        /* \"#utility.yul\":3577:3603   */\n      swap1\n      pop\n        /* \"#utility.yul\":3613:3678   */\n      tag_412\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3613:3678   */\n      tag_344\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":3475:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_71:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_415\n      tag_335\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":3801:3920   */\n    tag_414:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_416\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_340\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_417\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_340\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_418\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_342\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4434   */\n    tag_345:\n        /* \"#utility.yul\":4403:4427   */\n      tag_420\n        /* \"#utility.yul\":4421:4426   */\n      dup2\n        /* \"#utility.yul\":4403:4427   */\n      tag_338\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":4398:4401   */\n      dup3\n        /* \"#utility.yul\":4391:4428   */\n      mstore\n        /* \"#utility.yul\":4316:4434   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4440:4662   */\n    tag_77:\n        /* \"#utility.yul\":4533:4537   */\n      0x00\n        /* \"#utility.yul\":4571:4573   */\n      0x20\n        /* \"#utility.yul\":4560:4569   */\n      dup3\n        /* \"#utility.yul\":4556:4574   */\n      add\n        /* \"#utility.yul\":4548:4574   */\n      swap1\n      pop\n        /* \"#utility.yul\":4584:4655   */\n      tag_422\n        /* \"#utility.yul\":4652:4653   */\n      0x00\n        /* \"#utility.yul\":4641:4650   */\n      dup4\n        /* \"#utility.yul\":4637:4654   */\n      add\n        /* \"#utility.yul\":4628:4634   */\n      dup5\n        /* \"#utility.yul\":4584:4655   */\n      tag_345\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":4440:4662   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4668:4754   */\n    tag_346:\n        /* \"#utility.yul\":4703:4710   */\n      0x00\n        /* \"#utility.yul\":4743:4747   */\n      0xff\n        /* \"#utility.yul\":4736:4741   */\n      dup3\n        /* \"#utility.yul\":4732:4748   */\n      and\n        /* \"#utility.yul\":4721:4748   */\n      swap1\n      pop\n        /* \"#utility.yul\":4668:4754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4760:4872   */\n    tag_347:\n        /* \"#utility.yul\":4843:4865   */\n      tag_425\n        /* \"#utility.yul\":4859:4864   */\n      dup2\n        /* \"#utility.yul\":4843:4865   */\n      tag_346\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":4838:4841   */\n      dup3\n        /* \"#utility.yul\":4831:4866   */\n      mstore\n        /* \"#utility.yul\":4760:4872   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4878:5092   */\n    tag_84:\n        /* \"#utility.yul\":4967:4971   */\n      0x00\n        /* \"#utility.yul\":5005:5007   */\n      0x20\n        /* \"#utility.yul\":4994:5003   */\n      dup3\n        /* \"#utility.yul\":4990:5008   */\n      add\n        /* \"#utility.yul\":4982:5008   */\n      swap1\n      pop\n        /* \"#utility.yul\":5018:5085   */\n      tag_427\n        /* \"#utility.yul\":5082:5083   */\n      0x00\n        /* \"#utility.yul\":5071:5080   */\n      dup4\n        /* \"#utility.yul\":5067:5084   */\n      add\n        /* \"#utility.yul\":5058:5064   */\n      dup5\n        /* \"#utility.yul\":5018:5085   */\n      tag_347\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":4878:5092   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5098:5427   */\n    tag_102:\n        /* \"#utility.yul\":5157:5163   */\n      0x00\n        /* \"#utility.yul\":5206:5208   */\n      0x20\n        /* \"#utility.yul\":5194:5203   */\n      dup3\n        /* \"#utility.yul\":5185:5192   */\n      dup5\n        /* \"#utility.yul\":5181:5204   */\n      sub\n        /* \"#utility.yul\":5177:5209   */\n      slt\n        /* \"#utility.yul\":5174:5293   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":5212:5291   */\n      tag_430\n      tag_335\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":5174:5293   */\n    tag_429:\n        /* \"#utility.yul\":5332:5333   */\n      0x00\n        /* \"#utility.yul\":5357:5410   */\n      tag_431\n        /* \"#utility.yul\":5402:5409   */\n      dup5\n        /* \"#utility.yul\":5393:5399   */\n      dup3\n        /* \"#utility.yul\":5382:5391   */\n      dup6\n        /* \"#utility.yul\":5378:5400   */\n      add\n        /* \"#utility.yul\":5357:5410   */\n      tag_340\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":5347:5410   */\n      swap2\n      pop\n        /* \"#utility.yul\":5303:5420   */\n      pop\n        /* \"#utility.yul\":5098:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5907   */\n    tag_120:\n        /* \"#utility.yul\":5501:5507   */\n      0x00\n        /* \"#utility.yul\":5509:5515   */\n      dup1\n        /* \"#utility.yul\":5558:5560   */\n      0x40\n        /* \"#utility.yul\":5546:5555   */\n      dup4\n        /* \"#utility.yul\":5537:5544   */\n      dup6\n        /* \"#utility.yul\":5533:5556   */\n      sub\n        /* \"#utility.yul\":5529:5561   */\n      slt\n        /* \"#utility.yul\":5526:5645   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":5564:5643   */\n      tag_434\n      tag_335\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":5526:5645   */\n    tag_433:\n        /* \"#utility.yul\":5684:5685   */\n      0x00\n        /* \"#utility.yul\":5709:5762   */\n      tag_435\n        /* \"#utility.yul\":5754:5761   */\n      dup6\n        /* \"#utility.yul\":5745:5751   */\n      dup3\n        /* \"#utility.yul\":5734:5743   */\n      dup7\n        /* \"#utility.yul\":5730:5752   */\n      add\n        /* \"#utility.yul\":5709:5762   */\n      tag_342\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":5699:5762   */\n      swap3\n      pop\n        /* \"#utility.yul\":5655:5772   */\n      pop\n        /* \"#utility.yul\":5811:5813   */\n      0x20\n        /* \"#utility.yul\":5837:5890   */\n      tag_436\n        /* \"#utility.yul\":5882:5889   */\n      dup6\n        /* \"#utility.yul\":5873:5879   */\n      dup3\n        /* \"#utility.yul\":5862:5871   */\n      dup7\n        /* \"#utility.yul\":5858:5880   */\n      add\n        /* \"#utility.yul\":5837:5890   */\n      tag_340\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":5827:5890   */\n      swap2\n      pop\n        /* \"#utility.yul\":5782:5900   */\n      pop\n        /* \"#utility.yul\":5433:5907   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5913:6387   */\n    tag_145:\n        /* \"#utility.yul\":5981:5987   */\n      0x00\n        /* \"#utility.yul\":5989:5995   */\n      dup1\n        /* \"#utility.yul\":6038:6040   */\n      0x40\n        /* \"#utility.yul\":6026:6035   */\n      dup4\n        /* \"#utility.yul\":6017:6024   */\n      dup6\n        /* \"#utility.yul\":6013:6036   */\n      sub\n        /* \"#utility.yul\":6009:6041   */\n      slt\n        /* \"#utility.yul\":6006:6125   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":6044:6123   */\n      tag_439\n      tag_335\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":6006:6125   */\n    tag_438:\n        /* \"#utility.yul\":6164:6165   */\n      0x00\n        /* \"#utility.yul\":6189:6242   */\n      tag_440\n        /* \"#utility.yul\":6234:6241   */\n      dup6\n        /* \"#utility.yul\":6225:6231   */\n      dup3\n        /* \"#utility.yul\":6214:6223   */\n      dup7\n        /* \"#utility.yul\":6210:6232   */\n      add\n        /* \"#utility.yul\":6189:6242   */\n      tag_340\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":6179:6242   */\n      swap3\n      pop\n        /* \"#utility.yul\":6135:6252   */\n      pop\n        /* \"#utility.yul\":6291:6293   */\n      0x20\n        /* \"#utility.yul\":6317:6370   */\n      tag_441\n        /* \"#utility.yul\":6362:6369   */\n      dup6\n        /* \"#utility.yul\":6353:6359   */\n      dup3\n        /* \"#utility.yul\":6342:6351   */\n      dup7\n        /* \"#utility.yul\":6338:6360   */\n      add\n        /* \"#utility.yul\":6317:6370   */\n      tag_340\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":6307:6370   */\n      swap2\n      pop\n        /* \"#utility.yul\":6262:6380   */\n      pop\n        /* \"#utility.yul\":5913:6387   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6393:6453   */\n    tag_348:\n        /* \"#utility.yul\":6421:6424   */\n      0x00\n        /* \"#utility.yul\":6442:6447   */\n      dup2\n        /* \"#utility.yul\":6435:6447   */\n      swap1\n      pop\n        /* \"#utility.yul\":6393:6453   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6459:6601   */\n    tag_349:\n        /* \"#utility.yul\":6509:6518   */\n      0x00\n        /* \"#utility.yul\":6542:6595   */\n      tag_444\n        /* \"#utility.yul\":6560:6594   */\n      tag_445\n        /* \"#utility.yul\":6569:6593   */\n      tag_446\n        /* \"#utility.yul\":6587:6592   */\n      dup5\n        /* \"#utility.yul\":6569:6593   */\n      tag_337\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":6560:6594   */\n      tag_348\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":6542:6595   */\n      tag_337\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":6529:6595   */\n      swap1\n      pop\n        /* \"#utility.yul\":6459:6601   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6607:6733   */\n    tag_350:\n        /* \"#utility.yul\":6657:6666   */\n      0x00\n        /* \"#utility.yul\":6690:6727   */\n      tag_448\n        /* \"#utility.yul\":6721:6726   */\n      dup3\n        /* \"#utility.yul\":6690:6727   */\n      tag_349\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":6677:6727   */\n      swap1\n      pop\n        /* \"#utility.yul\":6607:6733   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6739:6879   */\n    tag_351:\n        /* \"#utility.yul\":6803:6812   */\n      0x00\n        /* \"#utility.yul\":6836:6873   */\n      tag_450\n        /* \"#utility.yul\":6867:6872   */\n      dup3\n        /* \"#utility.yul\":6836:6873   */\n      tag_350\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":6823:6873   */\n      swap1\n      pop\n        /* \"#utility.yul\":6739:6879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6885:7044   */\n    tag_352:\n        /* \"#utility.yul\":6986:7037   */\n      tag_452\n        /* \"#utility.yul\":7031:7036   */\n      dup2\n        /* \"#utility.yul\":6986:7037   */\n      tag_351\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":6981:6984   */\n      dup3\n        /* \"#utility.yul\":6974:7038   */\n      mstore\n        /* \"#utility.yul\":6885:7044   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7050:7300   */\n    tag_154:\n        /* \"#utility.yul\":7157:7161   */\n      0x00\n        /* \"#utility.yul\":7195:7197   */\n      0x20\n        /* \"#utility.yul\":7184:7193   */\n      dup3\n        /* \"#utility.yul\":7180:7198   */\n      add\n        /* \"#utility.yul\":7172:7198   */\n      swap1\n      pop\n        /* \"#utility.yul\":7208:7293   */\n      tag_454\n        /* \"#utility.yul\":7290:7291   */\n      0x00\n        /* \"#utility.yul\":7279:7288   */\n      dup4\n        /* \"#utility.yul\":7275:7292   */\n      add\n        /* \"#utility.yul\":7266:7272   */\n      dup5\n        /* \"#utility.yul\":7208:7293   */\n      tag_352\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":7050:7300   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7306:7486   */\n    tag_353:\n        /* \"#utility.yul\":7354:7431   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7351:7352   */\n      0x00\n        /* \"#utility.yul\":7344:7432   */\n      mstore\n        /* \"#utility.yul\":7451:7455   */\n      0x22\n        /* \"#utility.yul\":7448:7449   */\n      0x04\n        /* \"#utility.yul\":7441:7456   */\n      mstore\n        /* \"#utility.yul\":7475:7479   */\n      0x24\n        /* \"#utility.yul\":7472:7473   */\n      0x00\n        /* \"#utility.yul\":7465:7480   */\n      revert\n        /* \"#utility.yul\":7492:7812   */\n    tag_160:\n        /* \"#utility.yul\":7536:7542   */\n      0x00\n        /* \"#utility.yul\":7573:7574   */\n      0x02\n        /* \"#utility.yul\":7567:7571   */\n      dup3\n        /* \"#utility.yul\":7563:7575   */\n      div\n        /* \"#utility.yul\":7553:7575   */\n      swap1\n      pop\n        /* \"#utility.yul\":7620:7621   */\n      0x01\n        /* \"#utility.yul\":7614:7618   */\n      dup3\n        /* \"#utility.yul\":7610:7622   */\n      and\n        /* \"#utility.yul\":7641:7659   */\n      dup1\n        /* \"#utility.yul\":7631:7712   */\n      tag_457\n      jumpi\n        /* \"#utility.yul\":7697:7701   */\n      0x7f\n        /* \"#utility.yul\":7689:7695   */\n      dup3\n        /* \"#utility.yul\":7685:7702   */\n      and\n        /* \"#utility.yul\":7675:7702   */\n      swap2\n      pop\n        /* \"#utility.yul\":7631:7712   */\n    tag_457:\n        /* \"#utility.yul\":7759:7761   */\n      0x20\n        /* \"#utility.yul\":7751:7757   */\n      dup3\n        /* \"#utility.yul\":7748:7762   */\n      lt\n        /* \"#utility.yul\":7728:7746   */\n      dup2\n        /* \"#utility.yul\":7725:7763   */\n      sub\n        /* \"#utility.yul\":7722:7806   */\n      tag_458\n      jumpi\n        /* \"#utility.yul\":7778:7796   */\n      tag_459\n      tag_353\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":7722:7806   */\n    tag_458:\n        /* \"#utility.yul\":7543:7812   */\n      pop\n        /* \"#utility.yul\":7492:7812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7818:7998   */\n    tag_354:\n        /* \"#utility.yul\":7866:7943   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7863:7864   */\n      0x00\n        /* \"#utility.yul\":7856:7944   */\n      mstore\n        /* \"#utility.yul\":7963:7967   */\n      0x11\n        /* \"#utility.yul\":7960:7961   */\n      0x04\n        /* \"#utility.yul\":7953:7968   */\n      mstore\n        /* \"#utility.yul\":7987:7991   */\n      0x24\n        /* \"#utility.yul\":7984:7985   */\n      0x00\n        /* \"#utility.yul\":7977:7992   */\n      revert\n        /* \"#utility.yul\":8004:8195   */\n    tag_178:\n        /* \"#utility.yul\":8044:8047   */\n      0x00\n        /* \"#utility.yul\":8063:8083   */\n      tag_462\n        /* \"#utility.yul\":8081:8082   */\n      dup3\n        /* \"#utility.yul\":8063:8083   */\n      tag_332\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":8058:8083   */\n      swap2\n      pop\n        /* \"#utility.yul\":8097:8117   */\n      tag_463\n        /* \"#utility.yul\":8115:8116   */\n      dup4\n        /* \"#utility.yul\":8097:8117   */\n      tag_332\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":8092:8117   */\n      swap3\n      pop\n        /* \"#utility.yul\":8140:8141   */\n      dup3\n        /* \"#utility.yul\":8137:8138   */\n      dup3\n        /* \"#utility.yul\":8133:8142   */\n      add\n        /* \"#utility.yul\":8126:8142   */\n      swap1\n      pop\n        /* \"#utility.yul\":8161:8164   */\n      dup1\n        /* \"#utility.yul\":8158:8159   */\n      dup3\n        /* \"#utility.yul\":8155:8165   */\n      gt\n        /* \"#utility.yul\":8152:8188   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":8168:8186   */\n      tag_465\n      tag_354\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":8152:8188   */\n    tag_464:\n        /* \"#utility.yul\":8004:8195   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8201:8381   */\n    tag_355:\n        /* \"#utility.yul\":8341:8373   */\n      0x5465616d2076657374696e6720636c696666206e6f7420726561636865640000\n        /* \"#utility.yul\":8337:8338   */\n      0x00\n        /* \"#utility.yul\":8329:8335   */\n      dup3\n        /* \"#utility.yul\":8325:8339   */\n      add\n        /* \"#utility.yul\":8318:8374   */\n      mstore\n        /* \"#utility.yul\":8201:8381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8387:8753   */\n    tag_356:\n        /* \"#utility.yul\":8529:8532   */\n      0x00\n        /* \"#utility.yul\":8550:8617   */\n      tag_468\n        /* \"#utility.yul\":8614:8616   */\n      0x1e\n        /* \"#utility.yul\":8609:8612   */\n      dup4\n        /* \"#utility.yul\":8550:8617   */\n      tag_328\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":8543:8617   */\n      swap2\n      pop\n        /* \"#utility.yul\":8626:8719   */\n      tag_469\n        /* \"#utility.yul\":8715:8718   */\n      dup3\n        /* \"#utility.yul\":8626:8719   */\n      tag_355\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":8744:8746   */\n      0x20\n        /* \"#utility.yul\":8739:8742   */\n      dup3\n        /* \"#utility.yul\":8735:8747   */\n      add\n        /* \"#utility.yul\":8728:8747   */\n      swap1\n      pop\n        /* \"#utility.yul\":8387:8753   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8759:9178   */\n    tag_181:\n        /* \"#utility.yul\":8925:8929   */\n      0x00\n        /* \"#utility.yul\":8963:8965   */\n      0x20\n        /* \"#utility.yul\":8952:8961   */\n      dup3\n        /* \"#utility.yul\":8948:8966   */\n      add\n        /* \"#utility.yul\":8940:8966   */\n      swap1\n      pop\n        /* \"#utility.yul\":9012:9021   */\n      dup2\n        /* \"#utility.yul\":9006:9010   */\n      dup2\n        /* \"#utility.yul\":9002:9022   */\n      sub\n        /* \"#utility.yul\":8998:8999   */\n      0x00\n        /* \"#utility.yul\":8987:8996   */\n      dup4\n        /* \"#utility.yul\":8983:9000   */\n      add\n        /* \"#utility.yul\":8976:9023   */\n      mstore\n        /* \"#utility.yul\":9040:9171   */\n      tag_471\n        /* \"#utility.yul\":9166:9170   */\n      dup2\n        /* \"#utility.yul\":9040:9171   */\n      tag_356\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":9032:9171   */\n      swap1\n      pop\n        /* \"#utility.yul\":8759:9178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9184:9378   */\n    tag_184:\n        /* \"#utility.yul\":9224:9228   */\n      0x00\n        /* \"#utility.yul\":9244:9264   */\n      tag_473\n        /* \"#utility.yul\":9262:9263   */\n      dup3\n        /* \"#utility.yul\":9244:9264   */\n      tag_332\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":9239:9264   */\n      swap2\n      pop\n        /* \"#utility.yul\":9278:9298   */\n      tag_474\n        /* \"#utility.yul\":9296:9297   */\n      dup4\n        /* \"#utility.yul\":9278:9298   */\n      tag_332\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":9273:9298   */\n      swap3\n      pop\n        /* \"#utility.yul\":9322:9323   */\n      dup3\n        /* \"#utility.yul\":9319:9320   */\n      dup3\n        /* \"#utility.yul\":9315:9324   */\n      sub\n        /* \"#utility.yul\":9307:9324   */\n      swap1\n      pop\n        /* \"#utility.yul\":9346:9347   */\n      dup2\n        /* \"#utility.yul\":9340:9344   */\n      dup2\n        /* \"#utility.yul\":9337:9348   */\n      gt\n        /* \"#utility.yul\":9334:9371   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":9351:9369   */\n      tag_476\n      tag_354\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":9334:9371   */\n    tag_475:\n        /* \"#utility.yul\":9184:9378   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9384:9794   */\n    tag_186:\n        /* \"#utility.yul\":9424:9431   */\n      0x00\n        /* \"#utility.yul\":9447:9467   */\n      tag_478\n        /* \"#utility.yul\":9465:9466   */\n      dup3\n        /* \"#utility.yul\":9447:9467   */\n      tag_332\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":9442:9467   */\n      swap2\n      pop\n        /* \"#utility.yul\":9481:9501   */\n      tag_479\n        /* \"#utility.yul\":9499:9500   */\n      dup4\n        /* \"#utility.yul\":9481:9501   */\n      tag_332\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":9476:9501   */\n      swap3\n      pop\n        /* \"#utility.yul\":9536:9537   */\n      dup3\n        /* \"#utility.yul\":9533:9534   */\n      dup3\n        /* \"#utility.yul\":9529:9538   */\n      mul\n        /* \"#utility.yul\":9558:9588   */\n      tag_480\n        /* \"#utility.yul\":9576:9587   */\n      dup2\n        /* \"#utility.yul\":9558:9588   */\n      tag_332\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":9547:9588   */\n      swap2\n      pop\n        /* \"#utility.yul\":9737:9738   */\n      dup3\n        /* \"#utility.yul\":9728:9735   */\n      dup3\n        /* \"#utility.yul\":9724:9739   */\n      div\n        /* \"#utility.yul\":9721:9722   */\n      dup5\n        /* \"#utility.yul\":9718:9740   */\n      eq\n        /* \"#utility.yul\":9698:9699   */\n      dup4\n        /* \"#utility.yul\":9691:9700   */\n      iszero\n        /* \"#utility.yul\":9671:9754   */\n      or\n        /* \"#utility.yul\":9648:9787   */\n      tag_481\n      jumpi\n        /* \"#utility.yul\":9767:9785   */\n      tag_482\n      tag_354\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":9648:9787   */\n    tag_481:\n        /* \"#utility.yul\":9432:9794   */\n      pop\n        /* \"#utility.yul\":9384:9794   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9800:9980   */\n    tag_357:\n        /* \"#utility.yul\":9848:9925   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9845:9846   */\n      0x00\n        /* \"#utility.yul\":9838:9926   */\n      mstore\n        /* \"#utility.yul\":9945:9949   */\n      0x12\n        /* \"#utility.yul\":9942:9943   */\n      0x04\n        /* \"#utility.yul\":9935:9950   */\n      mstore\n        /* \"#utility.yul\":9969:9973   */\n      0x24\n        /* \"#utility.yul\":9966:9967   */\n      0x00\n        /* \"#utility.yul\":9959:9974   */\n      revert\n        /* \"#utility.yul\":9986:10171   */\n    tag_188:\n        /* \"#utility.yul\":10026:10027   */\n      0x00\n        /* \"#utility.yul\":10043:10063   */\n      tag_485\n        /* \"#utility.yul\":10061:10062   */\n      dup3\n        /* \"#utility.yul\":10043:10063   */\n      tag_332\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":10038:10063   */\n      swap2\n      pop\n        /* \"#utility.yul\":10077:10097   */\n      tag_486\n        /* \"#utility.yul\":10095:10096   */\n      dup4\n        /* \"#utility.yul\":10077:10097   */\n      tag_332\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":10072:10097   */\n      swap3\n      pop\n        /* \"#utility.yul\":10116:10117   */\n      dup3\n        /* \"#utility.yul\":10106:10141   */\n      tag_487\n      jumpi\n        /* \"#utility.yul\":10121:10139   */\n      tag_488\n      tag_357\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":10106:10141   */\n    tag_487:\n        /* \"#utility.yul\":10163:10164   */\n      dup3\n        /* \"#utility.yul\":10160:10161   */\n      dup3\n        /* \"#utility.yul\":10156:10165   */\n      div\n        /* \"#utility.yul\":10151:10165   */\n      swap1\n      pop\n        /* \"#utility.yul\":9986:10171   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10177:10358   */\n    tag_358:\n        /* \"#utility.yul\":10317:10350   */\n      0x4e6f20746f6b656e7320617661696c61626c6520666f722072656c6561736500\n        /* \"#utility.yul\":10313:10314   */\n      0x00\n        /* \"#utility.yul\":10305:10311   */\n      dup3\n        /* \"#utility.yul\":10301:10315   */\n      add\n        /* \"#utility.yul\":10294:10351   */\n      mstore\n        /* \"#utility.yul\":10177:10358   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10364:10730   */\n    tag_359:\n        /* \"#utility.yul\":10506:10509   */\n      0x00\n        /* \"#utility.yul\":10527:10594   */\n      tag_491\n        /* \"#utility.yul\":10591:10593   */\n      0x1f\n        /* \"#utility.yul\":10586:10589   */\n      dup4\n        /* \"#utility.yul\":10527:10594   */\n      tag_328\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":10520:10594   */\n      swap2\n      pop\n        /* \"#utility.yul\":10603:10696   */\n      tag_492\n        /* \"#utility.yul\":10692:10695   */\n      dup3\n        /* \"#utility.yul\":10603:10696   */\n      tag_358\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":10721:10723   */\n      0x20\n        /* \"#utility.yul\":10716:10719   */\n      dup3\n        /* \"#utility.yul\":10712:10724   */\n      add\n        /* \"#utility.yul\":10705:10724   */\n      swap1\n      pop\n        /* \"#utility.yul\":10364:10730   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10736:11155   */\n    tag_193:\n        /* \"#utility.yul\":10902:10906   */\n      0x00\n        /* \"#utility.yul\":10940:10942   */\n      0x20\n        /* \"#utility.yul\":10929:10938   */\n      dup3\n        /* \"#utility.yul\":10925:10943   */\n      add\n        /* \"#utility.yul\":10917:10943   */\n      swap1\n      pop\n        /* \"#utility.yul\":10989:10998   */\n      dup2\n        /* \"#utility.yul\":10983:10987   */\n      dup2\n        /* \"#utility.yul\":10979:10999   */\n      sub\n        /* \"#utility.yul\":10975:10976   */\n      0x00\n        /* \"#utility.yul\":10964:10973   */\n      dup4\n        /* \"#utility.yul\":10960:10977   */\n      add\n        /* \"#utility.yul\":10953:11000   */\n      mstore\n        /* \"#utility.yul\":11017:11148   */\n      tag_494\n        /* \"#utility.yul\":11143:11147   */\n      dup2\n        /* \"#utility.yul\":11017:11148   */\n      tag_359\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":11009:11148   */\n      swap1\n      pop\n        /* \"#utility.yul\":10736:11155   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11161:11334   */\n    tag_360:\n        /* \"#utility.yul\":11301:11326   */\n      0x6d617820746f6b656e206c696d69742072656163686564000000000000000000\n        /* \"#utility.yul\":11297:11298   */\n      0x00\n        /* \"#utility.yul\":11289:11295   */\n      dup3\n        /* \"#utility.yul\":11285:11299   */\n      add\n        /* \"#utility.yul\":11278:11327   */\n      mstore\n        /* \"#utility.yul\":11161:11334   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11340:11706   */\n    tag_361:\n        /* \"#utility.yul\":11482:11485   */\n      0x00\n        /* \"#utility.yul\":11503:11570   */\n      tag_497\n        /* \"#utility.yul\":11567:11569   */\n      0x17\n        /* \"#utility.yul\":11562:11565   */\n      dup4\n        /* \"#utility.yul\":11503:11570   */\n      tag_328\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":11496:11570   */\n      swap2\n      pop\n        /* \"#utility.yul\":11579:11672   */\n      tag_498\n        /* \"#utility.yul\":11668:11671   */\n      dup3\n        /* \"#utility.yul\":11579:11672   */\n      tag_360\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":11697:11699   */\n      0x20\n        /* \"#utility.yul\":11692:11695   */\n      dup3\n        /* \"#utility.yul\":11688:11700   */\n      add\n        /* \"#utility.yul\":11681:11700   */\n      swap1\n      pop\n        /* \"#utility.yul\":11340:11706   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11712:12131   */\n    tag_196:\n        /* \"#utility.yul\":11878:11882   */\n      0x00\n        /* \"#utility.yul\":11916:11918   */\n      0x20\n        /* \"#utility.yul\":11905:11914   */\n      dup3\n        /* \"#utility.yul\":11901:11919   */\n      add\n        /* \"#utility.yul\":11893:11919   */\n      swap1\n      pop\n        /* \"#utility.yul\":11965:11974   */\n      dup2\n        /* \"#utility.yul\":11959:11963   */\n      dup2\n        /* \"#utility.yul\":11955:11975   */\n      sub\n        /* \"#utility.yul\":11951:11952   */\n      0x00\n        /* \"#utility.yul\":11940:11949   */\n      dup4\n        /* \"#utility.yul\":11936:11953   */\n      add\n        /* \"#utility.yul\":11929:11976   */\n      mstore\n        /* \"#utility.yul\":11993:12124   */\n      tag_500\n        /* \"#utility.yul\":12119:12123   */\n      dup2\n        /* \"#utility.yul\":11993:12124   */\n      tag_361\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":11985:12124   */\n      swap1\n      pop\n        /* \"#utility.yul\":11712:12131   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12137:12306   */\n    tag_362:\n        /* \"#utility.yul\":12277:12298   */\n      0x48616c76696e67206e6f74206475652079657400000000000000000000000000\n        /* \"#utility.yul\":12273:12274   */\n      0x00\n        /* \"#utility.yul\":12265:12271   */\n      dup3\n        /* \"#utility.yul\":12261:12275   */\n      add\n        /* \"#utility.yul\":12254:12299   */\n      mstore\n        /* \"#utility.yul\":12137:12306   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12312:12678   */\n    tag_363:\n        /* \"#utility.yul\":12454:12457   */\n      0x00\n        /* \"#utility.yul\":12475:12542   */\n      tag_503\n        /* \"#utility.yul\":12539:12541   */\n      0x13\n        /* \"#utility.yul\":12534:12537   */\n      dup4\n        /* \"#utility.yul\":12475:12542   */\n      tag_328\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":12468:12542   */\n      swap2\n      pop\n        /* \"#utility.yul\":12551:12644   */\n      tag_504\n        /* \"#utility.yul\":12640:12643   */\n      dup3\n        /* \"#utility.yul\":12551:12644   */\n      tag_362\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":12669:12671   */\n      0x20\n        /* \"#utility.yul\":12664:12667   */\n      dup3\n        /* \"#utility.yul\":12660:12672   */\n      add\n        /* \"#utility.yul\":12653:12672   */\n      swap1\n      pop\n        /* \"#utility.yul\":12312:12678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12684:13103   */\n    tag_219:\n        /* \"#utility.yul\":12850:12854   */\n      0x00\n        /* \"#utility.yul\":12888:12890   */\n      0x20\n        /* \"#utility.yul\":12877:12886   */\n      dup3\n        /* \"#utility.yul\":12873:12891   */\n      add\n        /* \"#utility.yul\":12865:12891   */\n      swap1\n      pop\n        /* \"#utility.yul\":12937:12946   */\n      dup2\n        /* \"#utility.yul\":12931:12935   */\n      dup2\n        /* \"#utility.yul\":12927:12947   */\n      sub\n        /* \"#utility.yul\":12923:12924   */\n      0x00\n        /* \"#utility.yul\":12912:12921   */\n      dup4\n        /* \"#utility.yul\":12908:12925   */\n      add\n        /* \"#utility.yul\":12901:12948   */\n      mstore\n        /* \"#utility.yul\":12965:13096   */\n      tag_506\n        /* \"#utility.yul\":13091:13095   */\n      dup2\n        /* \"#utility.yul\":12965:13096   */\n      tag_363\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":12957:13096   */\n      swap1\n      pop\n        /* \"#utility.yul\":12684:13103   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13109:13441   */\n    tag_227:\n        /* \"#utility.yul\":13230:13234   */\n      0x00\n        /* \"#utility.yul\":13268:13270   */\n      0x40\n        /* \"#utility.yul\":13257:13266   */\n      dup3\n        /* \"#utility.yul\":13253:13271   */\n      add\n        /* \"#utility.yul\":13245:13271   */\n      swap1\n      pop\n        /* \"#utility.yul\":13281:13352   */\n      tag_508\n        /* \"#utility.yul\":13349:13350   */\n      0x00\n        /* \"#utility.yul\":13338:13347   */\n      dup4\n        /* \"#utility.yul\":13334:13351   */\n      add\n        /* \"#utility.yul\":13325:13331   */\n      dup6\n        /* \"#utility.yul\":13281:13352   */\n      tag_333\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":13362:13434   */\n      tag_509\n        /* \"#utility.yul\":13430:13432   */\n      0x20\n        /* \"#utility.yul\":13419:13428   */\n      dup4\n        /* \"#utility.yul\":13415:13433   */\n      add\n        /* \"#utility.yul\":13406:13412   */\n      dup5\n        /* \"#utility.yul\":13362:13434   */\n      tag_345\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":13109:13441   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13447:13627   */\n    tag_364:\n        /* \"#utility.yul\":13587:13619   */\n      0x6e6f20746f6b656e20617661696c61626c6520666f722072656c656173650000\n        /* \"#utility.yul\":13583:13584   */\n      0x00\n        /* \"#utility.yul\":13575:13581   */\n      dup3\n        /* \"#utility.yul\":13571:13585   */\n      add\n        /* \"#utility.yul\":13564:13620   */\n      mstore\n        /* \"#utility.yul\":13447:13627   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13633:13999   */\n    tag_365:\n        /* \"#utility.yul\":13775:13778   */\n      0x00\n        /* \"#utility.yul\":13796:13863   */\n      tag_512\n        /* \"#utility.yul\":13860:13862   */\n      0x1e\n        /* \"#utility.yul\":13855:13858   */\n      dup4\n        /* \"#utility.yul\":13796:13863   */\n      tag_328\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":13789:13863   */\n      swap2\n      pop\n        /* \"#utility.yul\":13872:13965   */\n      tag_513\n        /* \"#utility.yul\":13961:13964   */\n      dup3\n        /* \"#utility.yul\":13872:13965   */\n      tag_364\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":13990:13992   */\n      0x20\n        /* \"#utility.yul\":13985:13988   */\n      dup3\n        /* \"#utility.yul\":13981:13993   */\n      add\n        /* \"#utility.yul\":13974:13993   */\n      swap1\n      pop\n        /* \"#utility.yul\":13633:13999   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14005:14424   */\n    tag_249:\n        /* \"#utility.yul\":14171:14175   */\n      0x00\n        /* \"#utility.yul\":14209:14211   */\n      0x20\n        /* \"#utility.yul\":14198:14207   */\n      dup3\n        /* \"#utility.yul\":14194:14212   */\n      add\n        /* \"#utility.yul\":14186:14212   */\n      swap1\n      pop\n        /* \"#utility.yul\":14258:14267   */\n      dup2\n        /* \"#utility.yul\":14252:14256   */\n      dup2\n        /* \"#utility.yul\":14248:14268   */\n      sub\n        /* \"#utility.yul\":14244:14245   */\n      0x00\n        /* \"#utility.yul\":14233:14242   */\n      dup4\n        /* \"#utility.yul\":14229:14246   */\n      add\n        /* \"#utility.yul\":14222:14269   */\n      mstore\n        /* \"#utility.yul\":14286:14417   */\n      tag_515\n        /* \"#utility.yul\":14412:14416   */\n      dup2\n        /* \"#utility.yul\":14286:14417   */\n      tag_365\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":14278:14417   */\n      swap1\n      pop\n        /* \"#utility.yul\":14005:14424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14430:14602   */\n    tag_366:\n        /* \"#utility.yul\":14570:14594   */\n      0x6d617820746f6b656e20696d6974207265616368656400000000000000000000\n        /* \"#utility.yul\":14566:14567   */\n      0x00\n        /* \"#utility.yul\":14558:14564   */\n      dup3\n        /* \"#utility.yul\":14554:14568   */\n      add\n        /* \"#utility.yul\":14547:14595   */\n      mstore\n        /* \"#utility.yul\":14430:14602   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14608:14974   */\n    tag_367:\n        /* \"#utility.yul\":14750:14753   */\n      0x00\n        /* \"#utility.yul\":14771:14838   */\n      tag_518\n        /* \"#utility.yul\":14835:14837   */\n      0x16\n        /* \"#utility.yul\":14830:14833   */\n      dup4\n        /* \"#utility.yul\":14771:14838   */\n      tag_328\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":14764:14838   */\n      swap2\n      pop\n        /* \"#utility.yul\":14847:14940   */\n      tag_519\n        /* \"#utility.yul\":14936:14939   */\n      dup3\n        /* \"#utility.yul\":14847:14940   */\n      tag_366\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":14965:14967   */\n      0x20\n        /* \"#utility.yul\":14960:14963   */\n      dup3\n        /* \"#utility.yul\":14956:14968   */\n      add\n        /* \"#utility.yul\":14949:14968   */\n      swap1\n      pop\n        /* \"#utility.yul\":14608:14974   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14980:15399   */\n    tag_252:\n        /* \"#utility.yul\":15146:15150   */\n      0x00\n        /* \"#utility.yul\":15184:15186   */\n      0x20\n        /* \"#utility.yul\":15173:15182   */\n      dup3\n        /* \"#utility.yul\":15169:15187   */\n      add\n        /* \"#utility.yul\":15161:15187   */\n      swap1\n      pop\n        /* \"#utility.yul\":15233:15242   */\n      dup2\n        /* \"#utility.yul\":15227:15231   */\n      dup2\n        /* \"#utility.yul\":15223:15243   */\n      sub\n        /* \"#utility.yul\":15219:15220   */\n      0x00\n        /* \"#utility.yul\":15208:15217   */\n      dup4\n        /* \"#utility.yul\":15204:15221   */\n      add\n        /* \"#utility.yul\":15197:15244   */\n      mstore\n        /* \"#utility.yul\":15261:15392   */\n      tag_521\n        /* \"#utility.yul\":15387:15391   */\n      dup2\n        /* \"#utility.yul\":15261:15392   */\n      tag_367\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":15253:15392   */\n      swap1\n      pop\n        /* \"#utility.yul\":14980:15399   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15405:15586   */\n    tag_368:\n        /* \"#utility.yul\":15545:15578   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":15541:15542   */\n      0x00\n        /* \"#utility.yul\":15533:15539   */\n      dup3\n        /* \"#utility.yul\":15529:15543   */\n      add\n        /* \"#utility.yul\":15522:15579   */\n      mstore\n        /* \"#utility.yul\":15405:15586   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15592:15958   */\n    tag_369:\n        /* \"#utility.yul\":15734:15737   */\n      0x00\n        /* \"#utility.yul\":15755:15822   */\n      tag_524\n        /* \"#utility.yul\":15819:15821   */\n      0x1f\n        /* \"#utility.yul\":15814:15817   */\n      dup4\n        /* \"#utility.yul\":15755:15822   */\n      tag_328\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":15748:15822   */\n      swap2\n      pop\n        /* \"#utility.yul\":15831:15924   */\n      tag_525\n        /* \"#utility.yul\":15920:15923   */\n      dup3\n        /* \"#utility.yul\":15831:15924   */\n      tag_368\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":15949:15951   */\n      0x20\n        /* \"#utility.yul\":15944:15947   */\n      dup3\n        /* \"#utility.yul\":15940:15952   */\n      add\n        /* \"#utility.yul\":15933:15952   */\n      swap1\n      pop\n        /* \"#utility.yul\":15592:15958   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15964:16383   */\n    tag_275:\n        /* \"#utility.yul\":16130:16134   */\n      0x00\n        /* \"#utility.yul\":16168:16170   */\n      0x20\n        /* \"#utility.yul\":16157:16166   */\n      dup3\n        /* \"#utility.yul\":16153:16171   */\n      add\n        /* \"#utility.yul\":16145:16171   */\n      swap1\n      pop\n        /* \"#utility.yul\":16217:16226   */\n      dup2\n        /* \"#utility.yul\":16211:16215   */\n      dup2\n        /* \"#utility.yul\":16207:16227   */\n      sub\n        /* \"#utility.yul\":16203:16204   */\n      0x00\n        /* \"#utility.yul\":16192:16201   */\n      dup4\n        /* \"#utility.yul\":16188:16205   */\n      add\n        /* \"#utility.yul\":16181:16228   */\n      mstore\n        /* \"#utility.yul\":16245:16376   */\n      tag_527\n        /* \"#utility.yul\":16371:16375   */\n      dup2\n        /* \"#utility.yul\":16245:16376   */\n      tag_369\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":16237:16376   */\n      swap1\n      pop\n        /* \"#utility.yul\":15964:16383   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16389:16831   */\n    tag_287:\n        /* \"#utility.yul\":16538:16542   */\n      0x00\n        /* \"#utility.yul\":16576:16578   */\n      0x60\n        /* \"#utility.yul\":16565:16574   */\n      dup3\n        /* \"#utility.yul\":16561:16579   */\n      add\n        /* \"#utility.yul\":16553:16579   */\n      swap1\n      pop\n        /* \"#utility.yul\":16589:16660   */\n      tag_529\n        /* \"#utility.yul\":16657:16658   */\n      0x00\n        /* \"#utility.yul\":16646:16655   */\n      dup4\n        /* \"#utility.yul\":16642:16659   */\n      add\n        /* \"#utility.yul\":16633:16639   */\n      dup7\n        /* \"#utility.yul\":16589:16660   */\n      tag_345\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":16670:16742   */\n      tag_530\n        /* \"#utility.yul\":16738:16740   */\n      0x20\n        /* \"#utility.yul\":16727:16736   */\n      dup4\n        /* \"#utility.yul\":16723:16741   */\n      add\n        /* \"#utility.yul\":16714:16720   */\n      dup6\n        /* \"#utility.yul\":16670:16742   */\n      tag_333\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":16752:16824   */\n      tag_531\n        /* \"#utility.yul\":16820:16822   */\n      0x40\n        /* \"#utility.yul\":16809:16818   */\n      dup4\n        /* \"#utility.yul\":16805:16823   */\n      add\n        /* \"#utility.yul\":16796:16802   */\n      dup5\n        /* \"#utility.yul\":16752:16824   */\n      tag_333\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":16389:16831   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201e68689faab59f77a2bb4f3b877489ec46d2bf5de7f1c820060292283356da6264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1198": {
									"entryPoint": null,
									"id": 1198,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_303": {
									"entryPoint": null,
									"id": 303,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_401": {
									"entryPoint": null,
									"id": 401,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_704": {
									"entryPoint": 822,
									"id": 704,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 627,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_671": {
									"entryPoint": 955,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2557,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2062,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2446,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1684,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1639,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1492,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1822,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1963,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2000,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7961:8",
										"nodeType": "YulBlock",
										"src": "0:7961:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:81:8",
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nativeSrc": "389:65:8",
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:8",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nativeSrc": "400:54:8",
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nativeSrc": "511:51:8",
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nativeSrc": "521:35:8",
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nativeSrc": "532:24:8",
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:8",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:8",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nativeSrc": "611:79:8",
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:8",
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:8",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:8",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nativeSrc": "670:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nativeSrc": "670:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nativeSrc": "641:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nativeSrc": "631:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nativeSrc": "624:43:8",
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nativeSrc": "621:63:8",
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:8",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nativeSrc": "759:80:8",
													"nodeType": "YulBlock",
													"src": "759:80:8",
													"statements": [
														{
															"nativeSrc": "769:22:8",
															"nodeType": "YulAssignment",
															"src": "769:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:8"
																},
																"nativeSrc": "778:13:8",
																"nodeType": "YulFunctionCall",
																"src": "778:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:8"
																},
																"nativeSrc": "800:33:8",
																"nodeType": "YulFunctionCall",
																"src": "800:33:8"
															},
															"nativeSrc": "800:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:8",
														"nodeType": "YulTypedName",
														"src": "737:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:8",
														"nodeType": "YulTypedName",
														"src": "745:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:8",
														"nodeType": "YulTypedName",
														"src": "753:5:8",
														"type": ""
													}
												],
												"src": "696:143:8"
											},
											{
												"body": {
													"nativeSrc": "922:274:8",
													"nodeType": "YulBlock",
													"src": "922:274:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:8",
																"nodeType": "YulBlock",
																"src": "968:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:8"
																			},
																			"nativeSrc": "970:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:8"
																		},
																		"nativeSrc": "970:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:8"
																		},
																		"nativeSrc": "939:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:8",
																		"nodeType": "YulLiteral",
																		"src": "964:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:8"
																},
																"nativeSrc": "935:32:8",
																"nodeType": "YulFunctionCall",
																"src": "935:32:8"
															},
															"nativeSrc": "932:119:8",
															"nodeType": "YulIf",
															"src": "932:119:8"
														},
														{
															"nativeSrc": "1061:128:8",
															"nodeType": "YulBlock",
															"src": "1061:128:8",
															"statements": [
																{
																	"nativeSrc": "1076:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:8"
																				},
																				"nativeSrc": "1147:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:8"
																		},
																		"nativeSrc": "1115:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:8",
														"nodeType": "YulTypedName",
														"src": "892:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:8",
														"nodeType": "YulTypedName",
														"src": "903:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:8",
														"nodeType": "YulTypedName",
														"src": "915:6:8",
														"type": ""
													}
												],
												"src": "845:351:8"
											},
											{
												"body": {
													"nativeSrc": "1261:40:8",
													"nodeType": "YulBlock",
													"src": "1261:40:8",
													"statements": [
														{
															"nativeSrc": "1272:22:8",
															"nodeType": "YulAssignment",
															"src": "1272:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:8"
																},
																"nativeSrc": "1282:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:8",
														"nodeType": "YulTypedName",
														"src": "1244:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:8",
														"nodeType": "YulTypedName",
														"src": "1254:6:8",
														"type": ""
													}
												],
												"src": "1202:99:8"
											},
											{
												"body": {
													"nativeSrc": "1335:152:8",
													"nodeType": "YulBlock",
													"src": "1335:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:8",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:8"
																},
																"nativeSrc": "1345:88:8",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:8"
															},
															"nativeSrc": "1345:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:8"
																},
																"nativeSrc": "1442:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:8"
															},
															"nativeSrc": "1442:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:8"
																},
																"nativeSrc": "1466:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:8"
															},
															"nativeSrc": "1466:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:8"
											},
											{
												"body": {
													"nativeSrc": "1521:152:8",
													"nodeType": "YulBlock",
													"src": "1521:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:8",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:8"
																},
																"nativeSrc": "1531:88:8",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:8"
															},
															"nativeSrc": "1531:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:8"
																},
																"nativeSrc": "1628:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:8"
															},
															"nativeSrc": "1628:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:8"
																},
																"nativeSrc": "1652:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:8"
															},
															"nativeSrc": "1652:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:8"
											},
											{
												"body": {
													"nativeSrc": "1730:269:8",
													"nodeType": "YulBlock",
													"src": "1730:269:8",
													"statements": [
														{
															"nativeSrc": "1740:22:8",
															"nodeType": "YulAssignment",
															"src": "1740:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:8"
																},
																"nativeSrc": "1750:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:8"
																}
															]
														},
														{
															"nativeSrc": "1771:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:8"
																},
																"nativeSrc": "1797:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:8",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:8",
																"nodeType": "YulBlock",
																"src": "1848:51:8",
																"statements": [
																	{
																		"nativeSrc": "1862:27:8",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:8",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:8"
																			},
																			"nativeSrc": "1872:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:8"
																},
																"nativeSrc": "1821:26:8",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:8"
															},
															"nativeSrc": "1818:81:8",
															"nodeType": "YulIf",
															"src": "1818:81:8"
														},
														{
															"body": {
																"nativeSrc": "1951:42:8",
																"nodeType": "YulBlock",
																"src": "1951:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:8"
																			},
																			"nativeSrc": "1965:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:8"
																		},
																		"nativeSrc": "1965:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:8"
																		},
																		"nativeSrc": "1935:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:8"
																},
																"nativeSrc": "1912:38:8",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:8"
															},
															"nativeSrc": "1909:84:8",
															"nodeType": "YulIf",
															"src": "1909:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:8",
														"nodeType": "YulTypedName",
														"src": "1714:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:8",
														"nodeType": "YulTypedName",
														"src": "1723:6:8",
														"type": ""
													}
												],
												"src": "1679:320:8"
											},
											{
												"body": {
													"nativeSrc": "2059:87:8",
													"nodeType": "YulBlock",
													"src": "2059:87:8",
													"statements": [
														{
															"nativeSrc": "2069:11:8",
															"nodeType": "YulAssignment",
															"src": "2069:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:8",
																"nodeType": "YulIdentifier",
																"src": "2077:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:8"
																},
																"nativeSrc": "2090:14:8",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:8"
															},
															"nativeSrc": "2090:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:8"
														},
														{
															"nativeSrc": "2113:26:8",
															"nodeType": "YulAssignment",
															"src": "2113:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:8"
																},
																"nativeSrc": "2121:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:8",
														"nodeType": "YulTypedName",
														"src": "2046:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:8",
														"nodeType": "YulTypedName",
														"src": "2054:4:8",
														"type": ""
													}
												],
												"src": "2005:141:8"
											},
											{
												"body": {
													"nativeSrc": "2196:49:8",
													"nodeType": "YulBlock",
													"src": "2196:49:8",
													"statements": [
														{
															"nativeSrc": "2206:33:8",
															"nodeType": "YulAssignment",
															"src": "2206:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:8"
																		},
																		"nativeSrc": "2220:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:8"
																},
																"nativeSrc": "2216:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:8",
														"nodeType": "YulTypedName",
														"src": "2179:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:8",
														"nodeType": "YulTypedName",
														"src": "2189:6:8",
														"type": ""
													}
												],
												"src": "2152:93:8"
											},
											{
												"body": {
													"nativeSrc": "2304:54:8",
													"nodeType": "YulBlock",
													"src": "2304:54:8",
													"statements": [
														{
															"nativeSrc": "2314:37:8",
															"nodeType": "YulAssignment",
															"src": "2314:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:8"
																},
																"nativeSrc": "2335:16:8",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:8",
														"nodeType": "YulTypedName",
														"src": "2279:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:8",
														"nodeType": "YulTypedName",
														"src": "2285:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:8",
														"nodeType": "YulTypedName",
														"src": "2295:8:8",
														"type": ""
													}
												],
												"src": "2251:107:8"
											},
											{
												"body": {
													"nativeSrc": "2440:317:8",
													"nodeType": "YulBlock",
													"src": "2440:317:8",
													"statements": [
														{
															"nativeSrc": "2450:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:8"
																},
																"nativeSrc": "2467:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:8",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:8",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:8"
																},
																"nativeSrc": "2506:97:8",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:8",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:8",
															"nodeType": "YulAssignment",
															"src": "2612:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:8"
																},
																"nativeSrc": "2624:39:8",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:8"
																}
															]
														},
														{
															"nativeSrc": "2672:30:8",
															"nodeType": "YulAssignment",
															"src": "2672:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:8"
																		},
																		"nativeSrc": "2692:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:8"
																},
																"nativeSrc": "2681:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:8"
																}
															]
														},
														{
															"nativeSrc": "2711:40:8",
															"nodeType": "YulAssignment",
															"src": "2711:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:8"
																		},
																		"nativeSrc": "2731:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:8"
																},
																"nativeSrc": "2721:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:8",
														"nodeType": "YulTypedName",
														"src": "2401:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:8",
														"nodeType": "YulTypedName",
														"src": "2408:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:8",
														"nodeType": "YulTypedName",
														"src": "2420:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:8",
														"nodeType": "YulTypedName",
														"src": "2433:6:8",
														"type": ""
													}
												],
												"src": "2364:393:8"
											},
											{
												"body": {
													"nativeSrc": "2808:32:8",
													"nodeType": "YulBlock",
													"src": "2808:32:8",
													"statements": [
														{
															"nativeSrc": "2818:16:8",
															"nodeType": "YulAssignment",
															"src": "2818:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:8",
																"nodeType": "YulIdentifier",
																"src": "2829:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:8",
														"nodeType": "YulTypedName",
														"src": "2790:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:8",
														"nodeType": "YulTypedName",
														"src": "2800:7:8",
														"type": ""
													}
												],
												"src": "2763:77:8"
											},
											{
												"body": {
													"nativeSrc": "2878:28:8",
													"nodeType": "YulBlock",
													"src": "2878:28:8",
													"statements": [
														{
															"nativeSrc": "2888:12:8",
															"nodeType": "YulAssignment",
															"src": "2888:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:8",
																"nodeType": "YulIdentifier",
																"src": "2895:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:8",
														"nodeType": "YulTypedName",
														"src": "2864:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:8",
														"nodeType": "YulTypedName",
														"src": "2874:3:8",
														"type": ""
													}
												],
												"src": "2846:60:8"
											},
											{
												"body": {
													"nativeSrc": "2972:82:8",
													"nodeType": "YulBlock",
													"src": "2972:82:8",
													"statements": [
														{
															"nativeSrc": "2982:66:8",
															"nodeType": "YulAssignment",
															"src": "2982:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:8"
																				},
																				"nativeSrc": "3022:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:8"
																		},
																		"nativeSrc": "3013:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:8"
																},
																"nativeSrc": "2995:53:8",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:8",
														"nodeType": "YulTypedName",
														"src": "2952:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:8",
														"nodeType": "YulTypedName",
														"src": "2962:9:8",
														"type": ""
													}
												],
												"src": "2912:142:8"
											},
											{
												"body": {
													"nativeSrc": "3107:28:8",
													"nodeType": "YulBlock",
													"src": "3107:28:8",
													"statements": [
														{
															"nativeSrc": "3117:12:8",
															"nodeType": "YulAssignment",
															"src": "3117:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:8",
																"nodeType": "YulIdentifier",
																"src": "3124:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:8",
														"nodeType": "YulTypedName",
														"src": "3093:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:8",
														"nodeType": "YulTypedName",
														"src": "3103:3:8",
														"type": ""
													}
												],
												"src": "3060:75:8"
											},
											{
												"body": {
													"nativeSrc": "3217:193:8",
													"nodeType": "YulBlock",
													"src": "3217:193:8",
													"statements": [
														{
															"nativeSrc": "3227:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:8"
																},
																"nativeSrc": "3251:39:8",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:8",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:8"
																				},
																				"nativeSrc": "3340:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:8"
																				},
																				"nativeSrc": "3361:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:8"
																		},
																		"nativeSrc": "3312:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:8"
																},
																"nativeSrc": "3299:105:8",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:8"
															},
															"nativeSrc": "3299:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:8",
														"nodeType": "YulTypedName",
														"src": "3194:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:8",
														"nodeType": "YulTypedName",
														"src": "3200:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:8",
														"nodeType": "YulTypedName",
														"src": "3208:7:8",
														"type": ""
													}
												],
												"src": "3141:269:8"
											},
											{
												"body": {
													"nativeSrc": "3465:24:8",
													"nodeType": "YulBlock",
													"src": "3465:24:8",
													"statements": [
														{
															"nativeSrc": "3475:8:8",
															"nodeType": "YulAssignment",
															"src": "3475:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:8",
																"nodeType": "YulLiteral",
																"src": "3482:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:8",
														"nodeType": "YulTypedName",
														"src": "3461:3:8",
														"type": ""
													}
												],
												"src": "3416:73:8"
											},
											{
												"body": {
													"nativeSrc": "3548:136:8",
													"nodeType": "YulBlock",
													"src": "3548:136:8",
													"statements": [
														{
															"nativeSrc": "3558:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:8"
																},
																"nativeSrc": "3572:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:8",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:8"
																},
																"nativeSrc": "3613:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:8"
															},
															"nativeSrc": "3613:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:8",
														"nodeType": "YulTypedName",
														"src": "3534:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:8",
														"nodeType": "YulTypedName",
														"src": "3540:6:8",
														"type": ""
													}
												],
												"src": "3495:189:8"
											},
											{
												"body": {
													"nativeSrc": "3740:136:8",
													"nodeType": "YulBlock",
													"src": "3740:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:8",
																"nodeType": "YulBlock",
																"src": "3807:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:8"
																			},
																			"nativeSrc": "3821:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:8"
																		},
																		"nativeSrc": "3821:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:8"
																},
																"nativeSrc": "3757:14:8",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:8"
															},
															"nativeSrc": "3750:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:8",
																"nodeType": "YulBlock",
																"src": "3772:26:8",
																"statements": [
																	{
																		"nativeSrc": "3774:22:8",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:8"
																			},
																			"nativeSrc": "3783:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:8",
																"nodeType": "YulBlock",
																"src": "3754:2:8",
																"statements": []
															},
															"src": "3750:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:8",
														"nodeType": "YulTypedName",
														"src": "3728:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:8",
														"nodeType": "YulTypedName",
														"src": "3735:3:8",
														"type": ""
													}
												],
												"src": "3690:186:8"
											},
											{
												"body": {
													"nativeSrc": "3961:464:8",
													"nodeType": "YulBlock",
													"src": "3961:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:8",
																"nodeType": "YulBlock",
																"src": "3987:431:8",
																"statements": [
																	{
																		"nativeSrc": "4001:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:8"
																			},
																			"nativeSrc": "4017:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:8",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:8"
																					},
																					"nativeSrc": "4101:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:8"
																			},
																			"nativeSrc": "4087:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:8",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:8",
																			"nodeType": "YulBlock",
																			"src": "4288:27:8",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:8",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:8",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:8"
																			},
																			"nativeSrc": "4269:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:8"
																		},
																		"nativeSrc": "4266:49:8",
																		"nodeType": "YulIf",
																		"src": "4266:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:8"
																							},
																							"nativeSrc": "4384:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:8"
																					},
																					"nativeSrc": "4370:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:8"
																			},
																			"nativeSrc": "4328:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:8"
																		},
																		"nativeSrc": "4328:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:8"
																},
																"nativeSrc": "3975:11:8",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:8"
															},
															"nativeSrc": "3972:446:8",
															"nodeType": "YulIf",
															"src": "3972:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:8",
														"nodeType": "YulTypedName",
														"src": "3937:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:8",
														"nodeType": "YulTypedName",
														"src": "3944:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:8",
														"nodeType": "YulTypedName",
														"src": "3949:10:8",
														"type": ""
													}
												],
												"src": "3882:543:8"
											},
											{
												"body": {
													"nativeSrc": "4494:54:8",
													"nodeType": "YulBlock",
													"src": "4494:54:8",
													"statements": [
														{
															"nativeSrc": "4504:37:8",
															"nodeType": "YulAssignment",
															"src": "4504:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:8"
																},
																"nativeSrc": "4525:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:8",
														"nodeType": "YulTypedName",
														"src": "4469:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:8",
														"nodeType": "YulTypedName",
														"src": "4475:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:8",
														"nodeType": "YulTypedName",
														"src": "4485:8:8",
														"type": ""
													}
												],
												"src": "4431:117:8"
											},
											{
												"body": {
													"nativeSrc": "4605:118:8",
													"nodeType": "YulBlock",
													"src": "4605:118:8",
													"statements": [
														{
															"nativeSrc": "4615:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:8"
																				},
																				"nativeSrc": "4660:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:8"
																				},
																				"nativeSrc": "4675:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:8"
																		},
																		"nativeSrc": "4631:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:8"
																},
																"nativeSrc": "4627:56:8",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:8",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:8",
															"nodeType": "YulAssignment",
															"src": "4692:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:8"
																},
																"nativeSrc": "4702:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:8",
														"nodeType": "YulTypedName",
														"src": "4582:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:8",
														"nodeType": "YulTypedName",
														"src": "4588:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:8",
														"nodeType": "YulTypedName",
														"src": "4598:6:8",
														"type": ""
													}
												],
												"src": "4554:169:8"
											},
											{
												"body": {
													"nativeSrc": "4809:214:8",
													"nodeType": "YulBlock",
													"src": "4809:214:8",
													"statements": [
														{
															"nativeSrc": "4942:37:8",
															"nodeType": "YulAssignment",
															"src": "4942:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:8"
																},
																"nativeSrc": "4950:29:8",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:8"
																}
															]
														},
														{
															"nativeSrc": "4988:29:8",
															"nodeType": "YulAssignment",
															"src": "4988:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:8"
																		},
																		"nativeSrc": "5005:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:8"
																},
																"nativeSrc": "4996:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:8",
														"nodeType": "YulTypedName",
														"src": "4790:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:8",
														"nodeType": "YulTypedName",
														"src": "4796:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:8",
														"nodeType": "YulTypedName",
														"src": "4804:4:8",
														"type": ""
													}
												],
												"src": "4728:295:8"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:8",
													"nodeType": "YulBlock",
													"src": "5120:1303:8",
													"statements": [
														{
															"nativeSrc": "5131:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:8"
																},
																"nativeSrc": "5145:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:8",
																"nodeType": "YulBlock",
																"src": "5267:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:8"
																			},
																			"nativeSrc": "5269:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:8"
																		},
																		"nativeSrc": "5269:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:8",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:8"
																},
																"nativeSrc": "5236:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:8"
															},
															"nativeSrc": "5233:56:8",
															"nodeType": "YulIf",
															"src": "5233:56:8"
														},
														{
															"nativeSrc": "5299:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:8"
																		},
																		"nativeSrc": "5339:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:8"
																},
																"nativeSrc": "5313:38:8",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:8"
																},
																"nativeSrc": "5398:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:8"
															},
															"nativeSrc": "5398:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:8"
														},
														{
															"nativeSrc": "5475:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:8",
																"nodeType": "YulLiteral",
																"src": "5492:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:8",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:8",
															"nodeType": "YulAssignment",
															"src": "5503:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:8",
																"nodeType": "YulLiteral",
																"src": "5516:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:8",
																		"nodeType": "YulBlock",
																		"src": "5567:611:8",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:8",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:8"
																							},
																							"nativeSrc": "5608:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:8"
																					},
																					"nativeSrc": "5596:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:8",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:8"
																					},
																					"nativeSrc": "5646:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:8",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:8",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:8",
																					"nodeType": "YulBlock",
																					"src": "5764:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:8"
																												},
																												"nativeSrc": "5803:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:8"
																										},
																										"nativeSrc": "5797:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:8"
																								},
																								"nativeSrc": "5782:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:8"
																							},
																							"nativeSrc": "5782:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:8"
																						},
																						{
																							"nativeSrc": "5841:24:8",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:8",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:8"
																								},
																								"nativeSrc": "5851:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:8",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:8",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:8"
																								},
																								"nativeSrc": "5895:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:8"
																					},
																					"nativeSrc": "5727:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:8"
																				},
																				"nativeSrc": "5719:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:8",
																					"nodeType": "YulBlock",
																					"src": "5742:21:8",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:8",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:8",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:8"
																								},
																								"nativeSrc": "5749:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:8",
																					"nodeType": "YulBlock",
																					"src": "5723:3:8",
																					"statements": []
																				},
																				"src": "5719:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:8",
																					"nodeType": "YulBlock",
																					"src": "5963:156:8",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:8"
																										},
																										"nativeSrc": "6004:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:8"
																								},
																								"nativeSrc": "5998:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:8",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:8",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:8"
																												},
																												"nativeSrc": "6086:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:8"
																										},
																										"nativeSrc": "6056:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:8"
																								},
																								"nativeSrc": "6041:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:8"
																							},
																							"nativeSrc": "6041:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:8"
																					},
																					"nativeSrc": "5943:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:8"
																				},
																				"nativeSrc": "5940:179:8",
																				"nodeType": "YulIf",
																				"src": "5940:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:8",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:8"
																									},
																									"nativeSrc": "6149:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:8",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:8"
																							},
																							"nativeSrc": "6145:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:8"
																					},
																					"nativeSrc": "6132:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:8"
																				},
																				"nativeSrc": "6132:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:8"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:8",
																	"nodeType": "YulCase",
																	"src": "5560:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:8",
																		"nodeType": "YulBlock",
																		"src": "6195:222:8",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:8",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:8",
																					"nodeType": "YulBlock",
																					"src": "6246:67:8",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:8",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:8"
																										},
																										"nativeSrc": "6279:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:8"
																								},
																								"nativeSrc": "6273:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:8"
																				},
																				"nativeSrc": "6236:77:8",
																				"nodeType": "YulIf",
																				"src": "6236:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:8"
																							},
																							"nativeSrc": "6339:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:8"
																					},
																					"nativeSrc": "6326:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:8"
																				},
																				"nativeSrc": "6326:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:8"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:8",
																	"nodeType": "YulCase",
																	"src": "6187:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:8"
																},
																"nativeSrc": "5537:14:8",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:8"
															},
															"nativeSrc": "5530:887:8",
															"nodeType": "YulSwitch",
															"src": "5530:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:8",
														"nodeType": "YulTypedName",
														"src": "5109:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:8",
														"nodeType": "YulTypedName",
														"src": "5115:3:8",
														"type": ""
													}
												],
												"src": "5028:1395:8"
											},
											{
												"body": {
													"nativeSrc": "6494:53:8",
													"nodeType": "YulBlock",
													"src": "6494:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:8"
																		},
																		"nativeSrc": "6516:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:8"
																},
																"nativeSrc": "6504:37:8",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:8"
															},
															"nativeSrc": "6504:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:8",
														"nodeType": "YulTypedName",
														"src": "6482:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:8",
														"nodeType": "YulTypedName",
														"src": "6489:3:8",
														"type": ""
													}
												],
												"src": "6429:118:8"
											},
											{
												"body": {
													"nativeSrc": "6651:124:8",
													"nodeType": "YulBlock",
													"src": "6651:124:8",
													"statements": [
														{
															"nativeSrc": "6661:26:8",
															"nodeType": "YulAssignment",
															"src": "6661:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:8"
																},
																"nativeSrc": "6669:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:8"
																		},
																		"nativeSrc": "6750:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:8"
																},
																"nativeSrc": "6697:71:8",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:8"
															},
															"nativeSrc": "6697:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:8",
														"nodeType": "YulTypedName",
														"src": "6623:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:8",
														"nodeType": "YulTypedName",
														"src": "6635:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:8",
														"nodeType": "YulTypedName",
														"src": "6646:4:8",
														"type": ""
													}
												],
												"src": "6553:222:8"
											},
											{
												"body": {
													"nativeSrc": "6809:152:8",
													"nodeType": "YulBlock",
													"src": "6809:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6826:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6826:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6829:77:8",
																		"nodeType": "YulLiteral",
																		"src": "6829:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6819:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6819:6:8"
																},
																"nativeSrc": "6819:88:8",
																"nodeType": "YulFunctionCall",
																"src": "6819:88:8"
															},
															"nativeSrc": "6819:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "6819:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6923:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6923:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6926:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6926:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6916:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6916:6:8"
																},
																"nativeSrc": "6916:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6916:15:8"
															},
															"nativeSrc": "6916:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6916:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6947:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6947:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6950:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6950:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6940:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6940:6:8"
																},
																"nativeSrc": "6940:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6940:15:8"
															},
															"nativeSrc": "6940:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6940:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6781:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "6781:180:8"
											},
											{
												"body": {
													"nativeSrc": "7011:147:8",
													"nodeType": "YulBlock",
													"src": "7011:147:8",
													"statements": [
														{
															"nativeSrc": "7021:25:8",
															"nodeType": "YulAssignment",
															"src": "7021:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7044:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7044:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7026:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7026:17:8"
																},
																"nativeSrc": "7026:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7026:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7021:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7021:1:8"
																}
															]
														},
														{
															"nativeSrc": "7055:25:8",
															"nodeType": "YulAssignment",
															"src": "7055:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7078:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7078:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7060:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7060:17:8"
																},
																"nativeSrc": "7060:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7060:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7055:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7055:1:8"
																}
															]
														},
														{
															"nativeSrc": "7089:16:8",
															"nodeType": "YulAssignment",
															"src": "7089:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7100:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7100:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7103:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7103:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7096:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7096:3:8"
																},
																"nativeSrc": "7096:9:8",
																"nodeType": "YulFunctionCall",
																"src": "7096:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7089:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7089:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7129:22:8",
																"nodeType": "YulBlock",
																"src": "7129:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7131:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7131:16:8"
																			},
																			"nativeSrc": "7131:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7131:18:8"
																		},
																		"nativeSrc": "7131:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7131:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7121:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7121:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7124:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7124:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7118:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7118:2:8"
																},
																"nativeSrc": "7118:10:8",
																"nodeType": "YulFunctionCall",
																"src": "7118:10:8"
															},
															"nativeSrc": "7115:36:8",
															"nodeType": "YulIf",
															"src": "7115:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6967:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6998:1:8",
														"nodeType": "YulTypedName",
														"src": "6998:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7001:1:8",
														"nodeType": "YulTypedName",
														"src": "7001:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7007:3:8",
														"nodeType": "YulTypedName",
														"src": "7007:3:8",
														"type": ""
													}
												],
												"src": "6967:191:8"
											},
											{
												"body": {
													"nativeSrc": "7229:53:8",
													"nodeType": "YulBlock",
													"src": "7229:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7246:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7246:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7269:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7269:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7251:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "7251:17:8"
																		},
																		"nativeSrc": "7251:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7251:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7239:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7239:6:8"
																},
																"nativeSrc": "7239:37:8",
																"nodeType": "YulFunctionCall",
																"src": "7239:37:8"
															},
															"nativeSrc": "7239:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "7239:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7164:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7217:5:8",
														"nodeType": "YulTypedName",
														"src": "7217:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7224:3:8",
														"nodeType": "YulTypedName",
														"src": "7224:3:8",
														"type": ""
													}
												],
												"src": "7164:118:8"
											},
											{
												"body": {
													"nativeSrc": "7442:288:8",
													"nodeType": "YulBlock",
													"src": "7442:288:8",
													"statements": [
														{
															"nativeSrc": "7452:26:8",
															"nodeType": "YulAssignment",
															"src": "7452:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7464:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7464:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7475:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7475:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7460:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7460:3:8"
																},
																"nativeSrc": "7460:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7460:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7452:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7452:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7532:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7532:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7545:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7545:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7556:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7556:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7541:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7541:3:8"
																		},
																		"nativeSrc": "7541:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7541:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7488:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7488:43:8"
																},
																"nativeSrc": "7488:71:8",
																"nodeType": "YulFunctionCall",
																"src": "7488:71:8"
															},
															"nativeSrc": "7488:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "7488:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7613:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7613:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7626:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7626:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7637:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7637:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7622:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7622:3:8"
																		},
																		"nativeSrc": "7622:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7622:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7569:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7569:43:8"
																},
																"nativeSrc": "7569:72:8",
																"nodeType": "YulFunctionCall",
																"src": "7569:72:8"
															},
															"nativeSrc": "7569:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "7569:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7695:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7695:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7708:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7708:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7719:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7719:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7704:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7704:3:8"
																		},
																		"nativeSrc": "7704:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7704:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7651:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7651:43:8"
																},
																"nativeSrc": "7651:72:8",
																"nodeType": "YulFunctionCall",
																"src": "7651:72:8"
															},
															"nativeSrc": "7651:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "7651:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7288:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7398:9:8",
														"nodeType": "YulTypedName",
														"src": "7398:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7410:6:8",
														"nodeType": "YulTypedName",
														"src": "7410:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7418:6:8",
														"nodeType": "YulTypedName",
														"src": "7418:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7426:6:8",
														"nodeType": "YulTypedName",
														"src": "7426:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7437:4:8",
														"nodeType": "YulTypedName",
														"src": "7437:4:8",
														"type": ""
													}
												],
												"src": "7288:442:8"
											},
											{
												"body": {
													"nativeSrc": "7834:124:8",
													"nodeType": "YulBlock",
													"src": "7834:124:8",
													"statements": [
														{
															"nativeSrc": "7844:26:8",
															"nodeType": "YulAssignment",
															"src": "7844:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7856:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7856:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7867:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7867:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7852:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7852:3:8"
																},
																"nativeSrc": "7852:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7852:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7844:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7844:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7924:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7924:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7937:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7937:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7948:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7948:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7933:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7933:3:8"
																		},
																		"nativeSrc": "7933:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7933:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7880:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7880:43:8"
																},
																"nativeSrc": "7880:71:8",
																"nodeType": "YulFunctionCall",
																"src": "7880:71:8"
															},
															"nativeSrc": "7880:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "7880:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "7736:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7806:9:8",
														"nodeType": "YulTypedName",
														"src": "7806:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7818:6:8",
														"nodeType": "YulTypedName",
														"src": "7818:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7829:4:8",
														"nodeType": "YulTypedName",
														"src": "7829:4:8",
														"type": ""
													}
												],
												"src": "7736:222:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600160085560016009556a52b7d2dcc80cd2e4000000600d556a52b7d2dcc80cd2e4000000600f556301da9c006011556a3e09de2596099e2b00000060125534801561004e575f80fd5b5060405161298d38038061298d83398181016040528101906100709190610632565b336040518060400160405280600a81526020017f584f524120546f6b656e000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f584f52410000000000000000000000000000000000000000000000000000000081525081600390816100ec9190610897565b5080600490816100fc9190610897565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361016f575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101669190610975565b60405180910390fd5b61017e8161027360201b60201c565b5060016006819055506101b773dd870fa1b7c4700f2bd7f44238821c26f73921486b01743b34e18439b50200000061033660201b60201c565b6101d2816a7c13bc4b2c133c5600000061033660201b60201c565b6102017314723a09acff6d2a60dcdf7aa4aff308fddc160c6a14adf4b7320334b900000061033660201b60201c565b61023073ca35b7d915458ef540ade6068dfe2f44e8fa733c6a52b7d2dcc80cd2e400000061033660201b60201c565b61025f730a098eda01ce92ff4a4ccb7a4fffb5a43ebc70dc6a52b7d2dcc80cd2e400000061033660201b60201c565b42600c8190555042600e8190555050610a4b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103a6575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161039d9190610975565b60405180910390fd5b6103b75f83836103bb60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361040b578060025f8282546103ff91906109bb565b925050819055506104d9565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610494578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161048b939291906109fd565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610520578060025f828254039250508190555061056a565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105c79190610a32565b60405180910390a3505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610601826105d8565b9050919050565b610611816105f7565b811461061b575f80fd5b50565b5f8151905061062c81610608565b92915050565b5f60208284031215610647576106466105d4565b5b5f6106548482850161061e565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806106d857607f821691505b6020821081036106eb576106ea610694565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261074d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610712565b6107578683610712565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61079b6107966107918461076f565b610778565b61076f565b9050919050565b5f819050919050565b6107b483610781565b6107c86107c0826107a2565b84845461071e565b825550505050565b5f90565b6107dc6107d0565b6107e78184846107ab565b505050565b5b8181101561080a576107ff5f826107d4565b6001810190506107ed565b5050565b601f82111561084f57610820816106f1565b61082984610703565b81016020851015610838578190505b61084c61084485610703565b8301826107ec565b50505b505050565b5f82821c905092915050565b5f61086f5f1984600802610854565b1980831691505092915050565b5f6108878383610860565b9150826002028217905092915050565b6108a08261065d565b67ffffffffffffffff8111156108b9576108b8610667565b5b6108c382546106c1565b6108ce82828561080e565b5f60209050601f8311600181146108ff575f84156108ed578287015190505b6108f7858261087c565b86555061095e565b601f19841661090d866106f1565b5f5b828110156109345784890151825560018201915060208501945060208101905061090f565b86831015610951578489015161094d601f891682610860565b8355505b6001600288020188555050505b505050505050565b61096f816105f7565b82525050565b5f6020820190506109885f830184610966565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6109c58261076f565b91506109d08361076f565b92508282019050808211156109e8576109e761098e565b5b92915050565b6109f78161076f565b82525050565b5f606082019050610a105f830186610966565b610a1d60208301856109ee565b610a2a60408301846109ee565b949350505050565b5f602082019050610a455f8301846109ee565b92915050565b611f3580610a585f395ff3fe608060405234801561000f575f80fd5b5060043610610204575f3560e01c8063715018a611610118578063a9059cbb116100ab578063dc31adee1161007a578063dc31adee14610578578063dd62ed3e14610582578063df7f989f146105b2578063e9cbd822146105d0578063f2fde38b146105ee57610204565b8063a9059cbb146104ee578063b0a65b3e1461051e578063ba115cb61461053c578063cc1776d31461055a57610204565b80638da5cb5b116100e75780638da5cb5b14610478578063926165d71461049657806395d89b41146104b2578063a6f59846146104d057610204565b8063715018a6146104285780637b0a47ee146104325780638b887e7e146104505780638cbb6df71461045a57610204565b80632cca9dfd1161019b5780633adde9c11161016a5780633adde9c1146103805780634f0dbaf21461039e5780634f7041a5146103bc57806356bf536c146103da57806370a08231146103f857610204565b80632cca9dfd146103085780632ff2e9dc14610326578063313ce56714610344578063329430ca1461036257610204565b806318160ddd116101d757806318160ddd1461027e5780631f6722b61461029c57806323256627146102ba57806323b872dd146102d857610204565b806306fdde03146102085780630733f92b14610226578063095ea7b31461024457806314c411c714610274575b5f80fd5b61021061060a565b60405161021d919061172c565b60405180910390f35b61022e61069a565b60405161023b9190611764565b60405180910390f35b61025e60048036038101906102599190611805565b6106a0565b60405161026b919061185d565b60405180910390f35b61027c6106c2565b005b610286610843565b6040516102939190611764565b60405180910390f35b6102a461084c565b6040516102b19190611764565b60405180910390f35b6102c2610852565b6040516102cf9190611764565b60405180910390f35b6102f260048036038101906102ed9190611876565b610857565b6040516102ff919061185d565b60405180910390f35b610310610885565b60405161031d91906118d5565b60405180910390f35b61032e61089d565b60405161033b9190611764565b60405180910390f35b61034c6108ad565b6040516103599190611909565b60405180910390f35b61036a6108b5565b6040516103779190611764565b60405180910390f35b6103886108bb565b6040516103959190611764565b60405180910390f35b6103a66108c3565b6040516103b391906118d5565b60405180910390f35b6103c46108db565b6040516103d19190611764565b60405180910390f35b6103e26108e1565b6040516103ef91906118d5565b60405180910390f35b610412600480360381019061040d9190611922565b6108f9565b60405161041f9190611764565b60405180910390f35b61043061093e565b005b61043a610951565b6040516104479190611764565b60405180910390f35b610458610957565b005b610462610a02565b60405161046f9190611764565b60405180910390f35b610480610a08565b60405161048d91906118d5565b60405180910390f35b6104b060048036038101906104ab919061194d565b610a30565b005b6104ba610ac3565b6040516104c7919061172c565b60405180910390f35b6104d8610b53565b6040516104e59190611764565b60405180910390f35b61050860048036038101906105039190611805565b610b59565b604051610515919061185d565b60405180910390f35b610526610b7b565b60405161053391906118d5565b60405180910390f35b610544610b93565b60405161055191906118d5565b60405180910390f35b610562610bab565b60405161056f9190611764565b60405180910390f35b610580610bb1565b005b61059c6004803603810190610597919061198b565b610ccd565b6040516105a99190611764565b60405180910390f35b6105ba610d4f565b6040516105c791906118d5565b60405180910390f35b6105d8610d67565b6040516105e59190611a24565b60405180910390f35b61060860048036038101906106039190611922565b610d8c565b005b60606003805461061990611a6a565b80601f016020809104026020016040519081016040528092919081815260200182805461064590611a6a565b80156106905780601f1061066757610100808354040283529160200191610690565b820191905f5260205f20905b81548152906001019060200180831161067357829003601f168201915b5050505050905090565b60135481565b5f806106aa610e10565b90506106b7818585610e17565b600191505092915050565b6106ca610e29565b6106d2610eb0565b6302c7ea00600c546106e49190611ac7565b421015610726576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071d90611b44565b60405180910390fd5b5f6302c7ea00600c546107399190611ac7565b426107449190611b62565b90505f630784ce0082600f5461075a9190611b95565b6107649190611c03565b90505f601054826107759190611b62565b90508060105f8282546107889190611ac7565b925050819055505f82116107d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c890611c7d565b60405180910390fd5b600f546010541115610818576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080f90611ce5565b60405180910390fd5b610836734b0897b0513fdc7c541b6d9d7e929c4e5364d2db82610eff565b505050610841610f7e565b565b5f600254905090565b60125481565b601981565b5f80610861610e10565b905061086e858285610f88565b61087985858561101a565b60019150509392505050565b73583031d1113ad414f02576bd6afabfb30214022581565b6b033b2e3c9fd0803ce800000081565b5f6012905090565b600f5481565b6301e1338081565b73dd870fa1b7c4700f2bd7f44238821c26f739214881565b60085481565b73ca35b7d915458ef540ade6068dfe2f44e8fa733c81565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610946610e29565b61094f5f6110a2565b565b600b5481565b6301e13380600a546109699190611ac7565b4210156109ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a290611d4d565b60405180910390fd5b6002600b546109ba9190611c03565b600b8190555042600a819055507ff92b4d3a8d8ba77170dd5cf6b65260191092093f924263a88c3c60dd8495f091600b546040516109f89190611764565b60405180910390a1565b600a5481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610a38610e29565b81600b819055508060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600a819055507fde2d0064b82669942e6a9cff523014473c366efc3cf147b14e0b1f4cbecc4bc88282604051610ab7929190611d6b565b60405180910390a15050565b606060048054610ad290611a6a565b80601f0160208091040260200160405190810160405280929190818152602001828054610afe90611a6a565b8015610b495780601f10610b2057610100808354040283529160200191610b49565b820191905f5260205f20905b815481529060010190602001808311610b2c57829003601f168201915b5050505050905090565b60105481565b5f80610b63610e10565b9050610b7081858561101a565b600191505092915050565b730a098eda01ce92ff4a4ccb7a4fffb5a43ebc70dc81565b7314723a09acff6d2a60dcdf7aa4aff308fddc160c81565b60095481565b610bb9610e29565b610bc1610eb0565b5f600e5442610bd09190611b62565b90505f60115482601254610be49190611b95565b610bee9190611c03565b90505f60135482610bff9190611b62565b90508060135f828254610c129190611ac7565b925050819055505f8211610c5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5290611ddc565b60405180910390fd5b6012546013541115610ca2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9990611e44565b60405180910390fd5b610cc07314723a09acff6d2a60dcdf7aa4aff308fddc160c82610eff565b505050610ccb610f7e565b565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b734b0897b0513fdc7c541b6d9d7e929c4e5364d2db81565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610d94610e29565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e04575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610dfb91906118d5565b60405180910390fd5b610e0d816110a2565b50565b5f33905090565b610e248383836001611165565b505050565b610e31610e10565b73ffffffffffffffffffffffffffffffffffffffff16610e4f610a08565b73ffffffffffffffffffffffffffffffffffffffff1614610eae57610e72610e10565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610ea591906118d5565b60405180910390fd5b565b600260065403610ef5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eec90611eac565b60405180910390fd5b6002600681905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f6f575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610f6691906118d5565b60405180910390fd5b610f7a5f8383611334565b5050565b6001600681905550565b5f610f938484610ccd565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146110145781811015611005578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610ffc93929190611eca565b60405180910390fd5b61101384848484035f611165565b5b50505050565b5f60643073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146110585760085461105c565b6009545b836110679190611b95565b6110719190611c03565b9050611089848483856110849190611b62565b61154d565b5f81111561109c5761109b848261163d565b5b50505050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036111d5575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016111cc91906118d5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611245575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161123c91906118d5565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561132e578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113259190611764565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611384578060025f8282546113789190611ac7565b92505081905550611452565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561140d578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161140493929190611eca565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611499578060025f82825403925050819055506114e3565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516115409190611764565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115bd575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016115b491906118d5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361162d575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161162491906118d5565b60405180910390fd5b611638838383611334565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116ad575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016116a491906118d5565b60405180910390fd5b6116b8825f83611334565b5050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6116fe826116bc565b61170881856116c6565b93506117188185602086016116d6565b611721816116e4565b840191505092915050565b5f6020820190508181035f83015261174481846116f4565b905092915050565b5f819050919050565b61175e8161174c565b82525050565b5f6020820190506117775f830184611755565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6117aa82611781565b9050919050565b6117ba816117a0565b81146117c4575f80fd5b50565b5f813590506117d5816117b1565b92915050565b6117e48161174c565b81146117ee575f80fd5b50565b5f813590506117ff816117db565b92915050565b5f806040838503121561181b5761181a61177d565b5b5f611828858286016117c7565b9250506020611839858286016117f1565b9150509250929050565b5f8115159050919050565b61185781611843565b82525050565b5f6020820190506118705f83018461184e565b92915050565b5f805f6060848603121561188d5761188c61177d565b5b5f61189a868287016117c7565b93505060206118ab868287016117c7565b92505060406118bc868287016117f1565b9150509250925092565b6118cf816117a0565b82525050565b5f6020820190506118e85f8301846118c6565b92915050565b5f60ff82169050919050565b611903816118ee565b82525050565b5f60208201905061191c5f8301846118fa565b92915050565b5f602082840312156119375761193661177d565b5b5f611944848285016117c7565b91505092915050565b5f80604083850312156119635761196261177d565b5b5f611970858286016117f1565b9250506020611981858286016117c7565b9150509250929050565b5f80604083850312156119a1576119a061177d565b5b5f6119ae858286016117c7565b92505060206119bf858286016117c7565b9150509250929050565b5f819050919050565b5f6119ec6119e76119e284611781565b6119c9565b611781565b9050919050565b5f6119fd826119d2565b9050919050565b5f611a0e826119f3565b9050919050565b611a1e81611a04565b82525050565b5f602082019050611a375f830184611a15565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611a8157607f821691505b602082108103611a9457611a93611a3d565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611ad18261174c565b9150611adc8361174c565b9250828201905080821115611af457611af3611a9a565b5b92915050565b7f5465616d2076657374696e6720636c696666206e6f74207265616368656400005f82015250565b5f611b2e601e836116c6565b9150611b3982611afa565b602082019050919050565b5f6020820190508181035f830152611b5b81611b22565b9050919050565b5f611b6c8261174c565b9150611b778361174c565b9250828203905081811115611b8f57611b8e611a9a565b5b92915050565b5f611b9f8261174c565b9150611baa8361174c565b9250828202611bb88161174c565b91508282048414831517611bcf57611bce611a9a565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611c0d8261174c565b9150611c188361174c565b925082611c2857611c27611bd6565b5b828204905092915050565b7f4e6f20746f6b656e7320617661696c61626c6520666f722072656c65617365005f82015250565b5f611c67601f836116c6565b9150611c7282611c33565b602082019050919050565b5f6020820190508181035f830152611c9481611c5b565b9050919050565b7f6d617820746f6b656e206c696d697420726561636865640000000000000000005f82015250565b5f611ccf6017836116c6565b9150611cda82611c9b565b602082019050919050565b5f6020820190508181035f830152611cfc81611cc3565b9050919050565b7f48616c76696e67206e6f742064756520796574000000000000000000000000005f82015250565b5f611d376013836116c6565b9150611d4282611d03565b602082019050919050565b5f6020820190508181035f830152611d6481611d2b565b9050919050565b5f604082019050611d7e5f830185611755565b611d8b60208301846118c6565b9392505050565b7f6e6f20746f6b656e20617661696c61626c6520666f722072656c6561736500005f82015250565b5f611dc6601e836116c6565b9150611dd182611d92565b602082019050919050565b5f6020820190508181035f830152611df381611dba565b9050919050565b7f6d617820746f6b656e20696d69742072656163686564000000000000000000005f82015250565b5f611e2e6016836116c6565b9150611e3982611dfa565b602082019050919050565b5f6020820190508181035f830152611e5b81611e22565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611e96601f836116c6565b9150611ea182611e62565b602082019050919050565b5f6020820190508181035f830152611ec381611e8a565b9050919050565b5f606082019050611edd5f8301866118c6565b611eea6020830185611755565b611ef76040830184611755565b94935050505056fea26469706673582212201e68689faab59f77a2bb4f3b877489ec46d2bf5de7f1c820060292283356da6264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x8 SSTORE PUSH1 0x1 PUSH1 0x9 SSTORE PUSH11 0x52B7D2DCC80CD2E4000000 PUSH1 0xD SSTORE PUSH11 0x52B7D2DCC80CD2E4000000 PUSH1 0xF SSTORE PUSH4 0x1DA9C00 PUSH1 0x11 SSTORE PUSH11 0x3E09DE2596099E2B000000 PUSH1 0x12 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x4E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x298D CODESIZE SUB DUP1 PUSH2 0x298D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x632 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x584F524120546F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x584F524100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x897 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x897 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x975 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17E DUP2 PUSH2 0x273 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x1B7 PUSH20 0xDD870FA1B7C4700F2BD7F44238821C26F7392148 PUSH12 0x1743B34E18439B502000000 PUSH2 0x336 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1D2 DUP2 PUSH11 0x7C13BC4B2C133C56000000 PUSH2 0x336 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x201 PUSH20 0x14723A09ACFF6D2A60DCDF7AA4AFF308FDDC160C PUSH11 0x14ADF4B7320334B9000000 PUSH2 0x336 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x230 PUSH20 0xCA35B7D915458EF540ADE6068DFE2F44E8FA733C PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x336 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x25F PUSH20 0xA098EDA01CE92FF4A4CCB7A4FFFB5A43EBC70DC PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x336 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST TIMESTAMP PUSH1 0xC DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xE DUP2 SWAP1 SSTORE POP POP PUSH2 0xA4B JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3A6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x975 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3B7 PUSH0 DUP4 DUP4 PUSH2 0x3BB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x40B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0x9BB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4D9 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x494 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x520 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x56A JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0xA32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x601 DUP3 PUSH2 0x5D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x611 DUP2 PUSH2 0x5F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x61B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x62C DUP2 PUSH2 0x608 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x647 JUMPI PUSH2 0x646 PUSH2 0x5D4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x654 DUP5 DUP3 DUP6 ADD PUSH2 0x61E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x6D8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x6EB JUMPI PUSH2 0x6EA PUSH2 0x694 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x74D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x712 JUMP JUMPDEST PUSH2 0x757 DUP7 DUP4 PUSH2 0x712 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x79B PUSH2 0x796 PUSH2 0x791 DUP5 PUSH2 0x76F JUMP JUMPDEST PUSH2 0x778 JUMP JUMPDEST PUSH2 0x76F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7B4 DUP4 PUSH2 0x781 JUMP JUMPDEST PUSH2 0x7C8 PUSH2 0x7C0 DUP3 PUSH2 0x7A2 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x71E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x7DC PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x7E7 DUP2 DUP5 DUP5 PUSH2 0x7AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x80A JUMPI PUSH2 0x7FF PUSH0 DUP3 PUSH2 0x7D4 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x7ED JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x84F JUMPI PUSH2 0x820 DUP2 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x829 DUP5 PUSH2 0x703 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x838 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x84C PUSH2 0x844 DUP6 PUSH2 0x703 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x7EC JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x86F PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x854 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x887 DUP4 DUP4 PUSH2 0x860 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8A0 DUP3 PUSH2 0x65D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8B9 JUMPI PUSH2 0x8B8 PUSH2 0x667 JUMP JUMPDEST JUMPDEST PUSH2 0x8C3 DUP3 SLOAD PUSH2 0x6C1 JUMP JUMPDEST PUSH2 0x8CE DUP3 DUP3 DUP6 PUSH2 0x80E JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x8FF JUMPI PUSH0 DUP5 ISZERO PUSH2 0x8ED JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x8F7 DUP6 DUP3 PUSH2 0x87C JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x95E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x90D DUP7 PUSH2 0x6F1 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x934 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x90F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x951 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x94D PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x860 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x96F DUP2 PUSH2 0x5F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x988 PUSH0 DUP4 ADD DUP5 PUSH2 0x966 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x9C5 DUP3 PUSH2 0x76F JUMP JUMPDEST SWAP2 POP PUSH2 0x9D0 DUP4 PUSH2 0x76F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x9E8 JUMPI PUSH2 0x9E7 PUSH2 0x98E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9F7 DUP2 PUSH2 0x76F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xA10 PUSH0 DUP4 ADD DUP7 PUSH2 0x966 JUMP JUMPDEST PUSH2 0xA1D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x9EE JUMP JUMPDEST PUSH2 0xA2A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x9EE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA45 PUSH0 DUP4 ADD DUP5 PUSH2 0x9EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F35 DUP1 PUSH2 0xA58 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x204 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xDC31ADEE GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xDC31ADEE EQ PUSH2 0x578 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x582 JUMPI DUP1 PUSH4 0xDF7F989F EQ PUSH2 0x5B2 JUMPI DUP1 PUSH4 0xE9CBD822 EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5EE JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0xB0A65B3E EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0xBA115CB6 EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0xCC1776D3 EQ PUSH2 0x55A JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0x926165D7 EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0xA6F59846 EQ PUSH2 0x4D0 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x8B887E7E EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0x8CBB6DF7 EQ PUSH2 0x45A JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x2CCA9DFD GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x3ADDE9C1 GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x3ADDE9C1 EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x4F0DBAF2 EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x4F7041A5 EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0x56BF536C EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3F8 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x2CCA9DFD EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x329430CA EQ PUSH2 0x362 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x1F6722B6 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x23256627 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2D8 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x733F92B EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x14C411C7 EQ PUSH2 0x274 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x210 PUSH2 0x60A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x172C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x1805 JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27C PUSH2 0x6C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x286 PUSH2 0x843 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH2 0x84C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C2 PUSH2 0x852 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x1876 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x310 PUSH2 0x885 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32E PUSH2 0x89D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34C PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36A PUSH2 0x8B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x388 PUSH2 0x8BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A6 PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C4 PUSH2 0x8DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E2 PUSH2 0x8E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x412 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x1922 JUMP JUMPDEST PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x430 PUSH2 0x93E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43A PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x458 PUSH2 0x957 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x462 PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x480 PUSH2 0xA08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48D SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST PUSH2 0xA30 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4BA PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C7 SWAP2 SWAP1 PUSH2 0x172C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D8 PUSH2 0xB53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x508 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x503 SWAP2 SWAP1 PUSH2 0x1805 JUMP JUMPDEST PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x515 SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x526 PUSH2 0xB7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x544 PUSH2 0xB93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x562 PUSH2 0xBAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56F SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x580 PUSH2 0xBB1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH2 0xCCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A9 SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BA PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D8 PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E5 SWAP2 SWAP1 PUSH2 0x1A24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x608 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x603 SWAP2 SWAP1 PUSH2 0x1922 JUMP JUMPDEST PUSH2 0xD8C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x619 SWAP1 PUSH2 0x1A6A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x645 SWAP1 PUSH2 0x1A6A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x690 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x667 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x690 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x673 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6AA PUSH2 0xE10 JUMP JUMPDEST SWAP1 POP PUSH2 0x6B7 DUP2 DUP6 DUP6 PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6CA PUSH2 0xE29 JUMP JUMPDEST PUSH2 0x6D2 PUSH2 0xEB0 JUMP JUMPDEST PUSH4 0x2C7EA00 PUSH1 0xC SLOAD PUSH2 0x6E4 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x726 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71D SWAP1 PUSH2 0x1B44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH4 0x2C7EA00 PUSH1 0xC SLOAD PUSH2 0x739 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST TIMESTAMP PUSH2 0x744 SWAP2 SWAP1 PUSH2 0x1B62 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0x784CE00 DUP3 PUSH1 0xF SLOAD PUSH2 0x75A SWAP2 SWAP1 PUSH2 0x1B95 JUMP JUMPDEST PUSH2 0x764 SWAP2 SWAP1 PUSH2 0x1C03 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x10 SLOAD DUP3 PUSH2 0x775 SWAP2 SWAP1 PUSH2 0x1B62 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x10 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x788 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP3 GT PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C8 SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF SLOAD PUSH1 0x10 SLOAD GT ISZERO PUSH2 0x818 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80F SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x836 PUSH20 0x4B0897B0513FDC7C541B6D9D7E929C4E5364D2DB DUP3 PUSH2 0xEFF JUMP JUMPDEST POP POP POP PUSH2 0x841 PUSH2 0xF7E JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x19 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x861 PUSH2 0xE10 JUMP JUMPDEST SWAP1 POP PUSH2 0x86E DUP6 DUP3 DUP6 PUSH2 0xF88 JUMP JUMPDEST PUSH2 0x879 DUP6 DUP6 DUP6 PUSH2 0x101A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0x583031D1113AD414F02576BD6AFABFB302140225 DUP2 JUMP JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH20 0xDD870FA1B7C4700F2BD7F44238821C26F7392148 DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH20 0xCA35B7D915458EF540ADE6068DFE2F44E8FA733C DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x946 PUSH2 0xE29 JUMP JUMPDEST PUSH2 0x94F PUSH0 PUSH2 0x10A2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH4 0x1E13380 PUSH1 0xA SLOAD PUSH2 0x969 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x9AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A2 SWAP1 PUSH2 0x1D4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xB SLOAD PUSH2 0x9BA SWAP2 SWAP1 PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH32 0xF92B4D3A8D8BA77170DD5CF6B65260191092093F924263A88C3C60DD8495F091 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH2 0x9F8 SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA38 PUSH2 0xE29 JUMP JUMPDEST DUP2 PUSH1 0xB DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH32 0xDE2D0064B82669942E6A9CFF523014473C366EFC3CF147B14E0B1F4CBECC4BC8 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xAB7 SWAP3 SWAP2 SWAP1 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xAD2 SWAP1 PUSH2 0x1A6A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAFE SWAP1 PUSH2 0x1A6A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB49 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB20 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB49 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB2C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB63 PUSH2 0xE10 JUMP JUMPDEST SWAP1 POP PUSH2 0xB70 DUP2 DUP6 DUP6 PUSH2 0x101A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xA098EDA01CE92FF4A4CCB7A4FFFB5A43EBC70DC DUP2 JUMP JUMPDEST PUSH20 0x14723A09ACFF6D2A60DCDF7AA4AFF308FDDC160C DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xBB9 PUSH2 0xE29 JUMP JUMPDEST PUSH2 0xBC1 PUSH2 0xEB0 JUMP JUMPDEST PUSH0 PUSH1 0xE SLOAD TIMESTAMP PUSH2 0xBD0 SWAP2 SWAP1 PUSH2 0x1B62 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x11 SLOAD DUP3 PUSH1 0x12 SLOAD PUSH2 0xBE4 SWAP2 SWAP1 PUSH2 0x1B95 JUMP JUMPDEST PUSH2 0xBEE SWAP2 SWAP1 PUSH2 0x1C03 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x13 SLOAD DUP3 PUSH2 0xBFF SWAP2 SWAP1 PUSH2 0x1B62 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x13 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC12 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP3 GT PUSH2 0xC5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC52 SWAP1 PUSH2 0x1DDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD GT ISZERO PUSH2 0xCA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC99 SWAP1 PUSH2 0x1E44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC0 PUSH20 0x14723A09ACFF6D2A60DCDF7AA4AFF308FDDC160C DUP3 PUSH2 0xEFF JUMP JUMPDEST POP POP POP PUSH2 0xCCB PUSH2 0xF7E JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0x4B0897B0513FDC7C541B6D9D7E929C4E5364D2DB DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xD94 PUSH2 0xE29 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE04 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDFB SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE0D DUP2 PUSH2 0x10A2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE24 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1165 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xE31 PUSH2 0xE10 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE4F PUSH2 0xA08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEAE JUMPI PUSH2 0xE72 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA5 SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xEF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEEC SWAP1 PUSH2 0x1EAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF6F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF66 SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF7A PUSH0 DUP4 DUP4 PUSH2 0x1334 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF93 DUP5 DUP5 PUSH2 0xCCD JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1014 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1005 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1013 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1165 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x64 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1058 JUMPI PUSH1 0x8 SLOAD PUSH2 0x105C JUMP JUMPDEST PUSH1 0x9 SLOAD JUMPDEST DUP4 PUSH2 0x1067 SWAP2 SWAP1 PUSH2 0x1B95 JUMP JUMPDEST PUSH2 0x1071 SWAP2 SWAP1 PUSH2 0x1C03 JUMP JUMPDEST SWAP1 POP PUSH2 0x1089 DUP5 DUP5 DUP4 DUP6 PUSH2 0x1084 SWAP2 SWAP1 PUSH2 0x1B62 JUMP JUMPDEST PUSH2 0x154D JUMP JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x109C JUMPI PUSH2 0x109B DUP5 DUP3 PUSH2 0x163D JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11D5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11CC SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1245 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123C SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x132E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1325 SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1384 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1378 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1452 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x140D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1404 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1499 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x14E3 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1540 SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15BD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B4 SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x162D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1624 SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1638 DUP4 DUP4 DUP4 PUSH2 0x1334 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16AD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A4 SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16B8 DUP3 PUSH0 DUP4 PUSH2 0x1334 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16FE DUP3 PUSH2 0x16BC JUMP JUMPDEST PUSH2 0x1708 DUP2 DUP6 PUSH2 0x16C6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1718 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16D6 JUMP JUMPDEST PUSH2 0x1721 DUP2 PUSH2 0x16E4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1744 DUP2 DUP5 PUSH2 0x16F4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x175E DUP2 PUSH2 0x174C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1777 PUSH0 DUP4 ADD DUP5 PUSH2 0x1755 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17AA DUP3 PUSH2 0x1781 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17BA DUP2 PUSH2 0x17A0 JUMP JUMPDEST DUP2 EQ PUSH2 0x17C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17D5 DUP2 PUSH2 0x17B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E4 DUP2 PUSH2 0x174C JUMP JUMPDEST DUP2 EQ PUSH2 0x17EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17FF DUP2 PUSH2 0x17DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x181B JUMPI PUSH2 0x181A PUSH2 0x177D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1828 DUP6 DUP3 DUP7 ADD PUSH2 0x17C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1839 DUP6 DUP3 DUP7 ADD PUSH2 0x17F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1857 DUP2 PUSH2 0x1843 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1870 PUSH0 DUP4 ADD DUP5 PUSH2 0x184E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x188D JUMPI PUSH2 0x188C PUSH2 0x177D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x189A DUP7 DUP3 DUP8 ADD PUSH2 0x17C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18AB DUP7 DUP3 DUP8 ADD PUSH2 0x17C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18BC DUP7 DUP3 DUP8 ADD PUSH2 0x17F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x18CF DUP2 PUSH2 0x17A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18E8 PUSH0 DUP4 ADD DUP5 PUSH2 0x18C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1903 DUP2 PUSH2 0x18EE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x191C PUSH0 DUP4 ADD DUP5 PUSH2 0x18FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1937 JUMPI PUSH2 0x1936 PUSH2 0x177D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1944 DUP5 DUP3 DUP6 ADD PUSH2 0x17C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1963 JUMPI PUSH2 0x1962 PUSH2 0x177D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1970 DUP6 DUP3 DUP7 ADD PUSH2 0x17F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1981 DUP6 DUP3 DUP7 ADD PUSH2 0x17C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19A1 JUMPI PUSH2 0x19A0 PUSH2 0x177D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19AE DUP6 DUP3 DUP7 ADD PUSH2 0x17C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19BF DUP6 DUP3 DUP7 ADD PUSH2 0x17C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19EC PUSH2 0x19E7 PUSH2 0x19E2 DUP5 PUSH2 0x1781 JUMP JUMPDEST PUSH2 0x19C9 JUMP JUMPDEST PUSH2 0x1781 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19FD DUP3 PUSH2 0x19D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A0E DUP3 PUSH2 0x19F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A1E DUP2 PUSH2 0x1A04 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A37 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A81 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A94 JUMPI PUSH2 0x1A93 PUSH2 0x1A3D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1AD1 DUP3 PUSH2 0x174C JUMP JUMPDEST SWAP2 POP PUSH2 0x1ADC DUP4 PUSH2 0x174C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1AF4 JUMPI PUSH2 0x1AF3 PUSH2 0x1A9A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5465616D2076657374696E6720636C696666206E6F7420726561636865640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B2E PUSH1 0x1E DUP4 PUSH2 0x16C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B39 DUP3 PUSH2 0x1AFA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B5B DUP2 PUSH2 0x1B22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B6C DUP3 PUSH2 0x174C JUMP JUMPDEST SWAP2 POP PUSH2 0x1B77 DUP4 PUSH2 0x174C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1B8F JUMPI PUSH2 0x1B8E PUSH2 0x1A9A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B9F DUP3 PUSH2 0x174C JUMP JUMPDEST SWAP2 POP PUSH2 0x1BAA DUP4 PUSH2 0x174C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1BB8 DUP2 PUSH2 0x174C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1BCF JUMPI PUSH2 0x1BCE PUSH2 0x1A9A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C0D DUP3 PUSH2 0x174C JUMP JUMPDEST SWAP2 POP PUSH2 0x1C18 DUP4 PUSH2 0x174C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1C28 JUMPI PUSH2 0x1C27 PUSH2 0x1BD6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320617661696C61626C6520666F722072656C6561736500 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C67 PUSH1 0x1F DUP4 PUSH2 0x16C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C72 DUP3 PUSH2 0x1C33 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C94 DUP2 PUSH2 0x1C5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D617820746F6B656E206C696D69742072656163686564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CCF PUSH1 0x17 DUP4 PUSH2 0x16C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CDA DUP3 PUSH2 0x1C9B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CFC DUP2 PUSH2 0x1CC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x48616C76696E67206E6F74206475652079657400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D37 PUSH1 0x13 DUP4 PUSH2 0x16C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D42 DUP3 PUSH2 0x1D03 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D64 DUP2 PUSH2 0x1D2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D7E PUSH0 DUP4 ADD DUP6 PUSH2 0x1755 JUMP JUMPDEST PUSH2 0x1D8B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E6F20746F6B656E20617661696C61626C6520666F722072656C656173650000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DC6 PUSH1 0x1E DUP4 PUSH2 0x16C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DD1 DUP3 PUSH2 0x1D92 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DF3 DUP2 PUSH2 0x1DBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D617820746F6B656E20696D6974207265616368656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E2E PUSH1 0x16 DUP4 PUSH2 0x16C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E39 DUP3 PUSH2 0x1DFA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E5B DUP2 PUSH2 0x1E22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E96 PUSH1 0x1F DUP4 PUSH2 0x16C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EA1 DUP3 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EC3 DUP2 PUSH2 0x1E8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1EDD PUSH0 DUP4 ADD DUP7 PUSH2 0x18C6 JUMP JUMPDEST PUSH2 0x1EEA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1755 JUMP JUMPDEST PUSH2 0x1EF7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1755 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E PUSH9 0x689FAAB59F77A2BB4F EXTCODESIZE DUP8 PUSH21 0x89EC46D2BF5DE7F1C820060292283356DA6264736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "231:5278:7:-:0;;;412:1;388:25;;444:1;419:26;;741:22;714:49;;898:22;867:53;;1001:12;965:48;;1056:21;1020:57;;2059:623;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2107:10;1601:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:2;1821:7;:22;;;;2157:43:7::2;1414:42;2177:22;2157:5;;;:43;;:::i;:::-;2216:49;2222:18;2242:22;2216:5;;;:49;;:::i;:::-;2351:73;1727:42;2389:34;2351:5;;;:73;;:::i;:::-;2462:48;1827:42;2487:22;2462:5;;;:48;;:::i;:::-;2526:45;1924:42;2548:22;2526:5;;;:45;;:::i;:::-;2609:15;2588:18;:36;;;;2660:15;2634:23;:41;;;;2059:623:::0;231:5278;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7466:208:3:-;7555:1;7536:21;;:7;:21;;;7532:91;;7609:1;7580:32;;;;;;;;;;;:::i;:::-;;;;;;;;7532:91;7632:35;7648:1;7652:7;7661:5;7632:7;;;:35;;:::i;:::-;7466:208;;:::o;6016:1107::-;6121:1;6105:18;;:4;:18;;;6101:540;;6257:5;6241:12;;:21;;;;;;;:::i;:::-;;;;;;;;6101:540;;;6293:19;6315:9;:15;6325:4;6315:15;;;;;;;;;;;;;;;;6293:37;;6362:5;6348:11;:19;6344:115;;;6419:4;6425:11;6438:5;6394:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6344:115;6611:5;6597:11;:19;6579:9;:15;6589:4;6579:15;;;;;;;;;;;;;;;:37;;;;6279:362;6101:540;6669:1;6655:16;;:2;:16;;;6651:425;;6834:5;6818:12;;:21;;;;;;;;;;;6651:425;;;7046:5;7029:9;:13;7039:2;7029:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6651:425;7106:2;7091:25;;7100:4;7091:25;;;7110:5;7091:25;;;;;;:::i;:::-;;;;;;;;6016:1107;;;:::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:180::-;6829:77;6826:1;6819:88;6926:4;6923:1;6916:15;6950:4;6947:1;6940:15;6967:191;7007:3;7026:20;7044:1;7026:20;:::i;:::-;7021:25;;7060:20;7078:1;7060:20;:::i;:::-;7055:25;;7103:1;7100;7096:9;7089:16;;7124:3;7121:1;7118:10;7115:36;;;7131:18;;:::i;:::-;7115:36;6967:191;;;;:::o;7164:118::-;7251:24;7269:5;7251:24;:::i;:::-;7246:3;7239:37;7164:118;;:::o;7288:442::-;7437:4;7475:2;7464:9;7460:18;7452:26;;7488:71;7556:1;7545:9;7541:17;7532:6;7488:71;:::i;:::-;7569:72;7637:2;7626:9;7622:18;7613:6;7569:72;:::i;:::-;7651;7719:2;7708:9;7704:18;7695:6;7651:72;:::i;:::-;7288:442;;;;;;:::o;7736:222::-;7829:4;7867:2;7856:9;7852:18;7844:26;;7880:71;7948:1;7937:9;7933:17;7924:6;7880:71;:::i;:::-;7736:222;;;;:::o;231:5278:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@COMMUNITY_GROWTH_AND_MARKETING_1113": {
									"entryPoint": 2963,
									"id": 1113,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@HALVING_PERIOD_1033": {
									"entryPoint": 2235,
									"id": 1033,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ICO_ALLOCATION_1119": {
									"entryPoint": 2939,
									"id": 1119,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INITIAL_SUPPLY_1017": {
									"entryPoint": 2205,
									"id": 1017,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@LIQUIDITY_POOL_1107": {
									"entryPoint": 2181,
									"id": 1107,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MARKETING_INITIAL_UNLOCK_1058": {
									"entryPoint": 2130,
									"id": 1058,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PLAY_TO_EARN_1104": {
									"entryPoint": 2243,
									"id": 1104,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@STRADEGIC_RESERVE_1116": {
									"entryPoint": 2273,
									"id": 1116,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TEAM_AND_DEVELOPMENT_1110": {
									"entryPoint": 3407,
									"id": 1110,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_755": {
									"entryPoint": 3607,
									"id": 755,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_815": {
									"entryPoint": 4453,
									"id": 815,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_737": {
									"entryPoint": 5693,
									"id": 737,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3625,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_704": {
									"entryPoint": 3839,
									"id": 704,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_980": {
									"entryPoint": 3600,
									"id": 980,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_337": {
									"entryPoint": 3966,
									"id": 337,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_329": {
									"entryPoint": 3760,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_863": {
									"entryPoint": 3976,
									"id": 863,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4258,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1425": {
									"entryPoint": 4122,
									"id": 1425,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_594": {
									"entryPoint": 5453,
									"id": 594,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_671": {
									"entryPoint": 4916,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_491": {
									"entryPoint": 3277,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_515": {
									"entryPoint": 1696,
									"id": 515,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_450": {
									"entryPoint": 2297,
									"id": 450,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buyTax_1023": {
									"entryPoint": 2267,
									"id": 1023,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_428": {
									"entryPoint": 2221,
									"id": 428,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@halveRewards_1376": {
									"entryPoint": 2391,
									"id": 1376,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initializeRewardParameters_1347": {
									"entryPoint": 2608,
									"id": 1347,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@lastHalvingTime_1028": {
									"entryPoint": 2562,
									"id": 1028,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@marketingAllocated_1081": {
									"entryPoint": 2124,
									"id": 1081,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_410": {
									"entryPoint": 1546,
									"id": 410,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2568,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@releaseMarketingTokens_1317": {
									"entryPoint": 2993,
									"id": 1317,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@releaseTeamTokens_1264": {
									"entryPoint": 1730,
									"id": 1264,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@releasedMarketingAmount_1083": {
									"entryPoint": 1690,
									"id": 1083,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@releasedTeamAmount_1068": {
									"entryPoint": 2899,
									"id": 1068,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2366,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardRate_1030": {
									"entryPoint": 2385,
									"id": 1030,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellTax_1026": {
									"entryPoint": 2987,
									"id": 1026,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stablecoin_1020": {
									"entryPoint": 3431,
									"id": 1020,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_419": {
									"entryPoint": 2755,
									"id": 419,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@teamAllocated_1066": {
									"entryPoint": 2229,
									"id": 1066,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_437": {
									"entryPoint": 2115,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_547": {
									"entryPoint": 2135,
									"id": 547,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3468,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_474": {
									"entryPoint": 2905,
									"id": 474,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 6477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$942_to_t_address_fromStack": {
									"entryPoint": 6677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1e3f40b783878aa8a209031c059e17645777610e647ce5118077e34cb75f93ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8f41b7cdbd41efdc278b6e699169b223e8bf648dc2dd642e2ad288da5ffc97a4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a4f247bcec9e225b0d93cc4c24757f4cdd2d66b299970369f4e497bf5fc471a1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a5274ccc4c50c7a89b0ec1936586b74d88d243fdb846199e4e01b0dce82ee867_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cabf40c40e6f36bda09a3c5c985256e9c4ec41609ce08329fbfb3b76b478665c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d34530ebdb5a42e16e6038e9e978022f0bb2a52fd5e9c2ee90e61fbc64c16fa9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7882,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$942__to_t_address__fromStack_reversed": {
									"entryPoint": 6692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e3f40b783878aa8a209031c059e17645777610e647ce5118077e34cb75f93ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8f41b7cdbd41efdc278b6e699169b223e8bf648dc2dd642e2ad288da5ffc97a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a4f247bcec9e225b0d93cc4c24757f4cdd2d66b299970369f4e497bf5fc471a1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a5274ccc4c50c7a89b0ec1936586b74d88d243fdb846199e4e01b0dce82ee867__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cabf40c40e6f36bda09a3c5c985256e9c4ec41609ce08329fbfb3b76b478665c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d34530ebdb5a42e16e6038e9e978022f0bb2a52fd5e9c2ee90e61fbc64c16fa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 7531,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$942_to_t_address": {
									"entryPoint": 6660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5846,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6810,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6717,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6013,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1e3f40b783878aa8a209031c059e17645777610e647ce5118077e34cb75f93ad": {
									"entryPoint": 7427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8f41b7cdbd41efdc278b6e699169b223e8bf648dc2dd642e2ad288da5ffc97a4": {
									"entryPoint": 7570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a4f247bcec9e225b0d93cc4c24757f4cdd2d66b299970369f4e497bf5fc471a1": {
									"entryPoint": 7323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a5274ccc4c50c7a89b0ec1936586b74d88d243fdb846199e4e01b0dce82ee867": {
									"entryPoint": 7674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cabf40c40e6f36bda09a3c5c985256e9c4ec41609ce08329fbfb3b76b478665c": {
									"entryPoint": 7219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d34530ebdb5a42e16e6038e9e978022f0bb2a52fd5e9c2ee90e61fbc64c16fa9": {
									"entryPoint": 6906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 7778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:16834:8",
										"nodeType": "YulBlock",
										"src": "0:16834:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "208:73:8",
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nativeSrc": "218:19:8",
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nativeSrc": "218:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nativeSrc": "246:29:8",
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:8",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nativeSrc": "261:14:8",
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:8",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:8",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:8",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nativeSrc": "349:77:8",
													"nodeType": "YulBlock",
													"src": "349:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:8"
																},
																"nativeSrc": "360:23:8",
																"nodeType": "YulFunctionCall",
																"src": "360:23:8"
															},
															"nativeSrc": "360:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:8"
																		},
																		"nativeSrc": "399:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:8",
																		"nodeType": "YulLiteral",
																		"src": "417:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:8"
																},
																"nativeSrc": "392:27:8",
																"nodeType": "YulFunctionCall",
																"src": "392:27:8"
															},
															"nativeSrc": "392:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:8",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:8",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:8",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:139:8"
											},
											{
												"body": {
													"nativeSrc": "480:54:8",
													"nodeType": "YulBlock",
													"src": "480:54:8",
													"statements": [
														{
															"nativeSrc": "490:38:8",
															"nodeType": "YulAssignment",
															"src": "490:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:8",
																				"nodeType": "YulLiteral",
																				"src": "515:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:8"
																		},
																		"nativeSrc": "504:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:8",
																				"nodeType": "YulLiteral",
																				"src": "524:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:8"
																		},
																		"nativeSrc": "520:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:8"
																},
																"nativeSrc": "500:28:8",
																"nodeType": "YulFunctionCall",
																"src": "500:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:8",
														"nodeType": "YulTypedName",
														"src": "463:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:8",
														"nodeType": "YulTypedName",
														"src": "473:6:8",
														"type": ""
													}
												],
												"src": "432:102:8"
											},
											{
												"body": {
													"nativeSrc": "632:285:8",
													"nodeType": "YulBlock",
													"src": "632:285:8",
													"statements": [
														{
															"nativeSrc": "642:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:8"
																},
																"nativeSrc": "656:39:8",
																"nodeType": "YulFunctionCall",
																"src": "656:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:8",
																	"nodeType": "YulTypedName",
																	"src": "646:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:8",
															"nodeType": "YulAssignment",
															"src": "704:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:8"
																},
																"nativeSrc": "711:71:8",
																"nodeType": "YulFunctionCall",
																"src": "711:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:8",
																				"nodeType": "YulLiteral",
																				"src": "837:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:8"
																		},
																		"nativeSrc": "826:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:8"
																},
																"nativeSrc": "791:65:8",
																"nodeType": "YulFunctionCall",
																"src": "791:65:8"
															},
															"nativeSrc": "791:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:8"
														},
														{
															"nativeSrc": "865:46:8",
															"nodeType": "YulAssignment",
															"src": "865:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:8"
																		},
																		"nativeSrc": "881:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:8"
																},
																"nativeSrc": "872:39:8",
																"nodeType": "YulFunctionCall",
																"src": "872:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:8",
														"nodeType": "YulTypedName",
														"src": "613:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:8",
														"nodeType": "YulTypedName",
														"src": "620:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:8",
														"nodeType": "YulTypedName",
														"src": "628:3:8",
														"type": ""
													}
												],
												"src": "540:377:8"
											},
											{
												"body": {
													"nativeSrc": "1041:195:8",
													"nodeType": "YulBlock",
													"src": "1041:195:8",
													"statements": [
														{
															"nativeSrc": "1051:26:8",
															"nodeType": "YulAssignment",
															"src": "1051:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:8"
																},
																"nativeSrc": "1059:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:8"
																		},
																		"nativeSrc": "1094:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:8"
																		},
																		"nativeSrc": "1113:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:8"
																},
																"nativeSrc": "1087:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:8"
															},
															"nativeSrc": "1087:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:8"
														},
														{
															"nativeSrc": "1143:86:8",
															"nodeType": "YulAssignment",
															"src": "1143:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:8"
																},
																"nativeSrc": "1151:78:8",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:8",
														"nodeType": "YulTypedName",
														"src": "1013:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:8",
														"nodeType": "YulTypedName",
														"src": "1025:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:8",
														"nodeType": "YulTypedName",
														"src": "1036:4:8",
														"type": ""
													}
												],
												"src": "923:313:8"
											},
											{
												"body": {
													"nativeSrc": "1287:32:8",
													"nodeType": "YulBlock",
													"src": "1287:32:8",
													"statements": [
														{
															"nativeSrc": "1297:16:8",
															"nodeType": "YulAssignment",
															"src": "1297:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "1308:5:8",
																"nodeType": "YulIdentifier",
																"src": "1308:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1297:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1297:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1242:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1269:5:8",
														"nodeType": "YulTypedName",
														"src": "1269:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1279:7:8",
														"nodeType": "YulTypedName",
														"src": "1279:7:8",
														"type": ""
													}
												],
												"src": "1242:77:8"
											},
											{
												"body": {
													"nativeSrc": "1390:53:8",
													"nodeType": "YulBlock",
													"src": "1390:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1407:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1407:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1430:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1430:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1412:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "1412:17:8"
																		},
																		"nativeSrc": "1412:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1412:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1400:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1400:6:8"
																},
																"nativeSrc": "1400:37:8",
																"nodeType": "YulFunctionCall",
																"src": "1400:37:8"
															},
															"nativeSrc": "1400:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "1400:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1325:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1378:5:8",
														"nodeType": "YulTypedName",
														"src": "1378:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1385:3:8",
														"nodeType": "YulTypedName",
														"src": "1385:3:8",
														"type": ""
													}
												],
												"src": "1325:118:8"
											},
											{
												"body": {
													"nativeSrc": "1547:124:8",
													"nodeType": "YulBlock",
													"src": "1547:124:8",
													"statements": [
														{
															"nativeSrc": "1557:26:8",
															"nodeType": "YulAssignment",
															"src": "1557:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1569:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1569:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1580:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1580:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1565:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1565:3:8"
																},
																"nativeSrc": "1565:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1565:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1557:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1557:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1637:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1637:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1650:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1650:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1661:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1661:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1646:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1646:3:8"
																		},
																		"nativeSrc": "1646:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1646:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1593:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "1593:43:8"
																},
																"nativeSrc": "1593:71:8",
																"nodeType": "YulFunctionCall",
																"src": "1593:71:8"
															},
															"nativeSrc": "1593:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "1593:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1449:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1519:9:8",
														"nodeType": "YulTypedName",
														"src": "1519:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1531:6:8",
														"nodeType": "YulTypedName",
														"src": "1531:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1542:4:8",
														"nodeType": "YulTypedName",
														"src": "1542:4:8",
														"type": ""
													}
												],
												"src": "1449:222:8"
											},
											{
												"body": {
													"nativeSrc": "1717:35:8",
													"nodeType": "YulBlock",
													"src": "1717:35:8",
													"statements": [
														{
															"nativeSrc": "1727:19:8",
															"nodeType": "YulAssignment",
															"src": "1727:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1743:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1743:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1737:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1737:5:8"
																},
																"nativeSrc": "1737:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1737:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1727:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1727:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1677:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1710:6:8",
														"nodeType": "YulTypedName",
														"src": "1710:6:8",
														"type": ""
													}
												],
												"src": "1677:75:8"
											},
											{
												"body": {
													"nativeSrc": "1847:28:8",
													"nodeType": "YulBlock",
													"src": "1847:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1864:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1864:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1867:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1867:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1857:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1857:6:8"
																},
																"nativeSrc": "1857:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1857:12:8"
															},
															"nativeSrc": "1857:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1857:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1758:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1758:117:8"
											},
											{
												"body": {
													"nativeSrc": "1970:28:8",
													"nodeType": "YulBlock",
													"src": "1970:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1987:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1987:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1990:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1990:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1980:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1980:6:8"
																},
																"nativeSrc": "1980:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1980:12:8"
															},
															"nativeSrc": "1980:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1980:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1881:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1881:117:8"
											},
											{
												"body": {
													"nativeSrc": "2049:81:8",
													"nodeType": "YulBlock",
													"src": "2049:81:8",
													"statements": [
														{
															"nativeSrc": "2059:65:8",
															"nodeType": "YulAssignment",
															"src": "2059:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2074:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2074:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2081:42:8",
																		"nodeType": "YulLiteral",
																		"src": "2081:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2070:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2070:3:8"
																},
																"nativeSrc": "2070:54:8",
																"nodeType": "YulFunctionCall",
																"src": "2070:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2059:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2059:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2004:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2031:5:8",
														"nodeType": "YulTypedName",
														"src": "2031:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2041:7:8",
														"nodeType": "YulTypedName",
														"src": "2041:7:8",
														"type": ""
													}
												],
												"src": "2004:126:8"
											},
											{
												"body": {
													"nativeSrc": "2181:51:8",
													"nodeType": "YulBlock",
													"src": "2181:51:8",
													"statements": [
														{
															"nativeSrc": "2191:35:8",
															"nodeType": "YulAssignment",
															"src": "2191:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2220:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2220:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2202:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "2202:17:8"
																},
																"nativeSrc": "2202:24:8",
																"nodeType": "YulFunctionCall",
																"src": "2202:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2191:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2191:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2136:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2163:5:8",
														"nodeType": "YulTypedName",
														"src": "2163:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2173:7:8",
														"nodeType": "YulTypedName",
														"src": "2173:7:8",
														"type": ""
													}
												],
												"src": "2136:96:8"
											},
											{
												"body": {
													"nativeSrc": "2281:79:8",
													"nodeType": "YulBlock",
													"src": "2281:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2338:16:8",
																"nodeType": "YulBlock",
																"src": "2338:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2347:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2347:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2350:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2350:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2340:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2340:6:8"
																			},
																			"nativeSrc": "2340:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2340:12:8"
																		},
																		"nativeSrc": "2340:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2304:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2304:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2329:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2329:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2311:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2311:17:8"
																				},
																				"nativeSrc": "2311:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2311:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2301:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2301:2:8"
																		},
																		"nativeSrc": "2301:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2301:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2294:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:8"
																},
																"nativeSrc": "2294:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2294:43:8"
															},
															"nativeSrc": "2291:63:8",
															"nodeType": "YulIf",
															"src": "2291:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2238:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2274:5:8",
														"nodeType": "YulTypedName",
														"src": "2274:5:8",
														"type": ""
													}
												],
												"src": "2238:122:8"
											},
											{
												"body": {
													"nativeSrc": "2418:87:8",
													"nodeType": "YulBlock",
													"src": "2418:87:8",
													"statements": [
														{
															"nativeSrc": "2428:29:8",
															"nodeType": "YulAssignment",
															"src": "2428:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2450:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2450:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2437:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2437:12:8"
																},
																"nativeSrc": "2437:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2437:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2428:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2428:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2493:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2493:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2466:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2466:26:8"
																},
																"nativeSrc": "2466:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2466:33:8"
															},
															"nativeSrc": "2466:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2466:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2366:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2396:6:8",
														"nodeType": "YulTypedName",
														"src": "2396:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2404:3:8",
														"nodeType": "YulTypedName",
														"src": "2404:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2412:5:8",
														"nodeType": "YulTypedName",
														"src": "2412:5:8",
														"type": ""
													}
												],
												"src": "2366:139:8"
											},
											{
												"body": {
													"nativeSrc": "2554:79:8",
													"nodeType": "YulBlock",
													"src": "2554:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2611:16:8",
																"nodeType": "YulBlock",
																"src": "2611:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2620:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2620:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2623:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2623:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2613:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2613:6:8"
																			},
																			"nativeSrc": "2613:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2613:12:8"
																		},
																		"nativeSrc": "2613:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2613:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2577:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2577:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2602:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2602:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2584:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2584:17:8"
																				},
																				"nativeSrc": "2584:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2584:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2574:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2574:2:8"
																		},
																		"nativeSrc": "2574:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2574:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2567:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2567:6:8"
																},
																"nativeSrc": "2567:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2567:43:8"
															},
															"nativeSrc": "2564:63:8",
															"nodeType": "YulIf",
															"src": "2564:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2511:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2547:5:8",
														"nodeType": "YulTypedName",
														"src": "2547:5:8",
														"type": ""
													}
												],
												"src": "2511:122:8"
											},
											{
												"body": {
													"nativeSrc": "2691:87:8",
													"nodeType": "YulBlock",
													"src": "2691:87:8",
													"statements": [
														{
															"nativeSrc": "2701:29:8",
															"nodeType": "YulAssignment",
															"src": "2701:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2723:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2723:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2710:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2710:12:8"
																},
																"nativeSrc": "2710:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2710:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2701:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2701:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2766:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2766:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2739:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2739:26:8"
																},
																"nativeSrc": "2739:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2739:33:8"
															},
															"nativeSrc": "2739:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2739:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2639:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2669:6:8",
														"nodeType": "YulTypedName",
														"src": "2669:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2677:3:8",
														"nodeType": "YulTypedName",
														"src": "2677:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2685:5:8",
														"nodeType": "YulTypedName",
														"src": "2685:5:8",
														"type": ""
													}
												],
												"src": "2639:139:8"
											},
											{
												"body": {
													"nativeSrc": "2867:391:8",
													"nodeType": "YulBlock",
													"src": "2867:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2913:83:8",
																"nodeType": "YulBlock",
																"src": "2913:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2915:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2915:77:8"
																			},
																			"nativeSrc": "2915:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2915:79:8"
																		},
																		"nativeSrc": "2915:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2915:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2888:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2888:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2897:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2897:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2884:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2884:3:8"
																		},
																		"nativeSrc": "2884:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2884:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2909:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2909:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2880:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2880:3:8"
																},
																"nativeSrc": "2880:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2880:32:8"
															},
															"nativeSrc": "2877:119:8",
															"nodeType": "YulIf",
															"src": "2877:119:8"
														},
														{
															"nativeSrc": "3006:117:8",
															"nodeType": "YulBlock",
															"src": "3006:117:8",
															"statements": [
																{
																	"nativeSrc": "3021:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3021:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3035:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3035:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3025:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3025:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3050:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3050:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3085:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3085:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3096:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3096:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3081:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3081:3:8"
																				},
																				"nativeSrc": "3081:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3081:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3105:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3105:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3060:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3060:20:8"
																		},
																		"nativeSrc": "3060:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3060:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3050:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3050:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3133:118:8",
															"nodeType": "YulBlock",
															"src": "3133:118:8",
															"statements": [
																{
																	"nativeSrc": "3148:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3148:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3162:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3162:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3152:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3152:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3178:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3178:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3213:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3213:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3224:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3224:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3209:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3209:3:8"
																				},
																				"nativeSrc": "3209:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3209:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3233:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3233:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3188:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3188:20:8"
																		},
																		"nativeSrc": "3188:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3188:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3178:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3178:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2784:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2829:9:8",
														"nodeType": "YulTypedName",
														"src": "2829:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2840:7:8",
														"nodeType": "YulTypedName",
														"src": "2840:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2852:6:8",
														"nodeType": "YulTypedName",
														"src": "2852:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2860:6:8",
														"nodeType": "YulTypedName",
														"src": "2860:6:8",
														"type": ""
													}
												],
												"src": "2784:474:8"
											},
											{
												"body": {
													"nativeSrc": "3306:48:8",
													"nodeType": "YulBlock",
													"src": "3306:48:8",
													"statements": [
														{
															"nativeSrc": "3316:32:8",
															"nodeType": "YulAssignment",
															"src": "3316:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3341:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3341:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3334:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3334:6:8"
																		},
																		"nativeSrc": "3334:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3334:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3327:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3327:6:8"
																},
																"nativeSrc": "3327:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3327:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3316:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3316:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3264:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3288:5:8",
														"nodeType": "YulTypedName",
														"src": "3288:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3298:7:8",
														"nodeType": "YulTypedName",
														"src": "3298:7:8",
														"type": ""
													}
												],
												"src": "3264:90:8"
											},
											{
												"body": {
													"nativeSrc": "3419:50:8",
													"nodeType": "YulBlock",
													"src": "3419:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3436:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3436:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3456:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3456:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3441:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3441:14:8"
																		},
																		"nativeSrc": "3441:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3441:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3429:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3429:6:8"
																},
																"nativeSrc": "3429:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3429:34:8"
															},
															"nativeSrc": "3429:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3429:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3360:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3407:5:8",
														"nodeType": "YulTypedName",
														"src": "3407:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3414:3:8",
														"nodeType": "YulTypedName",
														"src": "3414:3:8",
														"type": ""
													}
												],
												"src": "3360:109:8"
											},
											{
												"body": {
													"nativeSrc": "3567:118:8",
													"nodeType": "YulBlock",
													"src": "3567:118:8",
													"statements": [
														{
															"nativeSrc": "3577:26:8",
															"nodeType": "YulAssignment",
															"src": "3577:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3589:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3589:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3600:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3600:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3585:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3585:3:8"
																},
																"nativeSrc": "3585:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3585:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3577:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3577:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:8"
																		},
																		"nativeSrc": "3660:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3613:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3613:37:8"
																},
																"nativeSrc": "3613:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:8"
															},
															"nativeSrc": "3613:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3475:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3539:9:8",
														"nodeType": "YulTypedName",
														"src": "3539:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3551:6:8",
														"nodeType": "YulTypedName",
														"src": "3551:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3562:4:8",
														"nodeType": "YulTypedName",
														"src": "3562:4:8",
														"type": ""
													}
												],
												"src": "3475:210:8"
											},
											{
												"body": {
													"nativeSrc": "3791:519:8",
													"nodeType": "YulBlock",
													"src": "3791:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:8",
																"nodeType": "YulBlock",
																"src": "3837:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:8"
																			},
																			"nativeSrc": "3839:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:8"
																		},
																		"nativeSrc": "3839:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:8"
																		},
																		"nativeSrc": "3808:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:8"
																},
																"nativeSrc": "3804:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:8"
															},
															"nativeSrc": "3801:119:8",
															"nodeType": "YulIf",
															"src": "3801:119:8"
														},
														{
															"nativeSrc": "3930:117:8",
															"nodeType": "YulBlock",
															"src": "3930:117:8",
															"statements": [
																{
																	"nativeSrc": "3945:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:8"
																				},
																				"nativeSrc": "4005:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:8"
																		},
																		"nativeSrc": "3984:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:8",
															"nodeType": "YulBlock",
															"src": "4057:118:8",
															"statements": [
																{
																	"nativeSrc": "4072:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:8"
																				},
																				"nativeSrc": "4133:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:8"
																		},
																		"nativeSrc": "4112:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:8",
															"nodeType": "YulBlock",
															"src": "4185:118:8",
															"statements": [
																{
																	"nativeSrc": "4200:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:8"
																				},
																				"nativeSrc": "4261:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:8"
																		},
																		"nativeSrc": "4240:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:8",
														"nodeType": "YulTypedName",
														"src": "3745:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:8",
														"nodeType": "YulTypedName",
														"src": "3756:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:8",
														"nodeType": "YulTypedName",
														"src": "3768:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:8",
														"nodeType": "YulTypedName",
														"src": "3776:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:8",
														"nodeType": "YulTypedName",
														"src": "3784:6:8",
														"type": ""
													}
												],
												"src": "3691:619:8"
											},
											{
												"body": {
													"nativeSrc": "4381:53:8",
													"nodeType": "YulBlock",
													"src": "4381:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4398:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4398:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4421:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4421:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4403:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "4403:17:8"
																		},
																		"nativeSrc": "4403:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4391:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4391:6:8"
																},
																"nativeSrc": "4391:37:8",
																"nodeType": "YulFunctionCall",
																"src": "4391:37:8"
															},
															"nativeSrc": "4391:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "4391:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4316:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4369:5:8",
														"nodeType": "YulTypedName",
														"src": "4369:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4376:3:8",
														"nodeType": "YulTypedName",
														"src": "4376:3:8",
														"type": ""
													}
												],
												"src": "4316:118:8"
											},
											{
												"body": {
													"nativeSrc": "4538:124:8",
													"nodeType": "YulBlock",
													"src": "4538:124:8",
													"statements": [
														{
															"nativeSrc": "4548:26:8",
															"nodeType": "YulAssignment",
															"src": "4548:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4560:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4560:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4571:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4571:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4556:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4556:3:8"
																},
																"nativeSrc": "4556:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4556:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4548:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4548:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4628:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4628:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4641:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4641:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4652:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4652:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4637:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4637:3:8"
																		},
																		"nativeSrc": "4637:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4637:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4584:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "4584:43:8"
																},
																"nativeSrc": "4584:71:8",
																"nodeType": "YulFunctionCall",
																"src": "4584:71:8"
															},
															"nativeSrc": "4584:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "4584:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4440:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4510:9:8",
														"nodeType": "YulTypedName",
														"src": "4510:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4522:6:8",
														"nodeType": "YulTypedName",
														"src": "4522:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4533:4:8",
														"nodeType": "YulTypedName",
														"src": "4533:4:8",
														"type": ""
													}
												],
												"src": "4440:222:8"
											},
											{
												"body": {
													"nativeSrc": "4711:43:8",
													"nodeType": "YulBlock",
													"src": "4711:43:8",
													"statements": [
														{
															"nativeSrc": "4721:27:8",
															"nodeType": "YulAssignment",
															"src": "4721:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4736:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4736:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4743:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4743:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4732:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4732:3:8"
																},
																"nativeSrc": "4732:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4732:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4721:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "4721:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4668:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4693:5:8",
														"nodeType": "YulTypedName",
														"src": "4693:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4703:7:8",
														"nodeType": "YulTypedName",
														"src": "4703:7:8",
														"type": ""
													}
												],
												"src": "4668:86:8"
											},
											{
												"body": {
													"nativeSrc": "4821:51:8",
													"nodeType": "YulBlock",
													"src": "4821:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4838:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4838:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4859:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4859:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4843:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "4843:15:8"
																		},
																		"nativeSrc": "4843:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4843:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4831:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4831:6:8"
																},
																"nativeSrc": "4831:35:8",
																"nodeType": "YulFunctionCall",
																"src": "4831:35:8"
															},
															"nativeSrc": "4831:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "4831:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4760:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4809:5:8",
														"nodeType": "YulTypedName",
														"src": "4809:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4816:3:8",
														"nodeType": "YulTypedName",
														"src": "4816:3:8",
														"type": ""
													}
												],
												"src": "4760:112:8"
											},
											{
												"body": {
													"nativeSrc": "4972:120:8",
													"nodeType": "YulBlock",
													"src": "4972:120:8",
													"statements": [
														{
															"nativeSrc": "4982:26:8",
															"nodeType": "YulAssignment",
															"src": "4982:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4994:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4994:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5005:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5005:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4990:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4990:3:8"
																},
																"nativeSrc": "4990:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4990:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4982:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4982:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5058:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5058:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5071:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5071:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5082:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5082:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5067:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5067:3:8"
																		},
																		"nativeSrc": "5067:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5067:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5018:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "5018:39:8"
																},
																"nativeSrc": "5018:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5018:67:8"
															},
															"nativeSrc": "5018:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5018:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4878:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4944:9:8",
														"nodeType": "YulTypedName",
														"src": "4944:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4956:6:8",
														"nodeType": "YulTypedName",
														"src": "4956:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4967:4:8",
														"nodeType": "YulTypedName",
														"src": "4967:4:8",
														"type": ""
													}
												],
												"src": "4878:214:8"
											},
											{
												"body": {
													"nativeSrc": "5164:263:8",
													"nodeType": "YulBlock",
													"src": "5164:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5210:83:8",
																"nodeType": "YulBlock",
																"src": "5210:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5212:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5212:77:8"
																			},
																			"nativeSrc": "5212:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5212:79:8"
																		},
																		"nativeSrc": "5212:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5212:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5185:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5185:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5194:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5194:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5181:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5181:3:8"
																		},
																		"nativeSrc": "5181:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5181:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5206:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5206:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5177:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5177:3:8"
																},
																"nativeSrc": "5177:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5177:32:8"
															},
															"nativeSrc": "5174:119:8",
															"nodeType": "YulIf",
															"src": "5174:119:8"
														},
														{
															"nativeSrc": "5303:117:8",
															"nodeType": "YulBlock",
															"src": "5303:117:8",
															"statements": [
																{
																	"nativeSrc": "5318:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5318:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5332:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5332:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5322:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5322:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5347:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5347:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5382:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5382:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5393:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5393:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5378:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5378:3:8"
																				},
																				"nativeSrc": "5378:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5378:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5402:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5402:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5357:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5357:20:8"
																		},
																		"nativeSrc": "5357:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5357:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5347:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5347:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5098:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5134:9:8",
														"nodeType": "YulTypedName",
														"src": "5134:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5145:7:8",
														"nodeType": "YulTypedName",
														"src": "5145:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5157:6:8",
														"nodeType": "YulTypedName",
														"src": "5157:6:8",
														"type": ""
													}
												],
												"src": "5098:329:8"
											},
											{
												"body": {
													"nativeSrc": "5516:391:8",
													"nodeType": "YulBlock",
													"src": "5516:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5562:83:8",
																"nodeType": "YulBlock",
																"src": "5562:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5564:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5564:77:8"
																			},
																			"nativeSrc": "5564:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5564:79:8"
																		},
																		"nativeSrc": "5564:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5564:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5537:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5537:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5546:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5546:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5533:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:8"
																		},
																		"nativeSrc": "5533:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5558:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5558:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5529:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5529:3:8"
																},
																"nativeSrc": "5529:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5529:32:8"
															},
															"nativeSrc": "5526:119:8",
															"nodeType": "YulIf",
															"src": "5526:119:8"
														},
														{
															"nativeSrc": "5655:117:8",
															"nodeType": "YulBlock",
															"src": "5655:117:8",
															"statements": [
																{
																	"nativeSrc": "5670:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5670:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5684:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5684:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5674:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5674:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5699:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5699:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5734:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5734:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5745:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5745:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5730:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5730:3:8"
																				},
																				"nativeSrc": "5730:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5730:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5754:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5754:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5709:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5709:20:8"
																		},
																		"nativeSrc": "5709:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5709:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5699:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5699:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5782:118:8",
															"nodeType": "YulBlock",
															"src": "5782:118:8",
															"statements": [
																{
																	"nativeSrc": "5797:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5797:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5811:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5811:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5801:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5801:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5827:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5827:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5862:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5862:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5873:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5873:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5858:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5858:3:8"
																				},
																				"nativeSrc": "5858:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5858:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5882:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5882:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5837:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5837:20:8"
																		},
																		"nativeSrc": "5837:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5837:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5827:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5827:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "5433:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5478:9:8",
														"nodeType": "YulTypedName",
														"src": "5478:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5489:7:8",
														"nodeType": "YulTypedName",
														"src": "5489:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5501:6:8",
														"nodeType": "YulTypedName",
														"src": "5501:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5509:6:8",
														"nodeType": "YulTypedName",
														"src": "5509:6:8",
														"type": ""
													}
												],
												"src": "5433:474:8"
											},
											{
												"body": {
													"nativeSrc": "5996:391:8",
													"nodeType": "YulBlock",
													"src": "5996:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6042:83:8",
																"nodeType": "YulBlock",
																"src": "6042:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6044:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6044:77:8"
																			},
																			"nativeSrc": "6044:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6044:79:8"
																		},
																		"nativeSrc": "6044:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6044:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6017:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6017:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6026:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6026:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6013:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6013:3:8"
																		},
																		"nativeSrc": "6013:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6013:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6038:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6038:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6009:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6009:3:8"
																},
																"nativeSrc": "6009:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6009:32:8"
															},
															"nativeSrc": "6006:119:8",
															"nodeType": "YulIf",
															"src": "6006:119:8"
														},
														{
															"nativeSrc": "6135:117:8",
															"nodeType": "YulBlock",
															"src": "6135:117:8",
															"statements": [
																{
																	"nativeSrc": "6150:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6150:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6164:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6164:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6154:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6154:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6179:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6179:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6214:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6214:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6225:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6225:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6210:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6210:3:8"
																				},
																				"nativeSrc": "6210:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6210:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6234:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6234:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6189:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6189:20:8"
																		},
																		"nativeSrc": "6189:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6189:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6179:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6179:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6262:118:8",
															"nodeType": "YulBlock",
															"src": "6262:118:8",
															"statements": [
																{
																	"nativeSrc": "6277:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6277:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6291:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6291:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6281:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6281:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6307:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6307:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6342:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6342:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6353:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6353:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6338:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6338:3:8"
																				},
																				"nativeSrc": "6338:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6338:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6362:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6362:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6317:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6317:20:8"
																		},
																		"nativeSrc": "6317:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6317:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6307:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6307:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5913:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5958:9:8",
														"nodeType": "YulTypedName",
														"src": "5958:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5969:7:8",
														"nodeType": "YulTypedName",
														"src": "5969:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5981:6:8",
														"nodeType": "YulTypedName",
														"src": "5981:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5989:6:8",
														"nodeType": "YulTypedName",
														"src": "5989:6:8",
														"type": ""
													}
												],
												"src": "5913:474:8"
											},
											{
												"body": {
													"nativeSrc": "6425:28:8",
													"nodeType": "YulBlock",
													"src": "6425:28:8",
													"statements": [
														{
															"nativeSrc": "6435:12:8",
															"nodeType": "YulAssignment",
															"src": "6435:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "6442:5:8",
																"nodeType": "YulIdentifier",
																"src": "6442:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6435:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6435:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "6393:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6411:5:8",
														"nodeType": "YulTypedName",
														"src": "6411:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6421:3:8",
														"nodeType": "YulTypedName",
														"src": "6421:3:8",
														"type": ""
													}
												],
												"src": "6393:60:8"
											},
											{
												"body": {
													"nativeSrc": "6519:82:8",
													"nodeType": "YulBlock",
													"src": "6519:82:8",
													"statements": [
														{
															"nativeSrc": "6529:66:8",
															"nodeType": "YulAssignment",
															"src": "6529:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6587:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "6587:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "6569:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "6569:17:8"
																				},
																				"nativeSrc": "6569:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6569:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6560:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "6560:8:8"
																		},
																		"nativeSrc": "6560:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6560:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "6542:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "6542:17:8"
																},
																"nativeSrc": "6542:53:8",
																"nodeType": "YulFunctionCall",
																"src": "6542:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6529:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "6529:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "6459:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6499:5:8",
														"nodeType": "YulTypedName",
														"src": "6499:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6509:9:8",
														"nodeType": "YulTypedName",
														"src": "6509:9:8",
														"type": ""
													}
												],
												"src": "6459:142:8"
											},
											{
												"body": {
													"nativeSrc": "6667:66:8",
													"nodeType": "YulBlock",
													"src": "6667:66:8",
													"statements": [
														{
															"nativeSrc": "6677:50:8",
															"nodeType": "YulAssignment",
															"src": "6677:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6721:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6721:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "6690:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "6690:30:8"
																},
																"nativeSrc": "6690:37:8",
																"nodeType": "YulFunctionCall",
																"src": "6690:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6677:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "6677:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "6607:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6647:5:8",
														"nodeType": "YulTypedName",
														"src": "6647:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6657:9:8",
														"nodeType": "YulTypedName",
														"src": "6657:9:8",
														"type": ""
													}
												],
												"src": "6607:126:8"
											},
											{
												"body": {
													"nativeSrc": "6813:66:8",
													"nodeType": "YulBlock",
													"src": "6813:66:8",
													"statements": [
														{
															"nativeSrc": "6823:50:8",
															"nodeType": "YulAssignment",
															"src": "6823:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6867:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6867:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "6836:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "6836:30:8"
																},
																"nativeSrc": "6836:37:8",
																"nodeType": "YulFunctionCall",
																"src": "6836:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6823:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "6823:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$942_to_t_address",
												"nativeSrc": "6739:140:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6793:5:8",
														"nodeType": "YulTypedName",
														"src": "6793:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6803:9:8",
														"nodeType": "YulTypedName",
														"src": "6803:9:8",
														"type": ""
													}
												],
												"src": "6739:140:8"
											},
											{
												"body": {
													"nativeSrc": "6964:80:8",
													"nodeType": "YulBlock",
													"src": "6964:80:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6981:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6981:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7031:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7031:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$942_to_t_address",
																			"nativeSrc": "6986:44:8",
																			"nodeType": "YulIdentifier",
																			"src": "6986:44:8"
																		},
																		"nativeSrc": "6986:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6986:51:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6974:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6974:6:8"
																},
																"nativeSrc": "6974:64:8",
																"nodeType": "YulFunctionCall",
																"src": "6974:64:8"
															},
															"nativeSrc": "6974:64:8",
															"nodeType": "YulExpressionStatement",
															"src": "6974:64:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$942_to_t_address_fromStack",
												"nativeSrc": "6885:159:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6952:5:8",
														"nodeType": "YulTypedName",
														"src": "6952:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6959:3:8",
														"nodeType": "YulTypedName",
														"src": "6959:3:8",
														"type": ""
													}
												],
												"src": "6885:159:8"
											},
											{
												"body": {
													"nativeSrc": "7162:138:8",
													"nodeType": "YulBlock",
													"src": "7162:138:8",
													"statements": [
														{
															"nativeSrc": "7172:26:8",
															"nodeType": "YulAssignment",
															"src": "7172:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7184:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7184:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7195:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7195:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7180:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7180:3:8"
																},
																"nativeSrc": "7180:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7180:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7172:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7172:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7266:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7266:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7279:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7279:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7290:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7290:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7275:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7275:3:8"
																		},
																		"nativeSrc": "7275:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7275:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$942_to_t_address_fromStack",
																	"nativeSrc": "7208:57:8",
																	"nodeType": "YulIdentifier",
																	"src": "7208:57:8"
																},
																"nativeSrc": "7208:85:8",
																"nodeType": "YulFunctionCall",
																"src": "7208:85:8"
															},
															"nativeSrc": "7208:85:8",
															"nodeType": "YulExpressionStatement",
															"src": "7208:85:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$942__to_t_address__fromStack_reversed",
												"nativeSrc": "7050:250:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7134:9:8",
														"nodeType": "YulTypedName",
														"src": "7134:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7146:6:8",
														"nodeType": "YulTypedName",
														"src": "7146:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7157:4:8",
														"nodeType": "YulTypedName",
														"src": "7157:4:8",
														"type": ""
													}
												],
												"src": "7050:250:8"
											},
											{
												"body": {
													"nativeSrc": "7334:152:8",
													"nodeType": "YulBlock",
													"src": "7334:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7351:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7351:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7354:77:8",
																		"nodeType": "YulLiteral",
																		"src": "7354:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7344:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7344:6:8"
																},
																"nativeSrc": "7344:88:8",
																"nodeType": "YulFunctionCall",
																"src": "7344:88:8"
															},
															"nativeSrc": "7344:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "7344:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7448:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7448:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7451:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7451:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7441:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7441:6:8"
																},
																"nativeSrc": "7441:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7441:15:8"
															},
															"nativeSrc": "7441:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7441:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7472:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7472:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7475:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7475:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7465:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7465:6:8"
																},
																"nativeSrc": "7465:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7465:15:8"
															},
															"nativeSrc": "7465:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7465:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7306:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7306:180:8"
											},
											{
												"body": {
													"nativeSrc": "7543:269:8",
													"nodeType": "YulBlock",
													"src": "7543:269:8",
													"statements": [
														{
															"nativeSrc": "7553:22:8",
															"nodeType": "YulAssignment",
															"src": "7553:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7567:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7567:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7573:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7573:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7563:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7563:3:8"
																},
																"nativeSrc": "7563:12:8",
																"nodeType": "YulFunctionCall",
																"src": "7563:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7553:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7553:6:8"
																}
															]
														},
														{
															"nativeSrc": "7584:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7584:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7614:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7614:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7620:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7620:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7610:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7610:3:8"
																},
																"nativeSrc": "7610:12:8",
																"nodeType": "YulFunctionCall",
																"src": "7610:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7588:18:8",
																	"nodeType": "YulTypedName",
																	"src": "7588:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7661:51:8",
																"nodeType": "YulBlock",
																"src": "7661:51:8",
																"statements": [
																	{
																		"nativeSrc": "7675:27:8",
																		"nodeType": "YulAssignment",
																		"src": "7675:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7689:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "7689:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7697:4:8",
																					"nodeType": "YulLiteral",
																					"src": "7697:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7685:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7685:3:8"
																			},
																			"nativeSrc": "7685:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7685:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7675:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7675:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7641:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "7641:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7634:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7634:6:8"
																},
																"nativeSrc": "7634:26:8",
																"nodeType": "YulFunctionCall",
																"src": "7634:26:8"
															},
															"nativeSrc": "7631:81:8",
															"nodeType": "YulIf",
															"src": "7631:81:8"
														},
														{
															"body": {
																"nativeSrc": "7764:42:8",
																"nodeType": "YulBlock",
																"src": "7764:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7778:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7778:16:8"
																			},
																			"nativeSrc": "7778:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7778:18:8"
																		},
																		"nativeSrc": "7778:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7778:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7728:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "7728:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7751:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7751:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7759:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7759:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7748:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "7748:2:8"
																		},
																		"nativeSrc": "7748:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7748:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7725:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7725:2:8"
																},
																"nativeSrc": "7725:38:8",
																"nodeType": "YulFunctionCall",
																"src": "7725:38:8"
															},
															"nativeSrc": "7722:84:8",
															"nodeType": "YulIf",
															"src": "7722:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7492:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7527:4:8",
														"nodeType": "YulTypedName",
														"src": "7527:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7536:6:8",
														"nodeType": "YulTypedName",
														"src": "7536:6:8",
														"type": ""
													}
												],
												"src": "7492:320:8"
											},
											{
												"body": {
													"nativeSrc": "7846:152:8",
													"nodeType": "YulBlock",
													"src": "7846:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7863:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7863:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7866:77:8",
																		"nodeType": "YulLiteral",
																		"src": "7866:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7856:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7856:6:8"
																},
																"nativeSrc": "7856:88:8",
																"nodeType": "YulFunctionCall",
																"src": "7856:88:8"
															},
															"nativeSrc": "7856:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "7856:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7960:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7960:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7963:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7963:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7953:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7953:6:8"
																},
																"nativeSrc": "7953:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7953:15:8"
															},
															"nativeSrc": "7953:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7953:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7984:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7984:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7987:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7987:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7977:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7977:6:8"
																},
																"nativeSrc": "7977:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7977:15:8"
															},
															"nativeSrc": "7977:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7977:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7818:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7818:180:8"
											},
											{
												"body": {
													"nativeSrc": "8048:147:8",
													"nodeType": "YulBlock",
													"src": "8048:147:8",
													"statements": [
														{
															"nativeSrc": "8058:25:8",
															"nodeType": "YulAssignment",
															"src": "8058:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8081:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8081:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8063:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8063:17:8"
																},
																"nativeSrc": "8063:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8063:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8058:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8058:1:8"
																}
															]
														},
														{
															"nativeSrc": "8092:25:8",
															"nodeType": "YulAssignment",
															"src": "8092:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8115:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8115:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8097:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8097:17:8"
																},
																"nativeSrc": "8097:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8097:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8092:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8092:1:8"
																}
															]
														},
														{
															"nativeSrc": "8126:16:8",
															"nodeType": "YulAssignment",
															"src": "8126:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8137:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8137:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8140:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8140:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8133:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8133:3:8"
																},
																"nativeSrc": "8133:9:8",
																"nodeType": "YulFunctionCall",
																"src": "8133:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8126:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8126:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8166:22:8",
																"nodeType": "YulBlock",
																"src": "8166:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8168:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "8168:16:8"
																			},
																			"nativeSrc": "8168:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8168:18:8"
																		},
																		"nativeSrc": "8168:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8168:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8158:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8158:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8161:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8161:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8155:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8155:2:8"
																},
																"nativeSrc": "8155:10:8",
																"nodeType": "YulFunctionCall",
																"src": "8155:10:8"
															},
															"nativeSrc": "8152:36:8",
															"nodeType": "YulIf",
															"src": "8152:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8004:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8035:1:8",
														"nodeType": "YulTypedName",
														"src": "8035:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8038:1:8",
														"nodeType": "YulTypedName",
														"src": "8038:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8044:3:8",
														"nodeType": "YulTypedName",
														"src": "8044:3:8",
														"type": ""
													}
												],
												"src": "8004:191:8"
											},
											{
												"body": {
													"nativeSrc": "8307:74:8",
													"nodeType": "YulBlock",
													"src": "8307:74:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8329:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8329:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8337:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8337:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8325:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8325:3:8"
																		},
																		"nativeSrc": "8325:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8325:14:8"
																	},
																	{
																		"hexValue": "5465616d2076657374696e6720636c696666206e6f742072656163686564",
																		"kind": "string",
																		"nativeSrc": "8341:32:8",
																		"nodeType": "YulLiteral",
																		"src": "8341:32:8",
																		"type": "",
																		"value": "Team vesting cliff not reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8318:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8318:6:8"
																},
																"nativeSrc": "8318:56:8",
																"nodeType": "YulFunctionCall",
																"src": "8318:56:8"
															},
															"nativeSrc": "8318:56:8",
															"nodeType": "YulExpressionStatement",
															"src": "8318:56:8"
														}
													]
												},
												"name": "store_literal_in_memory_d34530ebdb5a42e16e6038e9e978022f0bb2a52fd5e9c2ee90e61fbc64c16fa9",
												"nativeSrc": "8201:180:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8299:6:8",
														"nodeType": "YulTypedName",
														"src": "8299:6:8",
														"type": ""
													}
												],
												"src": "8201:180:8"
											},
											{
												"body": {
													"nativeSrc": "8533:220:8",
													"nodeType": "YulBlock",
													"src": "8533:220:8",
													"statements": [
														{
															"nativeSrc": "8543:74:8",
															"nodeType": "YulAssignment",
															"src": "8543:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8609:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8609:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8614:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8614:2:8",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8550:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "8550:58:8"
																},
																"nativeSrc": "8550:67:8",
																"nodeType": "YulFunctionCall",
																"src": "8550:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8543:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8543:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8715:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8715:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d34530ebdb5a42e16e6038e9e978022f0bb2a52fd5e9c2ee90e61fbc64c16fa9",
																	"nativeSrc": "8626:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "8626:88:8"
																},
																"nativeSrc": "8626:93:8",
																"nodeType": "YulFunctionCall",
																"src": "8626:93:8"
															},
															"nativeSrc": "8626:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "8626:93:8"
														},
														{
															"nativeSrc": "8728:19:8",
															"nodeType": "YulAssignment",
															"src": "8728:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8739:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8739:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8744:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8744:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8735:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8735:3:8"
																},
																"nativeSrc": "8735:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8735:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8728:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8728:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d34530ebdb5a42e16e6038e9e978022f0bb2a52fd5e9c2ee90e61fbc64c16fa9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8387:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8521:3:8",
														"nodeType": "YulTypedName",
														"src": "8521:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8529:3:8",
														"nodeType": "YulTypedName",
														"src": "8529:3:8",
														"type": ""
													}
												],
												"src": "8387:366:8"
											},
											{
												"body": {
													"nativeSrc": "8930:248:8",
													"nodeType": "YulBlock",
													"src": "8930:248:8",
													"statements": [
														{
															"nativeSrc": "8940:26:8",
															"nodeType": "YulAssignment",
															"src": "8940:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8952:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8952:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8963:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8963:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8948:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8948:3:8"
																},
																"nativeSrc": "8948:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8948:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8940:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8940:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8987:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8987:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8998:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8998:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8983:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8983:3:8"
																		},
																		"nativeSrc": "8983:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8983:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9006:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9006:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9012:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9012:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9002:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9002:3:8"
																		},
																		"nativeSrc": "9002:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9002:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8976:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8976:6:8"
																},
																"nativeSrc": "8976:47:8",
																"nodeType": "YulFunctionCall",
																"src": "8976:47:8"
															},
															"nativeSrc": "8976:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "8976:47:8"
														},
														{
															"nativeSrc": "9032:139:8",
															"nodeType": "YulAssignment",
															"src": "9032:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9166:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9166:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d34530ebdb5a42e16e6038e9e978022f0bb2a52fd5e9c2ee90e61fbc64c16fa9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9040:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "9040:124:8"
																},
																"nativeSrc": "9040:131:8",
																"nodeType": "YulFunctionCall",
																"src": "9040:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9032:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9032:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34530ebdb5a42e16e6038e9e978022f0bb2a52fd5e9c2ee90e61fbc64c16fa9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8759:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8910:9:8",
														"nodeType": "YulTypedName",
														"src": "8910:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8925:4:8",
														"nodeType": "YulTypedName",
														"src": "8925:4:8",
														"type": ""
													}
												],
												"src": "8759:419:8"
											},
											{
												"body": {
													"nativeSrc": "9229:149:8",
													"nodeType": "YulBlock",
													"src": "9229:149:8",
													"statements": [
														{
															"nativeSrc": "9239:25:8",
															"nodeType": "YulAssignment",
															"src": "9239:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9262:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9262:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9244:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9244:17:8"
																},
																"nativeSrc": "9244:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9244:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9239:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9239:1:8"
																}
															]
														},
														{
															"nativeSrc": "9273:25:8",
															"nodeType": "YulAssignment",
															"src": "9273:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9296:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9296:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9278:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9278:17:8"
																},
																"nativeSrc": "9278:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9278:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9273:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9273:1:8"
																}
															]
														},
														{
															"nativeSrc": "9307:17:8",
															"nodeType": "YulAssignment",
															"src": "9307:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9319:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9319:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9322:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9322:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9315:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9315:3:8"
																},
																"nativeSrc": "9315:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9315:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9307:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9307:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9349:22:8",
																"nodeType": "YulBlock",
																"src": "9349:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9351:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9351:16:8"
																			},
																			"nativeSrc": "9351:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9351:18:8"
																		},
																		"nativeSrc": "9351:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9351:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9340:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9340:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9346:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9346:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9337:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9337:2:8"
																},
																"nativeSrc": "9337:11:8",
																"nodeType": "YulFunctionCall",
																"src": "9337:11:8"
															},
															"nativeSrc": "9334:37:8",
															"nodeType": "YulIf",
															"src": "9334:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9184:194:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9215:1:8",
														"nodeType": "YulTypedName",
														"src": "9215:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9218:1:8",
														"nodeType": "YulTypedName",
														"src": "9218:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9224:4:8",
														"nodeType": "YulTypedName",
														"src": "9224:4:8",
														"type": ""
													}
												],
												"src": "9184:194:8"
											},
											{
												"body": {
													"nativeSrc": "9432:362:8",
													"nodeType": "YulBlock",
													"src": "9432:362:8",
													"statements": [
														{
															"nativeSrc": "9442:25:8",
															"nodeType": "YulAssignment",
															"src": "9442:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9465:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9465:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9447:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9447:17:8"
																},
																"nativeSrc": "9447:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9447:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9442:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9442:1:8"
																}
															]
														},
														{
															"nativeSrc": "9476:25:8",
															"nodeType": "YulAssignment",
															"src": "9476:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9499:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9499:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9481:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9481:17:8"
																},
																"nativeSrc": "9481:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9481:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9476:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9476:1:8"
																}
															]
														},
														{
															"nativeSrc": "9510:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9510:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9533:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9533:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9536:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9536:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9529:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9529:3:8"
																},
																"nativeSrc": "9529:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9529:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9514:11:8",
																	"nodeType": "YulTypedName",
																	"src": "9514:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9547:41:8",
															"nodeType": "YulAssignment",
															"src": "9547:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9576:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "9576:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9558:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9558:17:8"
																},
																"nativeSrc": "9558:30:8",
																"nodeType": "YulFunctionCall",
																"src": "9558:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9547:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9547:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9765:22:8",
																"nodeType": "YulBlock",
																"src": "9765:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9767:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9767:16:8"
																			},
																			"nativeSrc": "9767:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9767:18:8"
																		},
																		"nativeSrc": "9767:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9767:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9698:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "9698:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9691:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "9691:6:8"
																				},
																				"nativeSrc": "9691:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9691:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9721:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "9721:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9728:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "9728:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9737:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "9737:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9724:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9724:3:8"
																						},
																						"nativeSrc": "9724:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9724:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9718:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9718:2:8"
																				},
																				"nativeSrc": "9718:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9718:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9671:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "9671:2:8"
																		},
																		"nativeSrc": "9671:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9671:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9651:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9651:6:8"
																},
																"nativeSrc": "9651:113:8",
																"nodeType": "YulFunctionCall",
																"src": "9651:113:8"
															},
															"nativeSrc": "9648:139:8",
															"nodeType": "YulIf",
															"src": "9648:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9384:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9415:1:8",
														"nodeType": "YulTypedName",
														"src": "9415:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9418:1:8",
														"nodeType": "YulTypedName",
														"src": "9418:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9424:7:8",
														"nodeType": "YulTypedName",
														"src": "9424:7:8",
														"type": ""
													}
												],
												"src": "9384:410:8"
											},
											{
												"body": {
													"nativeSrc": "9828:152:8",
													"nodeType": "YulBlock",
													"src": "9828:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9845:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9845:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9848:77:8",
																		"nodeType": "YulLiteral",
																		"src": "9848:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9838:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9838:6:8"
																},
																"nativeSrc": "9838:88:8",
																"nodeType": "YulFunctionCall",
																"src": "9838:88:8"
															},
															"nativeSrc": "9838:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "9838:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9942:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9942:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9945:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9945:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9935:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9935:6:8"
																},
																"nativeSrc": "9935:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9935:15:8"
															},
															"nativeSrc": "9935:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9935:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9966:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9966:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9969:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9969:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9959:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9959:6:8"
																},
																"nativeSrc": "9959:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9959:15:8"
															},
															"nativeSrc": "9959:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9959:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "9800:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "9800:180:8"
											},
											{
												"body": {
													"nativeSrc": "10028:143:8",
													"nodeType": "YulBlock",
													"src": "10028:143:8",
													"statements": [
														{
															"nativeSrc": "10038:25:8",
															"nodeType": "YulAssignment",
															"src": "10038:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10061:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10061:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10043:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10043:17:8"
																},
																"nativeSrc": "10043:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10043:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10038:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10038:1:8"
																}
															]
														},
														{
															"nativeSrc": "10072:25:8",
															"nodeType": "YulAssignment",
															"src": "10072:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10095:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10095:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10077:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10077:17:8"
																},
																"nativeSrc": "10077:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10077:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10072:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10072:1:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10119:22:8",
																"nodeType": "YulBlock",
																"src": "10119:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "10121:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10121:16:8"
																			},
																			"nativeSrc": "10121:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10121:18:8"
																		},
																		"nativeSrc": "10121:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10121:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10116:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10116:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10109:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10109:6:8"
																},
																"nativeSrc": "10109:9:8",
																"nodeType": "YulFunctionCall",
																"src": "10109:9:8"
															},
															"nativeSrc": "10106:35:8",
															"nodeType": "YulIf",
															"src": "10106:35:8"
														},
														{
															"nativeSrc": "10151:14:8",
															"nodeType": "YulAssignment",
															"src": "10151:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10160:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10160:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10163:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10163:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10156:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10156:3:8"
																},
																"nativeSrc": "10156:9:8",
																"nodeType": "YulFunctionCall",
																"src": "10156:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10151:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10151:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9986:185:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10017:1:8",
														"nodeType": "YulTypedName",
														"src": "10017:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10020:1:8",
														"nodeType": "YulTypedName",
														"src": "10020:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10026:1:8",
														"nodeType": "YulTypedName",
														"src": "10026:1:8",
														"type": ""
													}
												],
												"src": "9986:185:8"
											},
											{
												"body": {
													"nativeSrc": "10283:75:8",
													"nodeType": "YulBlock",
													"src": "10283:75:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10305:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10305:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10313:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10313:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10301:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10301:3:8"
																		},
																		"nativeSrc": "10301:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10301:14:8"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e7320617661696c61626c6520666f722072656c65617365",
																		"kind": "string",
																		"nativeSrc": "10317:33:8",
																		"nodeType": "YulLiteral",
																		"src": "10317:33:8",
																		"type": "",
																		"value": "No tokens available for release"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10294:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10294:6:8"
																},
																"nativeSrc": "10294:57:8",
																"nodeType": "YulFunctionCall",
																"src": "10294:57:8"
															},
															"nativeSrc": "10294:57:8",
															"nodeType": "YulExpressionStatement",
															"src": "10294:57:8"
														}
													]
												},
												"name": "store_literal_in_memory_cabf40c40e6f36bda09a3c5c985256e9c4ec41609ce08329fbfb3b76b478665c",
												"nativeSrc": "10177:181:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10275:6:8",
														"nodeType": "YulTypedName",
														"src": "10275:6:8",
														"type": ""
													}
												],
												"src": "10177:181:8"
											},
											{
												"body": {
													"nativeSrc": "10510:220:8",
													"nodeType": "YulBlock",
													"src": "10510:220:8",
													"statements": [
														{
															"nativeSrc": "10520:74:8",
															"nodeType": "YulAssignment",
															"src": "10520:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10586:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10586:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10591:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10591:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10527:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "10527:58:8"
																},
																"nativeSrc": "10527:67:8",
																"nodeType": "YulFunctionCall",
																"src": "10527:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10520:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10520:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10692:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10692:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cabf40c40e6f36bda09a3c5c985256e9c4ec41609ce08329fbfb3b76b478665c",
																	"nativeSrc": "10603:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "10603:88:8"
																},
																"nativeSrc": "10603:93:8",
																"nodeType": "YulFunctionCall",
																"src": "10603:93:8"
															},
															"nativeSrc": "10603:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "10603:93:8"
														},
														{
															"nativeSrc": "10705:19:8",
															"nodeType": "YulAssignment",
															"src": "10705:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10716:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10716:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10721:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10721:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10712:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10712:3:8"
																},
																"nativeSrc": "10712:12:8",
																"nodeType": "YulFunctionCall",
																"src": "10712:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10705:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10705:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cabf40c40e6f36bda09a3c5c985256e9c4ec41609ce08329fbfb3b76b478665c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10364:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10498:3:8",
														"nodeType": "YulTypedName",
														"src": "10498:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10506:3:8",
														"nodeType": "YulTypedName",
														"src": "10506:3:8",
														"type": ""
													}
												],
												"src": "10364:366:8"
											},
											{
												"body": {
													"nativeSrc": "10907:248:8",
													"nodeType": "YulBlock",
													"src": "10907:248:8",
													"statements": [
														{
															"nativeSrc": "10917:26:8",
															"nodeType": "YulAssignment",
															"src": "10917:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10929:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10929:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10940:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10940:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10925:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10925:3:8"
																},
																"nativeSrc": "10925:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10925:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10917:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10917:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10964:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10964:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10975:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10975:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10960:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10960:3:8"
																		},
																		"nativeSrc": "10960:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10960:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10983:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10983:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10989:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10989:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10979:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10979:3:8"
																		},
																		"nativeSrc": "10979:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10979:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10953:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10953:6:8"
																},
																"nativeSrc": "10953:47:8",
																"nodeType": "YulFunctionCall",
																"src": "10953:47:8"
															},
															"nativeSrc": "10953:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "10953:47:8"
														},
														{
															"nativeSrc": "11009:139:8",
															"nodeType": "YulAssignment",
															"src": "11009:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11143:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11143:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cabf40c40e6f36bda09a3c5c985256e9c4ec41609ce08329fbfb3b76b478665c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11017:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "11017:124:8"
																},
																"nativeSrc": "11017:131:8",
																"nodeType": "YulFunctionCall",
																"src": "11017:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11009:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11009:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cabf40c40e6f36bda09a3c5c985256e9c4ec41609ce08329fbfb3b76b478665c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10736:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10887:9:8",
														"nodeType": "YulTypedName",
														"src": "10887:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10902:4:8",
														"nodeType": "YulTypedName",
														"src": "10902:4:8",
														"type": ""
													}
												],
												"src": "10736:419:8"
											},
											{
												"body": {
													"nativeSrc": "11267:67:8",
													"nodeType": "YulBlock",
													"src": "11267:67:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11289:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11289:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11297:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11297:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11285:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11285:3:8"
																		},
																		"nativeSrc": "11285:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11285:14:8"
																	},
																	{
																		"hexValue": "6d617820746f6b656e206c696d69742072656163686564",
																		"kind": "string",
																		"nativeSrc": "11301:25:8",
																		"nodeType": "YulLiteral",
																		"src": "11301:25:8",
																		"type": "",
																		"value": "max token limit reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11278:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11278:6:8"
																},
																"nativeSrc": "11278:49:8",
																"nodeType": "YulFunctionCall",
																"src": "11278:49:8"
															},
															"nativeSrc": "11278:49:8",
															"nodeType": "YulExpressionStatement",
															"src": "11278:49:8"
														}
													]
												},
												"name": "store_literal_in_memory_a4f247bcec9e225b0d93cc4c24757f4cdd2d66b299970369f4e497bf5fc471a1",
												"nativeSrc": "11161:173:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11259:6:8",
														"nodeType": "YulTypedName",
														"src": "11259:6:8",
														"type": ""
													}
												],
												"src": "11161:173:8"
											},
											{
												"body": {
													"nativeSrc": "11486:220:8",
													"nodeType": "YulBlock",
													"src": "11486:220:8",
													"statements": [
														{
															"nativeSrc": "11496:74:8",
															"nodeType": "YulAssignment",
															"src": "11496:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11562:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11562:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11567:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11567:2:8",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11503:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "11503:58:8"
																},
																"nativeSrc": "11503:67:8",
																"nodeType": "YulFunctionCall",
																"src": "11503:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11496:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11496:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11668:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11668:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a4f247bcec9e225b0d93cc4c24757f4cdd2d66b299970369f4e497bf5fc471a1",
																	"nativeSrc": "11579:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "11579:88:8"
																},
																"nativeSrc": "11579:93:8",
																"nodeType": "YulFunctionCall",
																"src": "11579:93:8"
															},
															"nativeSrc": "11579:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "11579:93:8"
														},
														{
															"nativeSrc": "11681:19:8",
															"nodeType": "YulAssignment",
															"src": "11681:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11692:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11692:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11697:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11697:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11688:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11688:3:8"
																},
																"nativeSrc": "11688:12:8",
																"nodeType": "YulFunctionCall",
																"src": "11688:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11681:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11681:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a4f247bcec9e225b0d93cc4c24757f4cdd2d66b299970369f4e497bf5fc471a1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11340:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11474:3:8",
														"nodeType": "YulTypedName",
														"src": "11474:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11482:3:8",
														"nodeType": "YulTypedName",
														"src": "11482:3:8",
														"type": ""
													}
												],
												"src": "11340:366:8"
											},
											{
												"body": {
													"nativeSrc": "11883:248:8",
													"nodeType": "YulBlock",
													"src": "11883:248:8",
													"statements": [
														{
															"nativeSrc": "11893:26:8",
															"nodeType": "YulAssignment",
															"src": "11893:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11905:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11905:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11916:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11916:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11901:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11901:3:8"
																},
																"nativeSrc": "11901:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11901:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11893:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11893:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11940:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11940:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11951:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11951:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11936:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11936:3:8"
																		},
																		"nativeSrc": "11936:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11936:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11959:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "11959:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11965:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11965:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11955:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11955:3:8"
																		},
																		"nativeSrc": "11955:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11955:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11929:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11929:6:8"
																},
																"nativeSrc": "11929:47:8",
																"nodeType": "YulFunctionCall",
																"src": "11929:47:8"
															},
															"nativeSrc": "11929:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "11929:47:8"
														},
														{
															"nativeSrc": "11985:139:8",
															"nodeType": "YulAssignment",
															"src": "11985:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12119:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "12119:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a4f247bcec9e225b0d93cc4c24757f4cdd2d66b299970369f4e497bf5fc471a1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11993:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "11993:124:8"
																},
																"nativeSrc": "11993:131:8",
																"nodeType": "YulFunctionCall",
																"src": "11993:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11985:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11985:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a4f247bcec9e225b0d93cc4c24757f4cdd2d66b299970369f4e497bf5fc471a1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11712:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11863:9:8",
														"nodeType": "YulTypedName",
														"src": "11863:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11878:4:8",
														"nodeType": "YulTypedName",
														"src": "11878:4:8",
														"type": ""
													}
												],
												"src": "11712:419:8"
											},
											{
												"body": {
													"nativeSrc": "12243:63:8",
													"nodeType": "YulBlock",
													"src": "12243:63:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12265:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12265:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12273:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12273:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12261:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12261:3:8"
																		},
																		"nativeSrc": "12261:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12261:14:8"
																	},
																	{
																		"hexValue": "48616c76696e67206e6f742064756520796574",
																		"kind": "string",
																		"nativeSrc": "12277:21:8",
																		"nodeType": "YulLiteral",
																		"src": "12277:21:8",
																		"type": "",
																		"value": "Halving not due yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12254:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12254:6:8"
																},
																"nativeSrc": "12254:45:8",
																"nodeType": "YulFunctionCall",
																"src": "12254:45:8"
															},
															"nativeSrc": "12254:45:8",
															"nodeType": "YulExpressionStatement",
															"src": "12254:45:8"
														}
													]
												},
												"name": "store_literal_in_memory_1e3f40b783878aa8a209031c059e17645777610e647ce5118077e34cb75f93ad",
												"nativeSrc": "12137:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12235:6:8",
														"nodeType": "YulTypedName",
														"src": "12235:6:8",
														"type": ""
													}
												],
												"src": "12137:169:8"
											},
											{
												"body": {
													"nativeSrc": "12458:220:8",
													"nodeType": "YulBlock",
													"src": "12458:220:8",
													"statements": [
														{
															"nativeSrc": "12468:74:8",
															"nodeType": "YulAssignment",
															"src": "12468:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12534:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12534:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12539:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12539:2:8",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12475:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "12475:58:8"
																},
																"nativeSrc": "12475:67:8",
																"nodeType": "YulFunctionCall",
																"src": "12475:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12468:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12468:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12640:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12640:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1e3f40b783878aa8a209031c059e17645777610e647ce5118077e34cb75f93ad",
																	"nativeSrc": "12551:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "12551:88:8"
																},
																"nativeSrc": "12551:93:8",
																"nodeType": "YulFunctionCall",
																"src": "12551:93:8"
															},
															"nativeSrc": "12551:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "12551:93:8"
														},
														{
															"nativeSrc": "12653:19:8",
															"nodeType": "YulAssignment",
															"src": "12653:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12664:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12664:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12669:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12669:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12660:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12660:3:8"
																},
																"nativeSrc": "12660:12:8",
																"nodeType": "YulFunctionCall",
																"src": "12660:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12653:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12653:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1e3f40b783878aa8a209031c059e17645777610e647ce5118077e34cb75f93ad_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12312:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12446:3:8",
														"nodeType": "YulTypedName",
														"src": "12446:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12454:3:8",
														"nodeType": "YulTypedName",
														"src": "12454:3:8",
														"type": ""
													}
												],
												"src": "12312:366:8"
											},
											{
												"body": {
													"nativeSrc": "12855:248:8",
													"nodeType": "YulBlock",
													"src": "12855:248:8",
													"statements": [
														{
															"nativeSrc": "12865:26:8",
															"nodeType": "YulAssignment",
															"src": "12865:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12877:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "12877:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12888:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12888:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12873:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12873:3:8"
																},
																"nativeSrc": "12873:18:8",
																"nodeType": "YulFunctionCall",
																"src": "12873:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12865:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12865:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12912:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12912:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12923:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12923:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12908:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12908:3:8"
																		},
																		"nativeSrc": "12908:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12908:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12931:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "12931:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12937:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12937:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12927:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12927:3:8"
																		},
																		"nativeSrc": "12927:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12927:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12901:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12901:6:8"
																},
																"nativeSrc": "12901:47:8",
																"nodeType": "YulFunctionCall",
																"src": "12901:47:8"
															},
															"nativeSrc": "12901:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "12901:47:8"
														},
														{
															"nativeSrc": "12957:139:8",
															"nodeType": "YulAssignment",
															"src": "12957:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13091:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13091:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1e3f40b783878aa8a209031c059e17645777610e647ce5118077e34cb75f93ad_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12965:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "12965:124:8"
																},
																"nativeSrc": "12965:131:8",
																"nodeType": "YulFunctionCall",
																"src": "12965:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12957:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12957:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e3f40b783878aa8a209031c059e17645777610e647ce5118077e34cb75f93ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12684:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12835:9:8",
														"nodeType": "YulTypedName",
														"src": "12835:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12850:4:8",
														"nodeType": "YulTypedName",
														"src": "12850:4:8",
														"type": ""
													}
												],
												"src": "12684:419:8"
											},
											{
												"body": {
													"nativeSrc": "13235:206:8",
													"nodeType": "YulBlock",
													"src": "13235:206:8",
													"statements": [
														{
															"nativeSrc": "13245:26:8",
															"nodeType": "YulAssignment",
															"src": "13245:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13257:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13257:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13268:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13268:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13253:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13253:3:8"
																},
																"nativeSrc": "13253:18:8",
																"nodeType": "YulFunctionCall",
																"src": "13253:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13245:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13245:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13325:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13325:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13338:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13338:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13349:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13349:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13334:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13334:3:8"
																		},
																		"nativeSrc": "13334:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13334:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13281:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "13281:43:8"
																},
																"nativeSrc": "13281:71:8",
																"nodeType": "YulFunctionCall",
																"src": "13281:71:8"
															},
															"nativeSrc": "13281:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "13281:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13406:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13406:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13419:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13419:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13430:2:8",
																				"nodeType": "YulLiteral",
																				"src": "13430:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13415:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13415:3:8"
																		},
																		"nativeSrc": "13415:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13415:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13362:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "13362:43:8"
																},
																"nativeSrc": "13362:72:8",
																"nodeType": "YulFunctionCall",
																"src": "13362:72:8"
															},
															"nativeSrc": "13362:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "13362:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "13109:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13199:9:8",
														"nodeType": "YulTypedName",
														"src": "13199:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13211:6:8",
														"nodeType": "YulTypedName",
														"src": "13211:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13219:6:8",
														"nodeType": "YulTypedName",
														"src": "13219:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13230:4:8",
														"nodeType": "YulTypedName",
														"src": "13230:4:8",
														"type": ""
													}
												],
												"src": "13109:332:8"
											},
											{
												"body": {
													"nativeSrc": "13553:74:8",
													"nodeType": "YulBlock",
													"src": "13553:74:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13575:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "13575:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13583:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13583:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13571:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13571:3:8"
																		},
																		"nativeSrc": "13571:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13571:14:8"
																	},
																	{
																		"hexValue": "6e6f20746f6b656e20617661696c61626c6520666f722072656c65617365",
																		"kind": "string",
																		"nativeSrc": "13587:32:8",
																		"nodeType": "YulLiteral",
																		"src": "13587:32:8",
																		"type": "",
																		"value": "no token available for release"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13564:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13564:6:8"
																},
																"nativeSrc": "13564:56:8",
																"nodeType": "YulFunctionCall",
																"src": "13564:56:8"
															},
															"nativeSrc": "13564:56:8",
															"nodeType": "YulExpressionStatement",
															"src": "13564:56:8"
														}
													]
												},
												"name": "store_literal_in_memory_8f41b7cdbd41efdc278b6e699169b223e8bf648dc2dd642e2ad288da5ffc97a4",
												"nativeSrc": "13447:180:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13545:6:8",
														"nodeType": "YulTypedName",
														"src": "13545:6:8",
														"type": ""
													}
												],
												"src": "13447:180:8"
											},
											{
												"body": {
													"nativeSrc": "13779:220:8",
													"nodeType": "YulBlock",
													"src": "13779:220:8",
													"statements": [
														{
															"nativeSrc": "13789:74:8",
															"nodeType": "YulAssignment",
															"src": "13789:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13855:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13855:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13860:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13860:2:8",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13796:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "13796:58:8"
																},
																"nativeSrc": "13796:67:8",
																"nodeType": "YulFunctionCall",
																"src": "13796:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13789:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13789:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13961:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13961:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8f41b7cdbd41efdc278b6e699169b223e8bf648dc2dd642e2ad288da5ffc97a4",
																	"nativeSrc": "13872:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "13872:88:8"
																},
																"nativeSrc": "13872:93:8",
																"nodeType": "YulFunctionCall",
																"src": "13872:93:8"
															},
															"nativeSrc": "13872:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "13872:93:8"
														},
														{
															"nativeSrc": "13974:19:8",
															"nodeType": "YulAssignment",
															"src": "13974:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13985:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13985:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13990:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13990:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13981:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13981:3:8"
																},
																"nativeSrc": "13981:12:8",
																"nodeType": "YulFunctionCall",
																"src": "13981:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13974:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13974:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8f41b7cdbd41efdc278b6e699169b223e8bf648dc2dd642e2ad288da5ffc97a4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13633:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13767:3:8",
														"nodeType": "YulTypedName",
														"src": "13767:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13775:3:8",
														"nodeType": "YulTypedName",
														"src": "13775:3:8",
														"type": ""
													}
												],
												"src": "13633:366:8"
											},
											{
												"body": {
													"nativeSrc": "14176:248:8",
													"nodeType": "YulBlock",
													"src": "14176:248:8",
													"statements": [
														{
															"nativeSrc": "14186:26:8",
															"nodeType": "YulAssignment",
															"src": "14186:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14198:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14198:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14209:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14209:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14194:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14194:3:8"
																},
																"nativeSrc": "14194:18:8",
																"nodeType": "YulFunctionCall",
																"src": "14194:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14186:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14186:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14233:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14233:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14244:1:8",
																				"nodeType": "YulLiteral",
																				"src": "14244:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14229:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14229:3:8"
																		},
																		"nativeSrc": "14229:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14229:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14252:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "14252:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14258:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14258:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14248:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14248:3:8"
																		},
																		"nativeSrc": "14248:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14248:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14222:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14222:6:8"
																},
																"nativeSrc": "14222:47:8",
																"nodeType": "YulFunctionCall",
																"src": "14222:47:8"
															},
															"nativeSrc": "14222:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "14222:47:8"
														},
														{
															"nativeSrc": "14278:139:8",
															"nodeType": "YulAssignment",
															"src": "14278:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14412:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "14412:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8f41b7cdbd41efdc278b6e699169b223e8bf648dc2dd642e2ad288da5ffc97a4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14286:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "14286:124:8"
																},
																"nativeSrc": "14286:131:8",
																"nodeType": "YulFunctionCall",
																"src": "14286:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14278:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14278:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8f41b7cdbd41efdc278b6e699169b223e8bf648dc2dd642e2ad288da5ffc97a4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14005:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14156:9:8",
														"nodeType": "YulTypedName",
														"src": "14156:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14171:4:8",
														"nodeType": "YulTypedName",
														"src": "14171:4:8",
														"type": ""
													}
												],
												"src": "14005:419:8"
											},
											{
												"body": {
													"nativeSrc": "14536:66:8",
													"nodeType": "YulBlock",
													"src": "14536:66:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14558:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "14558:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14566:1:8",
																				"nodeType": "YulLiteral",
																				"src": "14566:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14554:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14554:3:8"
																		},
																		"nativeSrc": "14554:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14554:14:8"
																	},
																	{
																		"hexValue": "6d617820746f6b656e20696d69742072656163686564",
																		"kind": "string",
																		"nativeSrc": "14570:24:8",
																		"nodeType": "YulLiteral",
																		"src": "14570:24:8",
																		"type": "",
																		"value": "max token imit reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14547:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14547:6:8"
																},
																"nativeSrc": "14547:48:8",
																"nodeType": "YulFunctionCall",
																"src": "14547:48:8"
															},
															"nativeSrc": "14547:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "14547:48:8"
														}
													]
												},
												"name": "store_literal_in_memory_a5274ccc4c50c7a89b0ec1936586b74d88d243fdb846199e4e01b0dce82ee867",
												"nativeSrc": "14430:172:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14528:6:8",
														"nodeType": "YulTypedName",
														"src": "14528:6:8",
														"type": ""
													}
												],
												"src": "14430:172:8"
											},
											{
												"body": {
													"nativeSrc": "14754:220:8",
													"nodeType": "YulBlock",
													"src": "14754:220:8",
													"statements": [
														{
															"nativeSrc": "14764:74:8",
															"nodeType": "YulAssignment",
															"src": "14764:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14830:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14830:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14835:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14835:2:8",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14771:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "14771:58:8"
																},
																"nativeSrc": "14771:67:8",
																"nodeType": "YulFunctionCall",
																"src": "14771:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14764:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14764:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14936:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14936:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a5274ccc4c50c7a89b0ec1936586b74d88d243fdb846199e4e01b0dce82ee867",
																	"nativeSrc": "14847:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "14847:88:8"
																},
																"nativeSrc": "14847:93:8",
																"nodeType": "YulFunctionCall",
																"src": "14847:93:8"
															},
															"nativeSrc": "14847:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "14847:93:8"
														},
														{
															"nativeSrc": "14949:19:8",
															"nodeType": "YulAssignment",
															"src": "14949:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14960:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14960:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14965:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14965:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14956:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14956:3:8"
																},
																"nativeSrc": "14956:12:8",
																"nodeType": "YulFunctionCall",
																"src": "14956:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14949:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14949:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a5274ccc4c50c7a89b0ec1936586b74d88d243fdb846199e4e01b0dce82ee867_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14608:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14742:3:8",
														"nodeType": "YulTypedName",
														"src": "14742:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14750:3:8",
														"nodeType": "YulTypedName",
														"src": "14750:3:8",
														"type": ""
													}
												],
												"src": "14608:366:8"
											},
											{
												"body": {
													"nativeSrc": "15151:248:8",
													"nodeType": "YulBlock",
													"src": "15151:248:8",
													"statements": [
														{
															"nativeSrc": "15161:26:8",
															"nodeType": "YulAssignment",
															"src": "15161:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15173:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "15173:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15184:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15184:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15169:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15169:3:8"
																},
																"nativeSrc": "15169:18:8",
																"nodeType": "YulFunctionCall",
																"src": "15169:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15161:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15161:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15208:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15208:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15219:1:8",
																				"nodeType": "YulLiteral",
																				"src": "15219:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15204:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15204:3:8"
																		},
																		"nativeSrc": "15204:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15204:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15227:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "15227:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15233:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15233:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15223:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15223:3:8"
																		},
																		"nativeSrc": "15223:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15223:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15197:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15197:6:8"
																},
																"nativeSrc": "15197:47:8",
																"nodeType": "YulFunctionCall",
																"src": "15197:47:8"
															},
															"nativeSrc": "15197:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "15197:47:8"
														},
														{
															"nativeSrc": "15253:139:8",
															"nodeType": "YulAssignment",
															"src": "15253:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15387:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "15387:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a5274ccc4c50c7a89b0ec1936586b74d88d243fdb846199e4e01b0dce82ee867_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15261:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "15261:124:8"
																},
																"nativeSrc": "15261:131:8",
																"nodeType": "YulFunctionCall",
																"src": "15261:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15253:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15253:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a5274ccc4c50c7a89b0ec1936586b74d88d243fdb846199e4e01b0dce82ee867__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14980:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15131:9:8",
														"nodeType": "YulTypedName",
														"src": "15131:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15146:4:8",
														"nodeType": "YulTypedName",
														"src": "15146:4:8",
														"type": ""
													}
												],
												"src": "14980:419:8"
											},
											{
												"body": {
													"nativeSrc": "15511:75:8",
													"nodeType": "YulBlock",
													"src": "15511:75:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15533:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "15533:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15541:1:8",
																				"nodeType": "YulLiteral",
																				"src": "15541:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15529:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15529:3:8"
																		},
																		"nativeSrc": "15529:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15529:14:8"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "15545:33:8",
																		"nodeType": "YulLiteral",
																		"src": "15545:33:8",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15522:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15522:6:8"
																},
																"nativeSrc": "15522:57:8",
																"nodeType": "YulFunctionCall",
																"src": "15522:57:8"
															},
															"nativeSrc": "15522:57:8",
															"nodeType": "YulExpressionStatement",
															"src": "15522:57:8"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "15405:181:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15503:6:8",
														"nodeType": "YulTypedName",
														"src": "15503:6:8",
														"type": ""
													}
												],
												"src": "15405:181:8"
											},
											{
												"body": {
													"nativeSrc": "15738:220:8",
													"nodeType": "YulBlock",
													"src": "15738:220:8",
													"statements": [
														{
															"nativeSrc": "15748:74:8",
															"nodeType": "YulAssignment",
															"src": "15748:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15814:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15814:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15819:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15819:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15755:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "15755:58:8"
																},
																"nativeSrc": "15755:67:8",
																"nodeType": "YulFunctionCall",
																"src": "15755:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15748:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15748:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15920:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15920:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "15831:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "15831:88:8"
																},
																"nativeSrc": "15831:93:8",
																"nodeType": "YulFunctionCall",
																"src": "15831:93:8"
															},
															"nativeSrc": "15831:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "15831:93:8"
														},
														{
															"nativeSrc": "15933:19:8",
															"nodeType": "YulAssignment",
															"src": "15933:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15944:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15944:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15949:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15949:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15940:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15940:3:8"
																},
																"nativeSrc": "15940:12:8",
																"nodeType": "YulFunctionCall",
																"src": "15940:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15933:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15933:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15592:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15726:3:8",
														"nodeType": "YulTypedName",
														"src": "15726:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15734:3:8",
														"nodeType": "YulTypedName",
														"src": "15734:3:8",
														"type": ""
													}
												],
												"src": "15592:366:8"
											},
											{
												"body": {
													"nativeSrc": "16135:248:8",
													"nodeType": "YulBlock",
													"src": "16135:248:8",
													"statements": [
														{
															"nativeSrc": "16145:26:8",
															"nodeType": "YulAssignment",
															"src": "16145:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16157:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "16157:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16168:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16168:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16153:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16153:3:8"
																},
																"nativeSrc": "16153:18:8",
																"nodeType": "YulFunctionCall",
																"src": "16153:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16145:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "16145:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16192:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "16192:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16203:1:8",
																				"nodeType": "YulLiteral",
																				"src": "16203:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16188:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16188:3:8"
																		},
																		"nativeSrc": "16188:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16188:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16211:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "16211:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16217:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "16217:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16207:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16207:3:8"
																		},
																		"nativeSrc": "16207:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16207:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16181:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16181:6:8"
																},
																"nativeSrc": "16181:47:8",
																"nodeType": "YulFunctionCall",
																"src": "16181:47:8"
															},
															"nativeSrc": "16181:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "16181:47:8"
														},
														{
															"nativeSrc": "16237:139:8",
															"nodeType": "YulAssignment",
															"src": "16237:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16371:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "16371:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16245:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "16245:124:8"
																},
																"nativeSrc": "16245:131:8",
																"nodeType": "YulFunctionCall",
																"src": "16245:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16237:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "16237:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15964:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16115:9:8",
														"nodeType": "YulTypedName",
														"src": "16115:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16130:4:8",
														"nodeType": "YulTypedName",
														"src": "16130:4:8",
														"type": ""
													}
												],
												"src": "15964:419:8"
											},
											{
												"body": {
													"nativeSrc": "16543:288:8",
													"nodeType": "YulBlock",
													"src": "16543:288:8",
													"statements": [
														{
															"nativeSrc": "16553:26:8",
															"nodeType": "YulAssignment",
															"src": "16553:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16565:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "16565:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16576:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16576:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16561:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16561:3:8"
																},
																"nativeSrc": "16561:18:8",
																"nodeType": "YulFunctionCall",
																"src": "16561:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16553:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "16553:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16633:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "16633:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16646:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "16646:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16657:1:8",
																				"nodeType": "YulLiteral",
																				"src": "16657:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16642:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16642:3:8"
																		},
																		"nativeSrc": "16642:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16642:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16589:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "16589:43:8"
																},
																"nativeSrc": "16589:71:8",
																"nodeType": "YulFunctionCall",
																"src": "16589:71:8"
															},
															"nativeSrc": "16589:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "16589:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16714:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "16714:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16727:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "16727:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16738:2:8",
																				"nodeType": "YulLiteral",
																				"src": "16738:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16723:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16723:3:8"
																		},
																		"nativeSrc": "16723:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16723:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16670:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "16670:43:8"
																},
																"nativeSrc": "16670:72:8",
																"nodeType": "YulFunctionCall",
																"src": "16670:72:8"
															},
															"nativeSrc": "16670:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "16670:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16796:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "16796:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16809:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "16809:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16820:2:8",
																				"nodeType": "YulLiteral",
																				"src": "16820:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16805:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16805:3:8"
																		},
																		"nativeSrc": "16805:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16805:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16752:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "16752:43:8"
																},
																"nativeSrc": "16752:72:8",
																"nodeType": "YulFunctionCall",
																"src": "16752:72:8"
															},
															"nativeSrc": "16752:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "16752:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "16389:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16499:9:8",
														"nodeType": "YulTypedName",
														"src": "16499:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16511:6:8",
														"nodeType": "YulTypedName",
														"src": "16511:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16519:6:8",
														"nodeType": "YulTypedName",
														"src": "16519:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16527:6:8",
														"nodeType": "YulTypedName",
														"src": "16527:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16538:4:8",
														"nodeType": "YulTypedName",
														"src": "16538:4:8",
														"type": ""
													}
												],
												"src": "16389:442:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$942_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$942_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$942_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$942__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$942_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_d34530ebdb5a42e16e6038e9e978022f0bb2a52fd5e9c2ee90e61fbc64c16fa9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Team vesting cliff not reached\")\n\n    }\n\n    function abi_encode_t_stringliteral_d34530ebdb5a42e16e6038e9e978022f0bb2a52fd5e9c2ee90e61fbc64c16fa9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_d34530ebdb5a42e16e6038e9e978022f0bb2a52fd5e9c2ee90e61fbc64c16fa9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d34530ebdb5a42e16e6038e9e978022f0bb2a52fd5e9c2ee90e61fbc64c16fa9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d34530ebdb5a42e16e6038e9e978022f0bb2a52fd5e9c2ee90e61fbc64c16fa9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_cabf40c40e6f36bda09a3c5c985256e9c4ec41609ce08329fbfb3b76b478665c(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens available for release\")\n\n    }\n\n    function abi_encode_t_stringliteral_cabf40c40e6f36bda09a3c5c985256e9c4ec41609ce08329fbfb3b76b478665c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_cabf40c40e6f36bda09a3c5c985256e9c4ec41609ce08329fbfb3b76b478665c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cabf40c40e6f36bda09a3c5c985256e9c4ec41609ce08329fbfb3b76b478665c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cabf40c40e6f36bda09a3c5c985256e9c4ec41609ce08329fbfb3b76b478665c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a4f247bcec9e225b0d93cc4c24757f4cdd2d66b299970369f4e497bf5fc471a1(memPtr) {\n\n        mstore(add(memPtr, 0), \"max token limit reached\")\n\n    }\n\n    function abi_encode_t_stringliteral_a4f247bcec9e225b0d93cc4c24757f4cdd2d66b299970369f4e497bf5fc471a1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_a4f247bcec9e225b0d93cc4c24757f4cdd2d66b299970369f4e497bf5fc471a1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a4f247bcec9e225b0d93cc4c24757f4cdd2d66b299970369f4e497bf5fc471a1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a4f247bcec9e225b0d93cc4c24757f4cdd2d66b299970369f4e497bf5fc471a1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e3f40b783878aa8a209031c059e17645777610e647ce5118077e34cb75f93ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Halving not due yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e3f40b783878aa8a209031c059e17645777610e647ce5118077e34cb75f93ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_1e3f40b783878aa8a209031c059e17645777610e647ce5118077e34cb75f93ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e3f40b783878aa8a209031c059e17645777610e647ce5118077e34cb75f93ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e3f40b783878aa8a209031c059e17645777610e647ce5118077e34cb75f93ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_8f41b7cdbd41efdc278b6e699169b223e8bf648dc2dd642e2ad288da5ffc97a4(memPtr) {\n\n        mstore(add(memPtr, 0), \"no token available for release\")\n\n    }\n\n    function abi_encode_t_stringliteral_8f41b7cdbd41efdc278b6e699169b223e8bf648dc2dd642e2ad288da5ffc97a4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_8f41b7cdbd41efdc278b6e699169b223e8bf648dc2dd642e2ad288da5ffc97a4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8f41b7cdbd41efdc278b6e699169b223e8bf648dc2dd642e2ad288da5ffc97a4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8f41b7cdbd41efdc278b6e699169b223e8bf648dc2dd642e2ad288da5ffc97a4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a5274ccc4c50c7a89b0ec1936586b74d88d243fdb846199e4e01b0dce82ee867(memPtr) {\n\n        mstore(add(memPtr, 0), \"max token imit reached\")\n\n    }\n\n    function abi_encode_t_stringliteral_a5274ccc4c50c7a89b0ec1936586b74d88d243fdb846199e4e01b0dce82ee867_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_a5274ccc4c50c7a89b0ec1936586b74d88d243fdb846199e4e01b0dce82ee867(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a5274ccc4c50c7a89b0ec1936586b74d88d243fdb846199e4e01b0dce82ee867__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a5274ccc4c50c7a89b0ec1936586b74d88d243fdb846199e4e01b0dce82ee867_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610204575f3560e01c8063715018a611610118578063a9059cbb116100ab578063dc31adee1161007a578063dc31adee14610578578063dd62ed3e14610582578063df7f989f146105b2578063e9cbd822146105d0578063f2fde38b146105ee57610204565b8063a9059cbb146104ee578063b0a65b3e1461051e578063ba115cb61461053c578063cc1776d31461055a57610204565b80638da5cb5b116100e75780638da5cb5b14610478578063926165d71461049657806395d89b41146104b2578063a6f59846146104d057610204565b8063715018a6146104285780637b0a47ee146104325780638b887e7e146104505780638cbb6df71461045a57610204565b80632cca9dfd1161019b5780633adde9c11161016a5780633adde9c1146103805780634f0dbaf21461039e5780634f7041a5146103bc57806356bf536c146103da57806370a08231146103f857610204565b80632cca9dfd146103085780632ff2e9dc14610326578063313ce56714610344578063329430ca1461036257610204565b806318160ddd116101d757806318160ddd1461027e5780631f6722b61461029c57806323256627146102ba57806323b872dd146102d857610204565b806306fdde03146102085780630733f92b14610226578063095ea7b31461024457806314c411c714610274575b5f80fd5b61021061060a565b60405161021d919061172c565b60405180910390f35b61022e61069a565b60405161023b9190611764565b60405180910390f35b61025e60048036038101906102599190611805565b6106a0565b60405161026b919061185d565b60405180910390f35b61027c6106c2565b005b610286610843565b6040516102939190611764565b60405180910390f35b6102a461084c565b6040516102b19190611764565b60405180910390f35b6102c2610852565b6040516102cf9190611764565b60405180910390f35b6102f260048036038101906102ed9190611876565b610857565b6040516102ff919061185d565b60405180910390f35b610310610885565b60405161031d91906118d5565b60405180910390f35b61032e61089d565b60405161033b9190611764565b60405180910390f35b61034c6108ad565b6040516103599190611909565b60405180910390f35b61036a6108b5565b6040516103779190611764565b60405180910390f35b6103886108bb565b6040516103959190611764565b60405180910390f35b6103a66108c3565b6040516103b391906118d5565b60405180910390f35b6103c46108db565b6040516103d19190611764565b60405180910390f35b6103e26108e1565b6040516103ef91906118d5565b60405180910390f35b610412600480360381019061040d9190611922565b6108f9565b60405161041f9190611764565b60405180910390f35b61043061093e565b005b61043a610951565b6040516104479190611764565b60405180910390f35b610458610957565b005b610462610a02565b60405161046f9190611764565b60405180910390f35b610480610a08565b60405161048d91906118d5565b60405180910390f35b6104b060048036038101906104ab919061194d565b610a30565b005b6104ba610ac3565b6040516104c7919061172c565b60405180910390f35b6104d8610b53565b6040516104e59190611764565b60405180910390f35b61050860048036038101906105039190611805565b610b59565b604051610515919061185d565b60405180910390f35b610526610b7b565b60405161053391906118d5565b60405180910390f35b610544610b93565b60405161055191906118d5565b60405180910390f35b610562610bab565b60405161056f9190611764565b60405180910390f35b610580610bb1565b005b61059c6004803603810190610597919061198b565b610ccd565b6040516105a99190611764565b60405180910390f35b6105ba610d4f565b6040516105c791906118d5565b60405180910390f35b6105d8610d67565b6040516105e59190611a24565b60405180910390f35b61060860048036038101906106039190611922565b610d8c565b005b60606003805461061990611a6a565b80601f016020809104026020016040519081016040528092919081815260200182805461064590611a6a565b80156106905780601f1061066757610100808354040283529160200191610690565b820191905f5260205f20905b81548152906001019060200180831161067357829003601f168201915b5050505050905090565b60135481565b5f806106aa610e10565b90506106b7818585610e17565b600191505092915050565b6106ca610e29565b6106d2610eb0565b6302c7ea00600c546106e49190611ac7565b421015610726576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071d90611b44565b60405180910390fd5b5f6302c7ea00600c546107399190611ac7565b426107449190611b62565b90505f630784ce0082600f5461075a9190611b95565b6107649190611c03565b90505f601054826107759190611b62565b90508060105f8282546107889190611ac7565b925050819055505f82116107d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c890611c7d565b60405180910390fd5b600f546010541115610818576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080f90611ce5565b60405180910390fd5b610836734b0897b0513fdc7c541b6d9d7e929c4e5364d2db82610eff565b505050610841610f7e565b565b5f600254905090565b60125481565b601981565b5f80610861610e10565b905061086e858285610f88565b61087985858561101a565b60019150509392505050565b73583031d1113ad414f02576bd6afabfb30214022581565b6b033b2e3c9fd0803ce800000081565b5f6012905090565b600f5481565b6301e1338081565b73dd870fa1b7c4700f2bd7f44238821c26f739214881565b60085481565b73ca35b7d915458ef540ade6068dfe2f44e8fa733c81565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610946610e29565b61094f5f6110a2565b565b600b5481565b6301e13380600a546109699190611ac7565b4210156109ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a290611d4d565b60405180910390fd5b6002600b546109ba9190611c03565b600b8190555042600a819055507ff92b4d3a8d8ba77170dd5cf6b65260191092093f924263a88c3c60dd8495f091600b546040516109f89190611764565b60405180910390a1565b600a5481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610a38610e29565b81600b819055508060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600a819055507fde2d0064b82669942e6a9cff523014473c366efc3cf147b14e0b1f4cbecc4bc88282604051610ab7929190611d6b565b60405180910390a15050565b606060048054610ad290611a6a565b80601f0160208091040260200160405190810160405280929190818152602001828054610afe90611a6a565b8015610b495780601f10610b2057610100808354040283529160200191610b49565b820191905f5260205f20905b815481529060010190602001808311610b2c57829003601f168201915b5050505050905090565b60105481565b5f80610b63610e10565b9050610b7081858561101a565b600191505092915050565b730a098eda01ce92ff4a4ccb7a4fffb5a43ebc70dc81565b7314723a09acff6d2a60dcdf7aa4aff308fddc160c81565b60095481565b610bb9610e29565b610bc1610eb0565b5f600e5442610bd09190611b62565b90505f60115482601254610be49190611b95565b610bee9190611c03565b90505f60135482610bff9190611b62565b90508060135f828254610c129190611ac7565b925050819055505f8211610c5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5290611ddc565b60405180910390fd5b6012546013541115610ca2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9990611e44565b60405180910390fd5b610cc07314723a09acff6d2a60dcdf7aa4aff308fddc160c82610eff565b505050610ccb610f7e565b565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b734b0897b0513fdc7c541b6d9d7e929c4e5364d2db81565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610d94610e29565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e04575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610dfb91906118d5565b60405180910390fd5b610e0d816110a2565b50565b5f33905090565b610e248383836001611165565b505050565b610e31610e10565b73ffffffffffffffffffffffffffffffffffffffff16610e4f610a08565b73ffffffffffffffffffffffffffffffffffffffff1614610eae57610e72610e10565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610ea591906118d5565b60405180910390fd5b565b600260065403610ef5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eec90611eac565b60405180910390fd5b6002600681905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f6f575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610f6691906118d5565b60405180910390fd5b610f7a5f8383611334565b5050565b6001600681905550565b5f610f938484610ccd565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146110145781811015611005578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610ffc93929190611eca565b60405180910390fd5b61101384848484035f611165565b5b50505050565b5f60643073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146110585760085461105c565b6009545b836110679190611b95565b6110719190611c03565b9050611089848483856110849190611b62565b61154d565b5f81111561109c5761109b848261163d565b5b50505050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036111d5575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016111cc91906118d5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611245575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161123c91906118d5565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561132e578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113259190611764565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611384578060025f8282546113789190611ac7565b92505081905550611452565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561140d578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161140493929190611eca565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611499578060025f82825403925050819055506114e3565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516115409190611764565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115bd575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016115b491906118d5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361162d575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161162491906118d5565b60405180910390fd5b611638838383611334565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116ad575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016116a491906118d5565b60405180910390fd5b6116b8825f83611334565b5050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6116fe826116bc565b61170881856116c6565b93506117188185602086016116d6565b611721816116e4565b840191505092915050565b5f6020820190508181035f83015261174481846116f4565b905092915050565b5f819050919050565b61175e8161174c565b82525050565b5f6020820190506117775f830184611755565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6117aa82611781565b9050919050565b6117ba816117a0565b81146117c4575f80fd5b50565b5f813590506117d5816117b1565b92915050565b6117e48161174c565b81146117ee575f80fd5b50565b5f813590506117ff816117db565b92915050565b5f806040838503121561181b5761181a61177d565b5b5f611828858286016117c7565b9250506020611839858286016117f1565b9150509250929050565b5f8115159050919050565b61185781611843565b82525050565b5f6020820190506118705f83018461184e565b92915050565b5f805f6060848603121561188d5761188c61177d565b5b5f61189a868287016117c7565b93505060206118ab868287016117c7565b92505060406118bc868287016117f1565b9150509250925092565b6118cf816117a0565b82525050565b5f6020820190506118e85f8301846118c6565b92915050565b5f60ff82169050919050565b611903816118ee565b82525050565b5f60208201905061191c5f8301846118fa565b92915050565b5f602082840312156119375761193661177d565b5b5f611944848285016117c7565b91505092915050565b5f80604083850312156119635761196261177d565b5b5f611970858286016117f1565b9250506020611981858286016117c7565b9150509250929050565b5f80604083850312156119a1576119a061177d565b5b5f6119ae858286016117c7565b92505060206119bf858286016117c7565b9150509250929050565b5f819050919050565b5f6119ec6119e76119e284611781565b6119c9565b611781565b9050919050565b5f6119fd826119d2565b9050919050565b5f611a0e826119f3565b9050919050565b611a1e81611a04565b82525050565b5f602082019050611a375f830184611a15565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611a8157607f821691505b602082108103611a9457611a93611a3d565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611ad18261174c565b9150611adc8361174c565b9250828201905080821115611af457611af3611a9a565b5b92915050565b7f5465616d2076657374696e6720636c696666206e6f74207265616368656400005f82015250565b5f611b2e601e836116c6565b9150611b3982611afa565b602082019050919050565b5f6020820190508181035f830152611b5b81611b22565b9050919050565b5f611b6c8261174c565b9150611b778361174c565b9250828203905081811115611b8f57611b8e611a9a565b5b92915050565b5f611b9f8261174c565b9150611baa8361174c565b9250828202611bb88161174c565b91508282048414831517611bcf57611bce611a9a565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611c0d8261174c565b9150611c188361174c565b925082611c2857611c27611bd6565b5b828204905092915050565b7f4e6f20746f6b656e7320617661696c61626c6520666f722072656c65617365005f82015250565b5f611c67601f836116c6565b9150611c7282611c33565b602082019050919050565b5f6020820190508181035f830152611c9481611c5b565b9050919050565b7f6d617820746f6b656e206c696d697420726561636865640000000000000000005f82015250565b5f611ccf6017836116c6565b9150611cda82611c9b565b602082019050919050565b5f6020820190508181035f830152611cfc81611cc3565b9050919050565b7f48616c76696e67206e6f742064756520796574000000000000000000000000005f82015250565b5f611d376013836116c6565b9150611d4282611d03565b602082019050919050565b5f6020820190508181035f830152611d6481611d2b565b9050919050565b5f604082019050611d7e5f830185611755565b611d8b60208301846118c6565b9392505050565b7f6e6f20746f6b656e20617661696c61626c6520666f722072656c6561736500005f82015250565b5f611dc6601e836116c6565b9150611dd182611d92565b602082019050919050565b5f6020820190508181035f830152611df381611dba565b9050919050565b7f6d617820746f6b656e20696d69742072656163686564000000000000000000005f82015250565b5f611e2e6016836116c6565b9150611e3982611dfa565b602082019050919050565b5f6020820190508181035f830152611e5b81611e22565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611e96601f836116c6565b9150611ea182611e62565b602082019050919050565b5f6020820190508181035f830152611ec381611e8a565b9050919050565b5f606082019050611edd5f8301866118c6565b611eea6020830185611755565b611ef76040830184611755565b94935050505056fea26469706673582212201e68689faab59f77a2bb4f3b877489ec46d2bf5de7f1c820060292283356da6264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x204 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xDC31ADEE GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xDC31ADEE EQ PUSH2 0x578 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x582 JUMPI DUP1 PUSH4 0xDF7F989F EQ PUSH2 0x5B2 JUMPI DUP1 PUSH4 0xE9CBD822 EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5EE JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0xB0A65B3E EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0xBA115CB6 EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0xCC1776D3 EQ PUSH2 0x55A JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0x926165D7 EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0xA6F59846 EQ PUSH2 0x4D0 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x8B887E7E EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0x8CBB6DF7 EQ PUSH2 0x45A JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x2CCA9DFD GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x3ADDE9C1 GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x3ADDE9C1 EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x4F0DBAF2 EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x4F7041A5 EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0x56BF536C EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3F8 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x2CCA9DFD EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x329430CA EQ PUSH2 0x362 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x1F6722B6 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x23256627 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2D8 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x733F92B EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x14C411C7 EQ PUSH2 0x274 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x210 PUSH2 0x60A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x172C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x1805 JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27C PUSH2 0x6C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x286 PUSH2 0x843 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH2 0x84C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C2 PUSH2 0x852 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x1876 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x310 PUSH2 0x885 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32E PUSH2 0x89D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34C PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36A PUSH2 0x8B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x388 PUSH2 0x8BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A6 PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C4 PUSH2 0x8DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E2 PUSH2 0x8E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x412 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x1922 JUMP JUMPDEST PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x430 PUSH2 0x93E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43A PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x458 PUSH2 0x957 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x462 PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x480 PUSH2 0xA08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48D SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST PUSH2 0xA30 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4BA PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C7 SWAP2 SWAP1 PUSH2 0x172C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D8 PUSH2 0xB53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x508 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x503 SWAP2 SWAP1 PUSH2 0x1805 JUMP JUMPDEST PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x515 SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x526 PUSH2 0xB7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x544 PUSH2 0xB93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x562 PUSH2 0xBAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56F SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x580 PUSH2 0xBB1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH2 0xCCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A9 SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BA PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D8 PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E5 SWAP2 SWAP1 PUSH2 0x1A24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x608 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x603 SWAP2 SWAP1 PUSH2 0x1922 JUMP JUMPDEST PUSH2 0xD8C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x619 SWAP1 PUSH2 0x1A6A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x645 SWAP1 PUSH2 0x1A6A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x690 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x667 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x690 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x673 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6AA PUSH2 0xE10 JUMP JUMPDEST SWAP1 POP PUSH2 0x6B7 DUP2 DUP6 DUP6 PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6CA PUSH2 0xE29 JUMP JUMPDEST PUSH2 0x6D2 PUSH2 0xEB0 JUMP JUMPDEST PUSH4 0x2C7EA00 PUSH1 0xC SLOAD PUSH2 0x6E4 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x726 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71D SWAP1 PUSH2 0x1B44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH4 0x2C7EA00 PUSH1 0xC SLOAD PUSH2 0x739 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST TIMESTAMP PUSH2 0x744 SWAP2 SWAP1 PUSH2 0x1B62 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0x784CE00 DUP3 PUSH1 0xF SLOAD PUSH2 0x75A SWAP2 SWAP1 PUSH2 0x1B95 JUMP JUMPDEST PUSH2 0x764 SWAP2 SWAP1 PUSH2 0x1C03 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x10 SLOAD DUP3 PUSH2 0x775 SWAP2 SWAP1 PUSH2 0x1B62 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x10 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x788 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP3 GT PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C8 SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF SLOAD PUSH1 0x10 SLOAD GT ISZERO PUSH2 0x818 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80F SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x836 PUSH20 0x4B0897B0513FDC7C541B6D9D7E929C4E5364D2DB DUP3 PUSH2 0xEFF JUMP JUMPDEST POP POP POP PUSH2 0x841 PUSH2 0xF7E JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x19 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x861 PUSH2 0xE10 JUMP JUMPDEST SWAP1 POP PUSH2 0x86E DUP6 DUP3 DUP6 PUSH2 0xF88 JUMP JUMPDEST PUSH2 0x879 DUP6 DUP6 DUP6 PUSH2 0x101A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0x583031D1113AD414F02576BD6AFABFB302140225 DUP2 JUMP JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH20 0xDD870FA1B7C4700F2BD7F44238821C26F7392148 DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH20 0xCA35B7D915458EF540ADE6068DFE2F44E8FA733C DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x946 PUSH2 0xE29 JUMP JUMPDEST PUSH2 0x94F PUSH0 PUSH2 0x10A2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH4 0x1E13380 PUSH1 0xA SLOAD PUSH2 0x969 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x9AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A2 SWAP1 PUSH2 0x1D4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xB SLOAD PUSH2 0x9BA SWAP2 SWAP1 PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH32 0xF92B4D3A8D8BA77170DD5CF6B65260191092093F924263A88C3C60DD8495F091 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH2 0x9F8 SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA38 PUSH2 0xE29 JUMP JUMPDEST DUP2 PUSH1 0xB DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH32 0xDE2D0064B82669942E6A9CFF523014473C366EFC3CF147B14E0B1F4CBECC4BC8 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xAB7 SWAP3 SWAP2 SWAP1 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xAD2 SWAP1 PUSH2 0x1A6A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAFE SWAP1 PUSH2 0x1A6A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB49 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB20 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB49 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB2C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB63 PUSH2 0xE10 JUMP JUMPDEST SWAP1 POP PUSH2 0xB70 DUP2 DUP6 DUP6 PUSH2 0x101A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xA098EDA01CE92FF4A4CCB7A4FFFB5A43EBC70DC DUP2 JUMP JUMPDEST PUSH20 0x14723A09ACFF6D2A60DCDF7AA4AFF308FDDC160C DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xBB9 PUSH2 0xE29 JUMP JUMPDEST PUSH2 0xBC1 PUSH2 0xEB0 JUMP JUMPDEST PUSH0 PUSH1 0xE SLOAD TIMESTAMP PUSH2 0xBD0 SWAP2 SWAP1 PUSH2 0x1B62 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x11 SLOAD DUP3 PUSH1 0x12 SLOAD PUSH2 0xBE4 SWAP2 SWAP1 PUSH2 0x1B95 JUMP JUMPDEST PUSH2 0xBEE SWAP2 SWAP1 PUSH2 0x1C03 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x13 SLOAD DUP3 PUSH2 0xBFF SWAP2 SWAP1 PUSH2 0x1B62 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x13 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC12 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP3 GT PUSH2 0xC5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC52 SWAP1 PUSH2 0x1DDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD GT ISZERO PUSH2 0xCA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC99 SWAP1 PUSH2 0x1E44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC0 PUSH20 0x14723A09ACFF6D2A60DCDF7AA4AFF308FDDC160C DUP3 PUSH2 0xEFF JUMP JUMPDEST POP POP POP PUSH2 0xCCB PUSH2 0xF7E JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0x4B0897B0513FDC7C541B6D9D7E929C4E5364D2DB DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xD94 PUSH2 0xE29 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE04 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDFB SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE0D DUP2 PUSH2 0x10A2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE24 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1165 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xE31 PUSH2 0xE10 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE4F PUSH2 0xA08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEAE JUMPI PUSH2 0xE72 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA5 SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xEF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEEC SWAP1 PUSH2 0x1EAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF6F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF66 SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF7A PUSH0 DUP4 DUP4 PUSH2 0x1334 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF93 DUP5 DUP5 PUSH2 0xCCD JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1014 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1005 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1013 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1165 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x64 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1058 JUMPI PUSH1 0x8 SLOAD PUSH2 0x105C JUMP JUMPDEST PUSH1 0x9 SLOAD JUMPDEST DUP4 PUSH2 0x1067 SWAP2 SWAP1 PUSH2 0x1B95 JUMP JUMPDEST PUSH2 0x1071 SWAP2 SWAP1 PUSH2 0x1C03 JUMP JUMPDEST SWAP1 POP PUSH2 0x1089 DUP5 DUP5 DUP4 DUP6 PUSH2 0x1084 SWAP2 SWAP1 PUSH2 0x1B62 JUMP JUMPDEST PUSH2 0x154D JUMP JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x109C JUMPI PUSH2 0x109B DUP5 DUP3 PUSH2 0x163D JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11D5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11CC SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1245 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123C SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x132E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1325 SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1384 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1378 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1452 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x140D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1404 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1499 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x14E3 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1540 SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15BD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B4 SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x162D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1624 SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1638 DUP4 DUP4 DUP4 PUSH2 0x1334 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16AD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A4 SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16B8 DUP3 PUSH0 DUP4 PUSH2 0x1334 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16FE DUP3 PUSH2 0x16BC JUMP JUMPDEST PUSH2 0x1708 DUP2 DUP6 PUSH2 0x16C6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1718 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16D6 JUMP JUMPDEST PUSH2 0x1721 DUP2 PUSH2 0x16E4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1744 DUP2 DUP5 PUSH2 0x16F4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x175E DUP2 PUSH2 0x174C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1777 PUSH0 DUP4 ADD DUP5 PUSH2 0x1755 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17AA DUP3 PUSH2 0x1781 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17BA DUP2 PUSH2 0x17A0 JUMP JUMPDEST DUP2 EQ PUSH2 0x17C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17D5 DUP2 PUSH2 0x17B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E4 DUP2 PUSH2 0x174C JUMP JUMPDEST DUP2 EQ PUSH2 0x17EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17FF DUP2 PUSH2 0x17DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x181B JUMPI PUSH2 0x181A PUSH2 0x177D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1828 DUP6 DUP3 DUP7 ADD PUSH2 0x17C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1839 DUP6 DUP3 DUP7 ADD PUSH2 0x17F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1857 DUP2 PUSH2 0x1843 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1870 PUSH0 DUP4 ADD DUP5 PUSH2 0x184E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x188D JUMPI PUSH2 0x188C PUSH2 0x177D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x189A DUP7 DUP3 DUP8 ADD PUSH2 0x17C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18AB DUP7 DUP3 DUP8 ADD PUSH2 0x17C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18BC DUP7 DUP3 DUP8 ADD PUSH2 0x17F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x18CF DUP2 PUSH2 0x17A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18E8 PUSH0 DUP4 ADD DUP5 PUSH2 0x18C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1903 DUP2 PUSH2 0x18EE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x191C PUSH0 DUP4 ADD DUP5 PUSH2 0x18FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1937 JUMPI PUSH2 0x1936 PUSH2 0x177D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1944 DUP5 DUP3 DUP6 ADD PUSH2 0x17C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1963 JUMPI PUSH2 0x1962 PUSH2 0x177D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1970 DUP6 DUP3 DUP7 ADD PUSH2 0x17F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1981 DUP6 DUP3 DUP7 ADD PUSH2 0x17C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19A1 JUMPI PUSH2 0x19A0 PUSH2 0x177D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19AE DUP6 DUP3 DUP7 ADD PUSH2 0x17C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19BF DUP6 DUP3 DUP7 ADD PUSH2 0x17C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19EC PUSH2 0x19E7 PUSH2 0x19E2 DUP5 PUSH2 0x1781 JUMP JUMPDEST PUSH2 0x19C9 JUMP JUMPDEST PUSH2 0x1781 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19FD DUP3 PUSH2 0x19D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A0E DUP3 PUSH2 0x19F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A1E DUP2 PUSH2 0x1A04 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A37 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A81 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A94 JUMPI PUSH2 0x1A93 PUSH2 0x1A3D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1AD1 DUP3 PUSH2 0x174C JUMP JUMPDEST SWAP2 POP PUSH2 0x1ADC DUP4 PUSH2 0x174C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1AF4 JUMPI PUSH2 0x1AF3 PUSH2 0x1A9A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5465616D2076657374696E6720636C696666206E6F7420726561636865640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B2E PUSH1 0x1E DUP4 PUSH2 0x16C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B39 DUP3 PUSH2 0x1AFA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B5B DUP2 PUSH2 0x1B22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B6C DUP3 PUSH2 0x174C JUMP JUMPDEST SWAP2 POP PUSH2 0x1B77 DUP4 PUSH2 0x174C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1B8F JUMPI PUSH2 0x1B8E PUSH2 0x1A9A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B9F DUP3 PUSH2 0x174C JUMP JUMPDEST SWAP2 POP PUSH2 0x1BAA DUP4 PUSH2 0x174C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1BB8 DUP2 PUSH2 0x174C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1BCF JUMPI PUSH2 0x1BCE PUSH2 0x1A9A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C0D DUP3 PUSH2 0x174C JUMP JUMPDEST SWAP2 POP PUSH2 0x1C18 DUP4 PUSH2 0x174C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1C28 JUMPI PUSH2 0x1C27 PUSH2 0x1BD6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320617661696C61626C6520666F722072656C6561736500 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C67 PUSH1 0x1F DUP4 PUSH2 0x16C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C72 DUP3 PUSH2 0x1C33 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C94 DUP2 PUSH2 0x1C5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D617820746F6B656E206C696D69742072656163686564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CCF PUSH1 0x17 DUP4 PUSH2 0x16C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CDA DUP3 PUSH2 0x1C9B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CFC DUP2 PUSH2 0x1CC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x48616C76696E67206E6F74206475652079657400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D37 PUSH1 0x13 DUP4 PUSH2 0x16C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D42 DUP3 PUSH2 0x1D03 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D64 DUP2 PUSH2 0x1D2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D7E PUSH0 DUP4 ADD DUP6 PUSH2 0x1755 JUMP JUMPDEST PUSH2 0x1D8B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E6F20746F6B656E20617661696C61626C6520666F722072656C656173650000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DC6 PUSH1 0x1E DUP4 PUSH2 0x16C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DD1 DUP3 PUSH2 0x1D92 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DF3 DUP2 PUSH2 0x1DBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D617820746F6B656E20696D6974207265616368656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E2E PUSH1 0x16 DUP4 PUSH2 0x16C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E39 DUP3 PUSH2 0x1DFA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E5B DUP2 PUSH2 0x1E22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E96 PUSH1 0x1F DUP4 PUSH2 0x16C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EA1 DUP3 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EC3 DUP2 PUSH2 0x1E8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1EDD PUSH0 DUP4 ADD DUP7 PUSH2 0x18C6 JUMP JUMPDEST PUSH2 0x1EEA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1755 JUMP JUMPDEST PUSH2 0x1EF7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1755 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E PUSH9 0x689FAAB59F77A2BB4F EXTCODESIZE DUP8 PUSH21 0x89EC46D2BF5DE7F1C820060292283356DA6264736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "231:5278:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1083:38:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:642:7;;;:::i;:::-;;2849:97:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1020:57:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;807:53;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1462:91:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;286:65;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;867:53:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;518:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1367:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;388:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1775:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;487:25:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4300:288;;;:::i;:::-;;451:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3925:334:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1981:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;926:33:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1875:91:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1662:107;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;419:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3335:584;;;:::i;:::-;;3551:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1559:97:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;357:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:3;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;1083:38:7:-;;;;:::o;3998:186:3:-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2688:642:7:-;1531:13:0;:11;:13::i;:::-;2261:21:2::1;:19;:21::i;:::-;638:12:7::2;2786:18;;:31;;;;:::i;:::-;2767:15;:50;;2759:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;2862:19;638:12;2903:18;;:31;;;;:::i;:::-;2884:15;:51;;;;:::i;:::-;2862:73;;2945:20;696:12;2985:11;2969:13;;:27;;;;:::i;:::-;2968:51;;;;:::i;:::-;2945:74;;3029:18;3065;;3050:12;:33;;;;:::i;:::-;3029:54;;3115:10;3093:18;;:32;;;;;;;:::i;:::-;;;;;;;;3158:1;3143:12;:16;3135:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;3235:13;;3213:18;;:35;;3205:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;3285:38;1614:42;3312:10;3285:5;:38::i;:::-;2749:581;;;2303:20:2::1;:18;:20::i;:::-;2688:642:7:o:0;2849:97:3:-;2901:7;2927:12;;2920:19;;2849:97;:::o;1020:57:7:-;;;;:::o;807:53::-;858:2;807:53;:::o;4776:244:3:-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;1462:91:7:-;1511:42;1462:91;:::o;286:65::-;327:24;286:65;:::o;2707:82:3:-;2756:5;2780:2;2773:9;;2707:82;:::o;867:53:7:-;;;;:::o;518:49::-;559:8;518:49;:::o;1367:89::-;1414:42;1367:89;:::o;388:25::-;;;;:::o;1775:94::-;1827:42;1775:94;:::o;3004:116:3:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;487:25:7:-;;;;:::o;4300:288::-;559:8;4383:15;;:32;;;;:::i;:::-;4364:15;:51;;4343:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;4497:1;4484:10;;:14;;;;:::i;:::-;4471:10;:27;;;;4526:15;4508;:33;;;;4557:24;4570:10;;4557:24;;;;;;:::i;:::-;;;;;;;;4300:288::o;451:30::-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;3925:334:7:-;1531:13:0;:11;:13::i;:::-;4074:18:7::1;4061:10;:31;;;;4122:11;4102:10;;:32;;;;;;;;;;;;;;;;;;4162:15;4144;:33;;;;4192:60;4220:18;4240:11;4192:60;;;;;;;:::i;:::-;;;;;;;;3925:334:::0;;:::o;1981:93:3:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;926:33:7:-;;;;:::o;3315:178:3:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;1875:91:7:-;1924:42;1875:91;:::o;1662:107::-;1727:42;1662:107;:::o;419:26::-;;;;:::o;3335:584::-;1531:13:0;:11;:13::i;:::-;2261:21:2::1;:19;:21::i;:::-;3410:19:7::2;3450:23;;3432:15;:41;;;;:::i;:::-;3410:63;;3483:20;3541:24;;3528:11;3507:18;;:32;;;;:::i;:::-;3506:59;;;;:::i;:::-;3483:82;;3575:23;3616;;3601:12;:38;;;;:::i;:::-;3575:64;;3676:15;3649:23;;:42;;;;;;;:::i;:::-;;;;;;;;3724:1;3709:12;:16;3701:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;3804:18;;3777:23;;:45;;3769:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;3858:53;1727:42;3895:15;3858:5;:53::i;:::-;3400:519;;;2303:20:2::1;:18;:20::i;:::-;3335:584:7:o:0;3551:140:3:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;1559:97:7:-;1614:42;1559:97;:::o;357:24::-;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8734:128:3:-;8818:37;8827:5;8834:7;8843:5;8850:4;8818:8;:37::i;:::-;8734:128;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;7466:208:3:-;7555:1;7536:21;;:7;:21;;;7532:91;;7609:1;7580:32;;;;;;;;;;;:::i;:::-;;;;;;;;7532:91;7632:35;7648:1;7652:7;7661:5;7632:7;:35::i;:::-;7466:208;;:::o;2629:209:2:-;1716:1;2809:7;:22;;;;2629:209::o;10423:477:3:-;10522:24;10549:25;10559:5;10566:7;10549:9;:25::i;:::-;10522:52;;10608:17;10588:16;:37;10584:310;;10664:5;10645:16;:24;10641:130;;;10723:7;10732:16;10750:5;10696:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10641:130;10812:57;10821:5;10828:7;10856:5;10837:16;:24;10863:5;10812:8;:57::i;:::-;10584:310;10512:388;10423:477;;;:::o;5135:372:7:-;5263:17;5356:3;5327:4;5306:26;;:9;:26;;;:45;;5345:6;;5306:45;;;5335:7;;5306:45;5284:6;:68;;;;:::i;:::-;5283:76;;;;:::i;:::-;5263:96;;5369:54;5385:6;5393:9;5413;5404:6;:18;;;;:::i;:::-;5369:15;:54::i;:::-;5449:1;5437:9;:13;5433:68;;;5466:24;5472:6;5480:9;5466:5;:24::i;:::-;5433:68;5253:254;5135:372;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9709:432:3:-;9838:1;9821:19;;:5;:19;;;9817:89;;9892:1;9863:32;;;;;;;;;;;:::i;:::-;;;;;;;;9817:89;9938:1;9919:21;;:7;:21;;;9915:90;;9991:1;9963:31;;;;;;;;;;;:::i;:::-;;;;;;;;9915:90;10044:5;10014:11;:18;10026:5;10014:18;;;;;;;;;;;;;;;:27;10033:7;10014:27;;;;;;;;;;;;;;;:35;;;;10063:9;10059:76;;;10109:7;10093:31;;10102:5;10093:31;;;10118:5;10093:31;;;;;;:::i;:::-;;;;;;;;10059:76;9709:432;;;;:::o;6016:1107::-;6121:1;6105:18;;:4;:18;;;6101:540;;6257:5;6241:12;;:21;;;;;;;:::i;:::-;;;;;;;;6101:540;;;6293:19;6315:9;:15;6325:4;6315:15;;;;;;;;;;;;;;;;6293:37;;6362:5;6348:11;:19;6344:115;;;6419:4;6425:11;6438:5;6394:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6344:115;6611:5;6597:11;:19;6579:9;:15;6589:4;6579:15;;;;;;;;;;;;;;;:37;;;;6279:362;6101:540;6669:1;6655:16;;:2;:16;;;6651:425;;6834:5;6818:12;;:21;;;;;;;;;;;6651:425;;;7046:5;7029:9;:13;7039:2;7029:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6651:425;7106:2;7091:25;;7100:4;7091:25;;;7110:5;7091:25;;;;;;:::i;:::-;;;;;;;;6016:1107;;;:::o;5393:308::-;5500:1;5484:18;;:4;:18;;;5480:86;;5552:1;5525:30;;;;;;;;;;;:::i;:::-;;;;;;;;5480:86;5593:1;5579:16;;:2;:16;;;5575:86;;5647:1;5618:32;;;;;;;;;;;:::i;:::-;;;;;;;;5575:86;5670:24;5678:4;5684:2;5688:5;5670:7;:24::i;:::-;5393:308;;;:::o;7992:206::-;8081:1;8062:21;;:7;:21;;;8058:89;;8133:1;8106:30;;;;;;;;;;;:::i;:::-;;;;;;;;8058:89;8156:35;8164:7;8181:1;8185:5;8156:7;:35::i;:::-;7992:206;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1242:77::-;1279:7;1308:5;1297:16;;1242:77;;;:::o;1325:118::-;1412:24;1430:5;1412:24;:::i;:::-;1407:3;1400:37;1325:118;;:::o;1449:222::-;1542:4;1580:2;1569:9;1565:18;1557:26;;1593:71;1661:1;1650:9;1646:17;1637:6;1593:71;:::i;:::-;1449:222;;;;:::o;1758:117::-;1867:1;1864;1857:12;2004:126;2041:7;2081:42;2074:5;2070:54;2059:65;;2004:126;;;:::o;2136:96::-;2173:7;2202:24;2220:5;2202:24;:::i;:::-;2191:35;;2136:96;;;:::o;2238:122::-;2311:24;2329:5;2311:24;:::i;:::-;2304:5;2301:35;2291:63;;2350:1;2347;2340:12;2291:63;2238:122;:::o;2366:139::-;2412:5;2450:6;2437:20;2428:29;;2466:33;2493:5;2466:33;:::i;:::-;2366:139;;;;:::o;2511:122::-;2584:24;2602:5;2584:24;:::i;:::-;2577:5;2574:35;2564:63;;2623:1;2620;2613:12;2564:63;2511:122;:::o;2639:139::-;2685:5;2723:6;2710:20;2701:29;;2739:33;2766:5;2739:33;:::i;:::-;2639:139;;;;:::o;2784:474::-;2852:6;2860;2909:2;2897:9;2888:7;2884:23;2880:32;2877:119;;;2915:79;;:::i;:::-;2877:119;3035:1;3060:53;3105:7;3096:6;3085:9;3081:22;3060:53;:::i;:::-;3050:63;;3006:117;3162:2;3188:53;3233:7;3224:6;3213:9;3209:22;3188:53;:::i;:::-;3178:63;;3133:118;2784:474;;;;;:::o;3264:90::-;3298:7;3341:5;3334:13;3327:21;3316:32;;3264:90;;;:::o;3360:109::-;3441:21;3456:5;3441:21;:::i;:::-;3436:3;3429:34;3360:109;;:::o;3475:210::-;3562:4;3600:2;3589:9;3585:18;3577:26;;3613:65;3675:1;3664:9;3660:17;3651:6;3613:65;:::i;:::-;3475:210;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:118::-;4403:24;4421:5;4403:24;:::i;:::-;4398:3;4391:37;4316:118;;:::o;4440:222::-;4533:4;4571:2;4560:9;4556:18;4548:26;;4584:71;4652:1;4641:9;4637:17;4628:6;4584:71;:::i;:::-;4440:222;;;;:::o;4668:86::-;4703:7;4743:4;4736:5;4732:16;4721:27;;4668:86;;;:::o;4760:112::-;4843:22;4859:5;4843:22;:::i;:::-;4838:3;4831:35;4760:112;;:::o;4878:214::-;4967:4;5005:2;4994:9;4990:18;4982:26;;5018:67;5082:1;5071:9;5067:17;5058:6;5018:67;:::i;:::-;4878:214;;;;:::o;5098:329::-;5157:6;5206:2;5194:9;5185:7;5181:23;5177:32;5174:119;;;5212:79;;:::i;:::-;5174:119;5332:1;5357:53;5402:7;5393:6;5382:9;5378:22;5357:53;:::i;:::-;5347:63;;5303:117;5098:329;;;;:::o;5433:474::-;5501:6;5509;5558:2;5546:9;5537:7;5533:23;5529:32;5526:119;;;5564:79;;:::i;:::-;5526:119;5684:1;5709:53;5754:7;5745:6;5734:9;5730:22;5709:53;:::i;:::-;5699:63;;5655:117;5811:2;5837:53;5882:7;5873:6;5862:9;5858:22;5837:53;:::i;:::-;5827:63;;5782:118;5433:474;;;;;:::o;5913:::-;5981:6;5989;6038:2;6026:9;6017:7;6013:23;6009:32;6006:119;;;6044:79;;:::i;:::-;6006:119;6164:1;6189:53;6234:7;6225:6;6214:9;6210:22;6189:53;:::i;:::-;6179:63;;6135:117;6291:2;6317:53;6362:7;6353:6;6342:9;6338:22;6317:53;:::i;:::-;6307:63;;6262:118;5913:474;;;;;:::o;6393:60::-;6421:3;6442:5;6435:12;;6393:60;;;:::o;6459:142::-;6509:9;6542:53;6560:34;6569:24;6587:5;6569:24;:::i;:::-;6560:34;:::i;:::-;6542:53;:::i;:::-;6529:66;;6459:142;;;:::o;6607:126::-;6657:9;6690:37;6721:5;6690:37;:::i;:::-;6677:50;;6607:126;;;:::o;6739:140::-;6803:9;6836:37;6867:5;6836:37;:::i;:::-;6823:50;;6739:140;;;:::o;6885:159::-;6986:51;7031:5;6986:51;:::i;:::-;6981:3;6974:64;6885:159;;:::o;7050:250::-;7157:4;7195:2;7184:9;7180:18;7172:26;;7208:85;7290:1;7279:9;7275:17;7266:6;7208:85;:::i;:::-;7050:250;;;;:::o;7306:180::-;7354:77;7351:1;7344:88;7451:4;7448:1;7441:15;7475:4;7472:1;7465:15;7492:320;7536:6;7573:1;7567:4;7563:12;7553:22;;7620:1;7614:4;7610:12;7641:18;7631:81;;7697:4;7689:6;7685:17;7675:27;;7631:81;7759:2;7751:6;7748:14;7728:18;7725:38;7722:84;;7778:18;;:::i;:::-;7722:84;7543:269;7492:320;;;:::o;7818:180::-;7866:77;7863:1;7856:88;7963:4;7960:1;7953:15;7987:4;7984:1;7977:15;8004:191;8044:3;8063:20;8081:1;8063:20;:::i;:::-;8058:25;;8097:20;8115:1;8097:20;:::i;:::-;8092:25;;8140:1;8137;8133:9;8126:16;;8161:3;8158:1;8155:10;8152:36;;;8168:18;;:::i;:::-;8152:36;8004:191;;;;:::o;8201:180::-;8341:32;8337:1;8329:6;8325:14;8318:56;8201:180;:::o;8387:366::-;8529:3;8550:67;8614:2;8609:3;8550:67;:::i;:::-;8543:74;;8626:93;8715:3;8626:93;:::i;:::-;8744:2;8739:3;8735:12;8728:19;;8387:366;;;:::o;8759:419::-;8925:4;8963:2;8952:9;8948:18;8940:26;;9012:9;9006:4;9002:20;8998:1;8987:9;8983:17;8976:47;9040:131;9166:4;9040:131;:::i;:::-;9032:139;;8759:419;;;:::o;9184:194::-;9224:4;9244:20;9262:1;9244:20;:::i;:::-;9239:25;;9278:20;9296:1;9278:20;:::i;:::-;9273:25;;9322:1;9319;9315:9;9307:17;;9346:1;9340:4;9337:11;9334:37;;;9351:18;;:::i;:::-;9334:37;9184:194;;;;:::o;9384:410::-;9424:7;9447:20;9465:1;9447:20;:::i;:::-;9442:25;;9481:20;9499:1;9481:20;:::i;:::-;9476:25;;9536:1;9533;9529:9;9558:30;9576:11;9558:30;:::i;:::-;9547:41;;9737:1;9728:7;9724:15;9721:1;9718:22;9698:1;9691:9;9671:83;9648:139;;9767:18;;:::i;:::-;9648:139;9432:362;9384:410;;;;:::o;9800:180::-;9848:77;9845:1;9838:88;9945:4;9942:1;9935:15;9969:4;9966:1;9959:15;9986:185;10026:1;10043:20;10061:1;10043:20;:::i;:::-;10038:25;;10077:20;10095:1;10077:20;:::i;:::-;10072:25;;10116:1;10106:35;;10121:18;;:::i;:::-;10106:35;10163:1;10160;10156:9;10151:14;;9986:185;;;;:::o;10177:181::-;10317:33;10313:1;10305:6;10301:14;10294:57;10177:181;:::o;10364:366::-;10506:3;10527:67;10591:2;10586:3;10527:67;:::i;:::-;10520:74;;10603:93;10692:3;10603:93;:::i;:::-;10721:2;10716:3;10712:12;10705:19;;10364:366;;;:::o;10736:419::-;10902:4;10940:2;10929:9;10925:18;10917:26;;10989:9;10983:4;10979:20;10975:1;10964:9;10960:17;10953:47;11017:131;11143:4;11017:131;:::i;:::-;11009:139;;10736:419;;;:::o;11161:173::-;11301:25;11297:1;11289:6;11285:14;11278:49;11161:173;:::o;11340:366::-;11482:3;11503:67;11567:2;11562:3;11503:67;:::i;:::-;11496:74;;11579:93;11668:3;11579:93;:::i;:::-;11697:2;11692:3;11688:12;11681:19;;11340:366;;;:::o;11712:419::-;11878:4;11916:2;11905:9;11901:18;11893:26;;11965:9;11959:4;11955:20;11951:1;11940:9;11936:17;11929:47;11993:131;12119:4;11993:131;:::i;:::-;11985:139;;11712:419;;;:::o;12137:169::-;12277:21;12273:1;12265:6;12261:14;12254:45;12137:169;:::o;12312:366::-;12454:3;12475:67;12539:2;12534:3;12475:67;:::i;:::-;12468:74;;12551:93;12640:3;12551:93;:::i;:::-;12669:2;12664:3;12660:12;12653:19;;12312:366;;;:::o;12684:419::-;12850:4;12888:2;12877:9;12873:18;12865:26;;12937:9;12931:4;12927:20;12923:1;12912:9;12908:17;12901:47;12965:131;13091:4;12965:131;:::i;:::-;12957:139;;12684:419;;;:::o;13109:332::-;13230:4;13268:2;13257:9;13253:18;13245:26;;13281:71;13349:1;13338:9;13334:17;13325:6;13281:71;:::i;:::-;13362:72;13430:2;13419:9;13415:18;13406:6;13362:72;:::i;:::-;13109:332;;;;;:::o;13447:180::-;13587:32;13583:1;13575:6;13571:14;13564:56;13447:180;:::o;13633:366::-;13775:3;13796:67;13860:2;13855:3;13796:67;:::i;:::-;13789:74;;13872:93;13961:3;13872:93;:::i;:::-;13990:2;13985:3;13981:12;13974:19;;13633:366;;;:::o;14005:419::-;14171:4;14209:2;14198:9;14194:18;14186:26;;14258:9;14252:4;14248:20;14244:1;14233:9;14229:17;14222:47;14286:131;14412:4;14286:131;:::i;:::-;14278:139;;14005:419;;;:::o;14430:172::-;14570:24;14566:1;14558:6;14554:14;14547:48;14430:172;:::o;14608:366::-;14750:3;14771:67;14835:2;14830:3;14771:67;:::i;:::-;14764:74;;14847:93;14936:3;14847:93;:::i;:::-;14965:2;14960:3;14956:12;14949:19;;14608:366;;;:::o;14980:419::-;15146:4;15184:2;15173:9;15169:18;15161:26;;15233:9;15227:4;15223:20;15219:1;15208:9;15204:17;15197:47;15261:131;15387:4;15261:131;:::i;:::-;15253:139;;14980:419;;;:::o;15405:181::-;15545:33;15541:1;15533:6;15529:14;15522:57;15405:181;:::o;15592:366::-;15734:3;15755:67;15819:2;15814:3;15755:67;:::i;:::-;15748:74;;15831:93;15920:3;15831:93;:::i;:::-;15949:2;15944:3;15940:12;15933:19;;15592:366;;;:::o;15964:419::-;16130:4;16168:2;16157:9;16153:18;16145:26;;16217:9;16211:4;16207:20;16203:1;16192:9;16188:17;16181:47;16245:131;16371:4;16245:131;:::i;:::-;16237:139;;15964:419;;;:::o;16389:442::-;16538:4;16576:2;16565:9;16561:18;16553:26;;16589:71;16657:1;16646:9;16642:17;16633:6;16589:71;:::i;:::-;16670:72;16738:2;16727:9;16723:18;16714:6;16670:72;:::i;:::-;16752;16820:2;16809:9;16805:18;16796:6;16752:72;:::i;:::-;16389:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1597800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"COMMUNITY_GROWTH_AND_MARKETING()": "462",
								"HALVING_PERIOD()": "370",
								"ICO_ALLOCATION()": "440",
								"INITIAL_SUPPLY()": "393",
								"LIQUIDITY_POOL()": "419",
								"MARKETING_INITIAL_UNLOCK()": "415",
								"PLAY_TO_EARN()": "440",
								"STRADEGIC_RESERVE()": "484",
								"TEAM_AND_DEVELOPMENT()": "461",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2962",
								"buyTax()": "2514",
								"decimals()": "428",
								"halveRewards()": "infinite",
								"initializeRewardParameters(uint256,address)": "infinite",
								"lastHalvingTime()": "2537",
								"marketingAllocated()": "2493",
								"name()": "infinite",
								"owner()": "2560",
								"releaseMarketingTokens()": "infinite",
								"releaseTeamTokens()": "infinite",
								"releasedMarketingAmount()": "2494",
								"releasedTeamAmount()": "2536",
								"renounceOwnership()": "infinite",
								"rewardRate()": "2493",
								"sellTax()": "2536",
								"stablecoin()": "infinite",
								"symbol()": "infinite",
								"teamAllocated()": "2537",
								"totalSupply()": "2478",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 231,
									"end": 5509,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 231,
									"end": 5509,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 231,
									"end": 5509,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 412,
									"end": 413,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 388,
									"end": 413,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 388,
									"end": 413,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 444,
									"end": 445,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 419,
									"end": 445,
									"name": "PUSH",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 419,
									"end": 445,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 741,
									"end": 763,
									"name": "PUSH",
									"source": 7,
									"value": "52B7D2DCC80CD2E4000000"
								},
								{
									"begin": 714,
									"end": 763,
									"name": "PUSH",
									"source": 7,
									"value": "D"
								},
								{
									"begin": 714,
									"end": 763,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 898,
									"end": 920,
									"name": "PUSH",
									"source": 7,
									"value": "52B7D2DCC80CD2E4000000"
								},
								{
									"begin": 867,
									"end": 920,
									"name": "PUSH",
									"source": 7,
									"value": "F"
								},
								{
									"begin": 867,
									"end": 920,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1013,
									"name": "PUSH",
									"source": 7,
									"value": "1DA9C00"
								},
								{
									"begin": 965,
									"end": 1013,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 965,
									"end": 1013,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1077,
									"name": "PUSH",
									"source": 7,
									"value": "3E09DE2596099E2B000000"
								},
								{
									"begin": 1020,
									"end": 1077,
									"name": "PUSH",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1020,
									"end": 1077,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2059,
									"end": 2682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2107,
									"end": 2117,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "584F524120546F6B656E00000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "584F524100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2157,
									"end": 2200,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1414,
									"end": 1456,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "DD870FA1B7C4700F2BD7F44238821C26F7392148"
								},
								{
									"begin": 2177,
									"end": 2199,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1743B34E18439B502000000"
								},
								{
									"begin": 2157,
									"end": 2162,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 2157,
									"end": 2162,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2157,
									"end": 2162,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2157,
									"end": 2200,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2157,
									"end": 2200,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2157,
									"end": 2200,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2157,
									"end": 2200,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2157,
									"end": 2200,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2216,
									"end": 2265,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2222,
									"end": 2240,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2242,
									"end": 2264,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "7C13BC4B2C133C56000000"
								},
								{
									"begin": 2216,
									"end": 2221,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 2216,
									"end": 2221,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2216,
									"end": 2221,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2216,
									"end": 2265,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2216,
									"end": 2265,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2216,
									"end": 2265,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2216,
									"end": 2265,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2216,
									"end": 2265,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2351,
									"end": 2424,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1727,
									"end": 1769,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "14723A09ACFF6D2A60DCDF7AA4AFF308FDDC160C"
								},
								{
									"begin": 2389,
									"end": 2423,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "14ADF4B7320334B9000000"
								},
								{
									"begin": 2351,
									"end": 2356,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 2351,
									"end": 2356,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2351,
									"end": 2356,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2351,
									"end": 2424,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2351,
									"end": 2424,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2351,
									"end": 2424,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2351,
									"end": 2424,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 2351,
									"end": 2424,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2510,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1827,
									"end": 1869,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "CA35B7D915458EF540ADE6068DFE2F44E8FA733C"
								},
								{
									"begin": 2487,
									"end": 2509,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "52B7D2DCC80CD2E4000000"
								},
								{
									"begin": 2462,
									"end": 2467,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 2462,
									"end": 2467,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2462,
									"end": 2467,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2510,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2462,
									"end": 2510,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2510,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2510,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2462,
									"end": 2510,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2526,
									"end": 2571,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 1924,
									"end": 1966,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "A098EDA01CE92FF4A4CCB7A4FFFB5A43EBC70DC"
								},
								{
									"begin": 2548,
									"end": 2570,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "52B7D2DCC80CD2E4000000"
								},
								{
									"begin": 2526,
									"end": 2531,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 2526,
									"end": 2531,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2526,
									"end": 2531,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2526,
									"end": 2571,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2526,
									"end": 2571,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2526,
									"end": 2571,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2526,
									"end": 2571,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 2526,
									"end": 2571,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2609,
									"end": 2624,
									"modifierDepth": 2,
									"name": "TIMESTAMP",
									"source": 7
								},
								{
									"begin": 2588,
									"end": 2606,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "C"
								},
								{
									"begin": 2588,
									"end": 2624,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2588,
									"end": 2624,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2588,
									"end": 2624,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2588,
									"end": 2624,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2660,
									"end": 2675,
									"modifierDepth": 2,
									"name": "TIMESTAMP",
									"source": 7
								},
								{
									"begin": 2634,
									"end": 2657,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "E"
								},
								{
									"begin": 2634,
									"end": 2675,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2634,
									"end": 2675,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2634,
									"end": 2675,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2634,
									"end": 2675,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2682,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 231,
									"end": 5509,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 231,
									"end": 5509,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7466,
									"end": 7674,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 7466,
									"end": 7674,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7555,
									"end": 7556,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7536,
									"end": 7557,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7536,
									"end": 7557,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7536,
									"end": 7543,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7536,
									"end": 7557,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7536,
									"end": 7557,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7536,
									"end": 7557,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7532,
									"end": 7623,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 7532,
									"end": 7623,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7609,
									"end": 7610,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 7580,
									"end": 7612,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7580,
									"end": 7612,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7532,
									"end": 7623,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 7532,
									"end": 7623,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7632,
									"end": 7667,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 7648,
									"end": 7649,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7652,
									"end": 7659,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7661,
									"end": 7666,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7632,
									"end": 7639,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 7632,
									"end": 7639,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7632,
									"end": 7639,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7632,
									"end": 7667,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7632,
									"end": 7667,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7632,
									"end": 7667,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7632,
									"end": 7667,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 7632,
									"end": 7667,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7466,
									"end": 7674,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7466,
									"end": 7674,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7466,
									"end": 7674,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6016,
									"end": 7123,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 6016,
									"end": 7123,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6121,
									"end": 6122,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6105,
									"end": 6123,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6105,
									"end": 6123,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6105,
									"end": 6109,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6105,
									"end": 6123,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6105,
									"end": 6123,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6105,
									"end": 6123,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6101,
									"end": 6641,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6101,
									"end": 6641,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6257,
									"end": 6262,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6241,
									"end": 6253,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6241,
									"end": 6253,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 6241,
									"end": 6262,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6101,
									"end": 6641,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6101,
									"end": 6641,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6101,
									"end": 6641,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6101,
									"end": 6641,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6293,
									"end": 6312,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6324,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6325,
									"end": 6329,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6293,
									"end": 6330,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6293,
									"end": 6330,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6362,
									"end": 6367,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6348,
									"end": 6359,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6348,
									"end": 6367,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6344,
									"end": 6459,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6344,
									"end": 6459,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6344,
									"end": 6459,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6419,
									"end": 6423,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6425,
									"end": 6436,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6438,
									"end": 6443,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6394,
									"end": 6444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6344,
									"end": 6459,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6344,
									"end": 6459,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6611,
									"end": 6616,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6597,
									"end": 6608,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6597,
									"end": 6616,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6588,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6593,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6616,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6616,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6616,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6579,
									"end": 6616,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6279,
									"end": 6641,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6101,
									"end": 6641,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6101,
									"end": 6641,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6669,
									"end": 6670,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6655,
									"end": 6671,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6655,
									"end": 6671,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6655,
									"end": 6657,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6655,
									"end": 6671,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6655,
									"end": 6671,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6655,
									"end": 6671,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6651,
									"end": 7076,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6651,
									"end": 7076,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6839,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6818,
									"end": 6830,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6818,
									"end": 6830,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6651,
									"end": 7076,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 6651,
									"end": 7076,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6651,
									"end": 7076,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6651,
									"end": 7076,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7046,
									"end": 7051,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7038,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7039,
									"end": 7041,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6651,
									"end": 7076,
									"name": "tag",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 6651,
									"end": 7076,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7106,
									"end": 7108,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7100,
									"end": 7104,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7110,
									"end": 7115,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 7091,
									"end": 7116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 6016,
									"end": 7123,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6016,
									"end": 7123,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6016,
									"end": 7123,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6016,
									"end": 7123,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "142"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 8,
									"value": "147"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "147"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 8,
									"value": "142"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "155"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 8,
									"value": "155"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6829,
									"end": 6906,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6826,
									"end": 6827,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6819,
									"end": 6907,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6926,
									"end": 6930,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 6923,
									"end": 6924,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 6916,
									"end": 6931,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6950,
									"end": 6954,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 6947,
									"end": 6948,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6940,
									"end": 6955,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7007,
									"end": 7010,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 7044,
									"end": 7045,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 7026,
									"end": 7046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "tag",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7021,
									"end": 7046,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7021,
									"end": 7046,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 7078,
									"end": 7079,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 7060,
									"end": 7080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "tag",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7055,
									"end": 7080,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7055,
									"end": 7080,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7103,
									"end": 7104,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7100,
									"end": 7101,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7096,
									"end": 7105,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7089,
									"end": 7105,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7089,
									"end": 7105,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7124,
									"end": 7127,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 7121,
									"end": 7122,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7118,
									"end": 7128,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 7131,
									"end": 7149,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "tag",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "tag",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6967,
									"end": 7158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 7269,
									"end": 7274,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 7251,
									"end": 7275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "tag",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7246,
									"end": 7249,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7239,
									"end": 7276,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7164,
									"end": 7282,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7437,
									"end": 7441,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7475,
									"end": 7477,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 7464,
									"end": 7473,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7460,
									"end": 7478,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7452,
									"end": 7478,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7452,
									"end": 7478,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 7556,
									"end": 7557,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7545,
									"end": 7554,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7541,
									"end": 7558,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7532,
									"end": 7538,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 7488,
									"end": 7559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "tag",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 7637,
									"end": 7639,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7626,
									"end": 7635,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7622,
									"end": 7640,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7613,
									"end": 7619,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 7569,
									"end": 7641,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "tag",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 7719,
									"end": 7721,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 7708,
									"end": 7717,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7704,
									"end": 7722,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7695,
									"end": 7701,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 7651,
									"end": 7723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "tag",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7288,
									"end": 7730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7829,
									"end": 7833,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 7869,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7856,
									"end": 7865,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7852,
									"end": 7870,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7844,
									"end": 7870,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7844,
									"end": 7870,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 7948,
									"end": 7949,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7937,
									"end": 7946,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7933,
									"end": 7950,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7924,
									"end": 7930,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 7880,
									"end": 7951,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "tag",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7736,
									"end": 7958,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 231,
									"end": 5509,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 231,
									"end": 5509,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 231,
									"end": 5509,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 231,
									"end": 5509,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 231,
									"end": 5509,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 231,
									"end": 5509,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 5509,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 231,
									"end": 5509,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 5509,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201e68689faab59f77a2bb4f3b877489ec46d2bf5de7f1c820060292283356da6264736f6c634300081a0033",
									".code": [
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "DC31ADEE"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "DC31ADEE"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "DF7F989F"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "E9CBD822"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "B0A65B3E"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "BA115CB6"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "CC1776D3"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "926165D7"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "A6F59846"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "7B0A47EE"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "8B887E7E"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "8CBB6DF7"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "2CCA9DFD"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "3ADDE9C1"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "3ADDE9C1"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "4F0DBAF2"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "4F7041A5"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "56BF536C"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "2CCA9DFD"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "2FF2E9DC"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "329430CA"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "1F6722B6"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "23256627"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "733F92B"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "14C411C7"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 5509,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1083,
											"end": 1121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1083,
											"end": 1121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 3330,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2688,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 2688,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 2688,
											"end": 3330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 3330,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 2688,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 3330,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1077,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1020,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1020,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1020,
											"end": 1077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1077,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1020,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1077,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1077,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1020,
											"end": 1077,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1020,
											"end": 1077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1077,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1020,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1077,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1077,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1077,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1077,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1077,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1077,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 807,
											"end": 860,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 807,
											"end": 860,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 807,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 807,
											"end": 860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 860,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 807,
											"end": 860,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 860,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 860,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 807,
											"end": 860,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 860,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 807,
											"end": 860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 860,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 807,
											"end": 860,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 860,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 860,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 860,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 860,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 860,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 807,
											"end": 860,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 860,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1462,
											"end": 1553,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1462,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1462,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1462,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1462,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1462,
											"end": 1553,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1462,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1462,
											"end": 1553,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1462,
											"end": 1553,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1462,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1462,
											"end": 1553,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1462,
											"end": 1553,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1462,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1462,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1462,
											"end": 1553,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1462,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1462,
											"end": 1553,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1462,
											"end": 1553,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1462,
											"end": 1553,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1462,
											"end": 1553,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1462,
											"end": 1553,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1462,
											"end": 1553,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1462,
											"end": 1553,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 286,
											"end": 351,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 286,
											"end": 351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 286,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 286,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 286,
											"end": 351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 286,
											"end": 351,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 286,
											"end": 351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 286,
											"end": 351,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 351,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 286,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 286,
											"end": 351,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 286,
											"end": 351,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 286,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 286,
											"end": 351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 286,
											"end": 351,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 286,
											"end": 351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 286,
											"end": 351,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 351,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 286,
											"end": 351,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 286,
											"end": 351,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 286,
											"end": 351,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 286,
											"end": 351,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 286,
											"end": 351,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 867,
											"end": 920,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 867,
											"end": 920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 867,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 867,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 867,
											"end": 920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 867,
											"end": 920,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 867,
											"end": 920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 867,
											"end": 920,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 867,
											"end": 920,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 867,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 867,
											"end": 920,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 867,
											"end": 920,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 867,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 867,
											"end": 920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 867,
											"end": 920,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 867,
											"end": 920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 867,
											"end": 920,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 867,
											"end": 920,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 867,
											"end": 920,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 867,
											"end": 920,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 867,
											"end": 920,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 867,
											"end": 920,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 867,
											"end": 920,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 518,
											"end": 567,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 518,
											"end": 567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 518,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 518,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 518,
											"end": 567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 518,
											"end": 567,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 518,
											"end": 567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 518,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 518,
											"end": 567,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 518,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 518,
											"end": 567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 518,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 518,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 518,
											"end": 567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 518,
											"end": 567,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 518,
											"end": 567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 518,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 518,
											"end": 567,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 518,
											"end": 567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 518,
											"end": 567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 518,
											"end": 567,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 518,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 518,
											"end": 567,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1456,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1367,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 1367,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1367,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1456,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 1367,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1456,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1456,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1367,
											"end": 1456,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1456,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1367,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1456,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1367,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1456,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1456,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1456,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1456,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1456,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1456,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1456,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 388,
											"end": 413,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 388,
											"end": 413,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 388,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 388,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 388,
											"end": 413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 388,
											"end": 413,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 388,
											"end": 413,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 388,
											"end": 413,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 388,
											"end": 413,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 388,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 388,
											"end": 413,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 388,
											"end": 413,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 388,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 388,
											"end": 413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 388,
											"end": 413,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 388,
											"end": 413,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 388,
											"end": 413,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 388,
											"end": 413,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 388,
											"end": 413,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 388,
											"end": 413,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 388,
											"end": 413,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 388,
											"end": 413,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 388,
											"end": 413,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1869,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1775,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1775,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1775,
											"end": 1869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1869,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1775,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1869,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1775,
											"end": 1869,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1775,
											"end": 1869,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1869,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1775,
											"end": 1869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1869,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1775,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1869,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1775,
											"end": 1869,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1869,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1869,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1869,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1869,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1869,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 487,
											"end": 512,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 487,
											"end": 512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 487,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 487,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 487,
											"end": 512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 487,
											"end": 512,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 487,
											"end": 512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 487,
											"end": 512,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 512,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 487,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 487,
											"end": 512,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 487,
											"end": 512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 487,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 487,
											"end": 512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 487,
											"end": 512,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 487,
											"end": 512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 487,
											"end": 512,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 512,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 487,
											"end": 512,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 487,
											"end": 512,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 487,
											"end": 512,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 487,
											"end": 512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 487,
											"end": 512,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4300,
											"end": 4588,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 4300,
											"end": 4588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4300,
											"end": 4588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 4300,
											"end": 4588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 4300,
											"end": 4588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4300,
											"end": 4588,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 4300,
											"end": 4588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4300,
											"end": 4588,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 451,
											"end": 481,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 451,
											"end": 481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 451,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 451,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 451,
											"end": 481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 451,
											"end": 481,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 451,
											"end": 481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 451,
											"end": 481,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 481,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 451,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 451,
											"end": 481,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 451,
											"end": 481,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 451,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 451,
											"end": 481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 451,
											"end": 481,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 451,
											"end": 481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 451,
											"end": 481,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 481,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 451,
											"end": 481,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 451,
											"end": 481,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 451,
											"end": 481,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 451,
											"end": 481,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 451,
											"end": 481,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4259,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3925,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 3925,
											"end": 4259,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3925,
											"end": 4259,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 4259,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 4259,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 4259,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 4259,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 4259,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 3925,
											"end": 4259,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 4259,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 3925,
											"end": 4259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 4259,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 3925,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 3925,
											"end": 4259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 4259,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 3925,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 4259,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 926,
											"end": 959,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 926,
											"end": 959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 926,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 926,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 926,
											"end": 959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 926,
											"end": 959,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 926,
											"end": 959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 926,
											"end": 959,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 959,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 926,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 926,
											"end": 959,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 926,
											"end": 959,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 926,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 926,
											"end": 959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 926,
											"end": 959,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 926,
											"end": 959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 926,
											"end": 959,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 959,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 926,
											"end": 959,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 926,
											"end": 959,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 926,
											"end": 959,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 926,
											"end": 959,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 926,
											"end": 959,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1966,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1875,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1875,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 1875,
											"end": 1966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 1966,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1875,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 1966,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1875,
											"end": 1966,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 1875,
											"end": 1966,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 1966,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1875,
											"end": 1966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 1966,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 1875,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 1966,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1875,
											"end": 1966,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 1966,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 1966,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 1966,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 1966,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 1966,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1769,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1662,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 1662,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 1662,
											"end": 1769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1769,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 1662,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1769,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1769,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 1662,
											"end": 1769,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1769,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1662,
											"end": 1769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1769,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 1662,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1769,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1769,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1769,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1769,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1769,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1769,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1769,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 419,
											"end": 445,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 419,
											"end": 445,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 419,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 419,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 419,
											"end": 445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 419,
											"end": 445,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 419,
											"end": 445,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 419,
											"end": 445,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 419,
											"end": 445,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 419,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 419,
											"end": 445,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 419,
											"end": 445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 419,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 419,
											"end": 445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 419,
											"end": 445,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 419,
											"end": 445,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 419,
											"end": 445,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 419,
											"end": 445,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 419,
											"end": 445,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 419,
											"end": 445,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 419,
											"end": 445,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 419,
											"end": 445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 419,
											"end": 445,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3335,
											"end": 3919,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3335,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3335,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 3335,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 3335,
											"end": 3919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3335,
											"end": 3919,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 3335,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3335,
											"end": 3919,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 1656,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1559,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 1559,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1559,
											"end": 1656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1656,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 1559,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1656,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1559,
											"end": 1656,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 1559,
											"end": 1656,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1559,
											"end": 1656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1656,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 1559,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1656,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1559,
											"end": 1656,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1656,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1656,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1656,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 357,
											"end": 381,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 357,
											"end": 381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 357,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 357,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 357,
											"end": 381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 357,
											"end": 381,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 357,
											"end": 381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 357,
											"end": 381,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 381,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 357,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 357,
											"end": 381,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 357,
											"end": 381,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 357,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 357,
											"end": 381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 357,
											"end": 381,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 357,
											"end": 381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 357,
											"end": 381,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 381,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 357,
											"end": 381,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 357,
											"end": 381,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 357,
											"end": 381,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 357,
											"end": 381,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 357,
											"end": 381,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1083,
											"end": 1121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 3330,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 2688,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 638,
											"end": 650,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "2C7EA00"
										},
										{
											"begin": 2786,
											"end": 2804,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 2786,
											"end": 2804,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2786,
											"end": 2817,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2786,
											"end": 2817,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2786,
											"end": 2817,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2786,
											"end": 2817,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2786,
											"end": 2817,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2786,
											"end": 2817,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2786,
											"end": 2817,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2767,
											"end": 2782,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2767,
											"end": 2817,
											"modifierDepth": 2,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2767,
											"end": 2817,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2852,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2759,
											"end": 2852,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2852,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2759,
											"end": 2852,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2852,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2759,
											"end": 2852,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2852,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2852,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2759,
											"end": 2852,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2852,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2759,
											"end": 2852,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2852,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2759,
											"end": 2852,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2852,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2759,
											"end": 2852,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2852,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2759,
											"end": 2852,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2852,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2852,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2852,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2852,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2852,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2852,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2759,
											"end": 2852,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2862,
											"end": 2881,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 650,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "2C7EA00"
										},
										{
											"begin": 2903,
											"end": 2921,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 2903,
											"end": 2921,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2934,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2903,
											"end": 2934,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2934,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2934,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2903,
											"end": 2934,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2934,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2903,
											"end": 2934,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2899,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2935,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 2884,
											"end": 2935,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2935,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2935,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 2884,
											"end": 2935,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2935,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 2884,
											"end": 2935,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2862,
											"end": 2935,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2862,
											"end": 2935,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2945,
											"end": 2965,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 696,
											"end": 708,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "784CE00"
										},
										{
											"begin": 2985,
											"end": 2996,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 2982,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 2969,
											"end": 2982,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 2996,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 2969,
											"end": 2996,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 2996,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 2996,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 2969,
											"end": 2996,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 2996,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 2969,
											"end": 2996,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2968,
											"end": 3019,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 2968,
											"end": 3019,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2968,
											"end": 3019,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2968,
											"end": 3019,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 2968,
											"end": 3019,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2968,
											"end": 3019,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 2968,
											"end": 3019,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2945,
											"end": 3019,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2945,
											"end": 3019,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3047,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3065,
											"end": 3083,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 3065,
											"end": 3083,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3062,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3083,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3050,
											"end": 3083,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3083,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3083,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 3050,
											"end": 3083,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3083,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3050,
											"end": 3083,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3083,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3083,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3125,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3111,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 3093,
											"end": 3111,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3125,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3125,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3125,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3125,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3093,
											"end": 3125,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3125,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3125,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 3093,
											"end": 3125,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3125,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3093,
											"end": 3125,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3125,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3125,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3125,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3125,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3125,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3125,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3125,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3159,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3155,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3143,
											"end": 3159,
											"modifierDepth": 2,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3195,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3135,
											"end": 3195,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3195,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3135,
											"end": 3195,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3195,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3135,
											"end": 3195,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3195,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3195,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3135,
											"end": 3195,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3195,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 3135,
											"end": 3195,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3195,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 3135,
											"end": 3195,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3195,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 3135,
											"end": 3195,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3195,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3135,
											"end": 3195,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3195,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3195,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3195,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3195,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3195,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3195,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3135,
											"end": 3195,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3235,
											"end": 3248,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 3235,
											"end": 3248,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3231,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 3213,
											"end": 3231,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3248,
											"modifierDepth": 2,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3248,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3205,
											"end": 3275,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 3205,
											"end": 3275,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3205,
											"end": 3275,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3205,
											"end": 3275,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3205,
											"end": 3275,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3205,
											"end": 3275,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3205,
											"end": 3275,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3205,
											"end": 3275,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3205,
											"end": 3275,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3205,
											"end": 3275,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3205,
											"end": 3275,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3205,
											"end": 3275,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3205,
											"end": 3275,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3205,
											"end": 3275,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3205,
											"end": 3275,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3205,
											"end": 3275,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3205,
											"end": 3275,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3205,
											"end": 3275,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3205,
											"end": 3275,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3205,
											"end": 3275,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3205,
											"end": 3275,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3205,
											"end": 3275,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3205,
											"end": 3275,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 3205,
											"end": 3275,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3285,
											"end": 3323,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 1614,
											"end": 1656,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4B0897B0513FDC7C541B6D9D7E929C4E5364D2DB"
										},
										{
											"begin": 3312,
											"end": 3322,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3285,
											"end": 3290,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 3285,
											"end": 3323,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3285,
											"end": 3323,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3285,
											"end": 3323,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 3330,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 3330,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 3330,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 3330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1077,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1020,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1077,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1020,
											"end": 1077,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1077,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 860,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 807,
											"end": 860,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 858,
											"end": 860,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 807,
											"end": 860,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1462,
											"end": 1553,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1462,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1511,
											"end": 1553,
											"name": "PUSH",
											"source": 7,
											"value": "583031D1113AD414F02576BD6AFABFB302140225"
										},
										{
											"begin": 1462,
											"end": 1553,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1462,
											"end": 1553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 286,
											"end": 351,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 286,
											"end": 351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 327,
											"end": 351,
											"name": "PUSH",
											"source": 7,
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 286,
											"end": 351,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 286,
											"end": 351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 867,
											"end": 920,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 867,
											"end": 920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 867,
											"end": 920,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 867,
											"end": 920,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 867,
											"end": 920,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 867,
											"end": 920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 518,
											"end": 567,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 518,
											"end": 567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 559,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "1E13380"
										},
										{
											"begin": 518,
											"end": 567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 518,
											"end": 567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1456,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1367,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1456,
											"name": "PUSH",
											"source": 7,
											"value": "DD870FA1B7C4700F2BD7F44238821C26F7392148"
										},
										{
											"begin": 1367,
											"end": 1456,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 388,
											"end": 413,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 388,
											"end": 413,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 388,
											"end": 413,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 388,
											"end": 413,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 388,
											"end": 413,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 388,
											"end": 413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1869,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1775,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1827,
											"end": 1869,
											"name": "PUSH",
											"source": 7,
											"value": "CA35B7D915458EF540ADE6068DFE2F44E8FA733C"
										},
										{
											"begin": 1775,
											"end": 1869,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 487,
											"end": 512,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 487,
											"end": 512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 487,
											"end": 512,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 487,
											"end": 512,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 487,
											"end": 512,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 487,
											"end": 512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4300,
											"end": 4588,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 4300,
											"end": 4588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 559,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "1E13380"
										},
										{
											"begin": 4383,
											"end": 4398,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4383,
											"end": 4398,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4383,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 4383,
											"end": 4415,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4383,
											"end": 4415,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4383,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 4383,
											"end": 4415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4383,
											"end": 4415,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 4383,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4364,
											"end": 4379,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4364,
											"end": 4415,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4364,
											"end": 4415,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4343,
											"end": 4460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 4343,
											"end": 4460,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4343,
											"end": 4460,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4343,
											"end": 4460,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4343,
											"end": 4460,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4343,
											"end": 4460,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4343,
											"end": 4460,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4343,
											"end": 4460,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4343,
											"end": 4460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4343,
											"end": 4460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 4343,
											"end": 4460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4343,
											"end": 4460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 4343,
											"end": 4460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4343,
											"end": 4460,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 4343,
											"end": 4460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4343,
											"end": 4460,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4343,
											"end": 4460,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4343,
											"end": 4460,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4343,
											"end": 4460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4343,
											"end": 4460,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4343,
											"end": 4460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4343,
											"end": 4460,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4343,
											"end": 4460,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 4343,
											"end": 4460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4498,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4484,
											"end": 4494,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4484,
											"end": 4494,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4484,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 4484,
											"end": 4498,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4484,
											"end": 4498,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4484,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 4484,
											"end": 4498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4484,
											"end": 4498,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 4484,
											"end": 4498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4471,
											"end": 4481,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4471,
											"end": 4498,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4471,
											"end": 4498,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4471,
											"end": 4498,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4471,
											"end": 4498,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4541,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4508,
											"end": 4523,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4508,
											"end": 4541,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4508,
											"end": 4541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4508,
											"end": 4541,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4508,
											"end": 4541,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4557,
											"end": 4581,
											"name": "PUSH",
											"source": 7,
											"value": "F92B4D3A8D8BA77170DD5CF6B65260191092093F924263A88C3C60DD8495F091"
										},
										{
											"begin": 4570,
											"end": 4580,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4570,
											"end": 4580,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4557,
											"end": 4581,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4557,
											"end": 4581,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4557,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 4557,
											"end": 4581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4557,
											"end": 4581,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4557,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 4557,
											"end": 4581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4557,
											"end": 4581,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 4557,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4557,
											"end": 4581,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4557,
											"end": 4581,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4557,
											"end": 4581,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4557,
											"end": 4581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4557,
											"end": 4581,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4557,
											"end": 4581,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4557,
											"end": 4581,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 4300,
											"end": 4588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 451,
											"end": 481,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 451,
											"end": 481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 451,
											"end": 481,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 451,
											"end": 481,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 451,
											"end": 481,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 451,
											"end": 481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4259,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 3925,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4074,
											"end": 4092,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4061,
											"end": 4071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4061,
											"end": 4092,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4061,
											"end": 4092,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4061,
											"end": 4092,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4061,
											"end": 4092,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4133,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4102,
											"end": 4112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4134,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4102,
											"end": 4134,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4134,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4134,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4134,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4134,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4102,
											"end": 4134,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4134,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4134,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4134,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4134,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4134,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4102,
											"end": 4134,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4134,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4134,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4134,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4134,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4134,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4162,
											"end": 4177,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4144,
											"end": 4159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4144,
											"end": 4177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4144,
											"end": 4177,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4144,
											"end": 4177,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4144,
											"end": 4177,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4192,
											"end": 4252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "DE2D0064B82669942E6A9CFF523014473C366EFC3CF147B14E0B1F4CBECC4BC8"
										},
										{
											"begin": 4220,
											"end": 4238,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4251,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4192,
											"end": 4252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4252,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4192,
											"end": 4252,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4192,
											"end": 4252,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4192,
											"end": 4252,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4192,
											"end": 4252,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4192,
											"end": 4252,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4192,
											"end": 4252,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4192,
											"end": 4252,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4192,
											"end": 4252,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4192,
											"end": 4252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4252,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4192,
											"end": 4252,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4192,
											"end": 4252,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4192,
											"end": 4252,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4192,
											"end": 4252,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4192,
											"end": 4252,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 4259,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 4259,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 926,
											"end": 959,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 926,
											"end": 959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 926,
											"end": 959,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 926,
											"end": 959,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 926,
											"end": 959,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 926,
											"end": 959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1966,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 1875,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1924,
											"end": 1966,
											"name": "PUSH",
											"source": 7,
											"value": "A098EDA01CE92FF4A4CCB7A4FFFB5A43EBC70DC"
										},
										{
											"begin": 1875,
											"end": 1966,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 1966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1769,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 1662,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1727,
											"end": 1769,
											"name": "PUSH",
											"source": 7,
											"value": "14723A09ACFF6D2A60DCDF7AA4AFF308FDDC160C"
										},
										{
											"begin": 1662,
											"end": 1769,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 419,
											"end": 445,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 419,
											"end": 445,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 419,
											"end": 445,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 419,
											"end": 445,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 419,
											"end": 445,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 419,
											"end": 445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3335,
											"end": 3919,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 3335,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3410,
											"end": 3429,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3473,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 3450,
											"end": 3473,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3432,
											"end": 3447,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 3432,
											"end": 3473,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 3432,
											"end": 3473,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3432,
											"end": 3473,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3432,
											"end": 3473,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 3432,
											"end": 3473,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3432,
											"end": 3473,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 3432,
											"end": 3473,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3410,
											"end": 3473,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3410,
											"end": 3473,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3483,
											"end": 3503,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3541,
											"end": 3565,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 3541,
											"end": 3565,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3528,
											"end": 3539,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3507,
											"end": 3525,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 3507,
											"end": 3525,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3507,
											"end": 3539,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 3507,
											"end": 3539,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3507,
											"end": 3539,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3507,
											"end": 3539,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3507,
											"end": 3539,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3507,
											"end": 3539,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 3507,
											"end": 3539,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3506,
											"end": 3565,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 3506,
											"end": 3565,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3506,
											"end": 3565,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3506,
											"end": 3565,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 3506,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3506,
											"end": 3565,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 3506,
											"end": 3565,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3483,
											"end": 3565,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3483,
											"end": 3565,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3598,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3616,
											"end": 3639,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 3616,
											"end": 3639,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3601,
											"end": 3613,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3601,
											"end": 3639,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 3601,
											"end": 3639,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3601,
											"end": 3639,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3601,
											"end": 3639,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 3601,
											"end": 3639,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3601,
											"end": 3639,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 3601,
											"end": 3639,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3639,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3639,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3676,
											"end": 3691,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3672,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 3649,
											"end": 3672,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3649,
											"end": 3691,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3691,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3691,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3691,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 3649,
											"end": 3691,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3691,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3691,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 3649,
											"end": 3691,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3691,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 3649,
											"end": 3691,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3691,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3691,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3691,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3691,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3691,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3691,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3691,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3724,
											"end": 3725,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3721,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3709,
											"end": 3725,
											"modifierDepth": 2,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3759,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 3701,
											"end": 3759,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3759,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3701,
											"end": 3759,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3759,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3701,
											"end": 3759,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3759,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3759,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3701,
											"end": 3759,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3759,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 3701,
											"end": 3759,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3759,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 3701,
											"end": 3759,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3759,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 3701,
											"end": 3759,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3759,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3701,
											"end": 3759,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3759,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3759,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3759,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3759,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3759,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3759,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 3701,
											"end": 3759,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3822,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 3804,
											"end": 3822,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3777,
											"end": 3800,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 3777,
											"end": 3800,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3777,
											"end": 3822,
											"modifierDepth": 2,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3777,
											"end": 3822,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3848,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 3769,
											"end": 3848,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3848,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3769,
											"end": 3848,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3848,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3769,
											"end": 3848,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3848,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3848,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3769,
											"end": 3848,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3848,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 3769,
											"end": 3848,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3848,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 3769,
											"end": 3848,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3848,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 3769,
											"end": 3848,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3848,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3769,
											"end": 3848,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3848,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3848,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3848,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3848,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3848,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3848,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 3769,
											"end": 3848,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3858,
											"end": 3911,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 1727,
											"end": 1769,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "14723A09ACFF6D2A60DCDF7AA4AFF308FDDC160C"
										},
										{
											"begin": 3895,
											"end": 3910,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3858,
											"end": 3863,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 3858,
											"end": 3911,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3858,
											"end": 3911,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 3858,
											"end": 3911,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3919,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3919,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3919,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3335,
											"end": 3919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 1656,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1559,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1614,
											"end": 1656,
											"name": "PUSH",
											"source": 7,
											"value": "4B0897B0513FDC7C541B6D9D7E929C4E5364D2DB"
										},
										{
											"begin": 1559,
											"end": 1656,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 357,
											"end": 381,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 357,
											"end": 381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 357,
											"end": 381,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 357,
											"end": 381,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 381,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 357,
											"end": 381,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 357,
											"end": 381,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 357,
											"end": 381,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 357,
											"end": 381,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 357,
											"end": 381,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 357,
											"end": 381,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 357,
											"end": 381,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 357,
											"end": 381,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 357,
											"end": 381,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 357,
											"end": 381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8734,
											"end": 8862,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 8734,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8818,
											"end": 8855,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 8827,
											"end": 8832,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8834,
											"end": 8841,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8843,
											"end": 8848,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8850,
											"end": 8854,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8818,
											"end": 8826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 8818,
											"end": 8855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8818,
											"end": 8855,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 8818,
											"end": 8855,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8734,
											"end": 8862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8734,
											"end": 8862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8734,
											"end": 8862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8734,
											"end": 8862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7466,
											"end": 7674,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 7466,
											"end": 7674,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7555,
											"end": 7556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7536,
											"end": 7557,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7536,
											"end": 7557,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7536,
											"end": 7543,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7536,
											"end": 7557,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7536,
											"end": 7557,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7536,
											"end": 7557,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7532,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 7532,
											"end": 7623,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7609,
											"end": 7610,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 7580,
											"end": 7612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7532,
											"end": 7623,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 7532,
											"end": 7623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7632,
											"end": 7667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 7648,
											"end": 7649,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7652,
											"end": 7659,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7661,
											"end": 7666,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7632,
											"end": 7639,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 7632,
											"end": 7667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7632,
											"end": 7667,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 7632,
											"end": 7667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 7674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 7674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 7674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10423,
											"end": 10900,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 10423,
											"end": 10900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10522,
											"end": 10546,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10549,
											"end": 10574,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 10559,
											"end": 10564,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10566,
											"end": 10573,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10549,
											"end": 10558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 10549,
											"end": 10574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10549,
											"end": 10574,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 10549,
											"end": 10574,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10522,
											"end": 10574,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10522,
											"end": 10574,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10608,
											"end": 10625,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10588,
											"end": 10604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10584,
											"end": 10894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 10584,
											"end": 10894,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10664,
											"end": 10669,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10645,
											"end": 10661,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10645,
											"end": 10669,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10641,
											"end": 10771,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10641,
											"end": 10771,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 10641,
											"end": 10771,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10723,
											"end": 10730,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10732,
											"end": 10748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10750,
											"end": 10755,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 10696,
											"end": 10756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10756,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10641,
											"end": 10771,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 10641,
											"end": 10771,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10812,
											"end": 10869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 10821,
											"end": 10826,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10835,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10856,
											"end": 10861,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10837,
											"end": 10853,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10837,
											"end": 10861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10863,
											"end": 10868,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10812,
											"end": 10820,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 10812,
											"end": 10869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10812,
											"end": 10869,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 10812,
											"end": 10869,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10584,
											"end": 10894,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 10584,
											"end": 10894,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10512,
											"end": 10900,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10423,
											"end": 10900,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10423,
											"end": 10900,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10423,
											"end": 10900,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10423,
											"end": 10900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5135,
											"end": 5507,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 5135,
											"end": 5507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5263,
											"end": 5280,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5356,
											"end": 5359,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5327,
											"end": 5331,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5332,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5306,
											"end": 5332,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5315,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5332,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5306,
											"end": 5332,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5332,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 5306,
											"end": 5351,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5345,
											"end": 5351,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 5345,
											"end": 5351,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 5306,
											"end": 5351,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5351,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 5306,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5335,
											"end": 5342,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 5335,
											"end": 5342,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5351,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 5306,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5284,
											"end": 5290,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5284,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 5284,
											"end": 5352,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5284,
											"end": 5352,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5284,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 5284,
											"end": 5352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5284,
											"end": 5352,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 5284,
											"end": 5352,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5283,
											"end": 5359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 5283,
											"end": 5359,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5283,
											"end": 5359,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5283,
											"end": 5359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 5283,
											"end": 5359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5283,
											"end": 5359,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 5283,
											"end": 5359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5263,
											"end": 5359,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5263,
											"end": 5359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5369,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 5385,
											"end": 5391,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5402,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5422,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5404,
											"end": 5410,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5404,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 5404,
											"end": 5422,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5404,
											"end": 5422,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5404,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 5404,
											"end": 5422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5404,
											"end": 5422,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 5404,
											"end": 5422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5369,
											"end": 5384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 5369,
											"end": 5423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5369,
											"end": 5423,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 5369,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5449,
											"end": 5450,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5437,
											"end": 5446,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5437,
											"end": 5450,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5501,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 5433,
											"end": 5501,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5466,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 5472,
											"end": 5478,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5480,
											"end": 5489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5466,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 5466,
											"end": 5490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5466,
											"end": 5490,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 5466,
											"end": 5490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5501,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 5433,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5253,
											"end": 5507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5135,
											"end": 5507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5135,
											"end": 5507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5135,
											"end": 5507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5135,
											"end": 5507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 10141,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 9709,
											"end": 10141,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9838,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9821,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9821,
											"end": 9840,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9821,
											"end": 9826,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9821,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9821,
											"end": 9840,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9821,
											"end": 9840,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9817,
											"end": 9906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 9817,
											"end": 9906,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9892,
											"end": 9893,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 9863,
											"end": 9895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9817,
											"end": 9906,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 9817,
											"end": 9906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9938,
											"end": 9939,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9919,
											"end": 9940,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9919,
											"end": 9940,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9919,
											"end": 9926,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9919,
											"end": 9940,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9919,
											"end": 9940,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9919,
											"end": 9940,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9915,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 9915,
											"end": 10005,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9991,
											"end": 9992,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 9963,
											"end": 9994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9994,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9915,
											"end": 10005,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 9915,
											"end": 10005,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10044,
											"end": 10049,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10025,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10026,
											"end": 10031,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10033,
											"end": 10040,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10014,
											"end": 10041,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10049,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10049,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10063,
											"end": 10072,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10059,
											"end": 10135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10059,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 10059,
											"end": 10135,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10109,
											"end": 10116,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10102,
											"end": 10107,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10118,
											"end": 10123,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 10093,
											"end": 10124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10059,
											"end": 10135,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 10059,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9709,
											"end": 10141,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9709,
											"end": 10141,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9709,
											"end": 10141,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9709,
											"end": 10141,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9709,
											"end": 10141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6016,
											"end": 7123,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 6016,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6121,
											"end": 6122,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6123,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6105,
											"end": 6123,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6105,
											"end": 6109,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6105,
											"end": 6123,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6105,
											"end": 6123,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6105,
											"end": 6123,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6101,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 6101,
											"end": 6641,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6257,
											"end": 6262,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6253,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6241,
											"end": 6253,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 6241,
											"end": 6262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "tag",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6101,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 6101,
											"end": 6641,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6101,
											"end": 6641,
											"name": "tag",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 6101,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6293,
											"end": 6312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6324,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6325,
											"end": 6329,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6293,
											"end": 6330,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6293,
											"end": 6330,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6362,
											"end": 6367,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6348,
											"end": 6359,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6348,
											"end": 6367,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6344,
											"end": 6459,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6344,
											"end": 6459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 6344,
											"end": 6459,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6419,
											"end": 6423,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6425,
											"end": 6436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6438,
											"end": 6443,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 6394,
											"end": 6444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6344,
											"end": 6459,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 6344,
											"end": 6459,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6611,
											"end": 6616,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6597,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6597,
											"end": 6616,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6588,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6593,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6616,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6616,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6616,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6279,
											"end": 6641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6101,
											"end": 6641,
											"name": "tag",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 6101,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6669,
											"end": 6670,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6655,
											"end": 6671,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6655,
											"end": 6671,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6655,
											"end": 6657,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6655,
											"end": 6671,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6655,
											"end": 6671,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6655,
											"end": 6671,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6651,
											"end": 7076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 6651,
											"end": 7076,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6818,
											"end": 6830,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6818,
											"end": 6830,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6651,
											"end": 7076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 6651,
											"end": 7076,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6651,
											"end": 7076,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 6651,
											"end": 7076,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7046,
											"end": 7051,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7038,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7041,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6651,
											"end": 7076,
											"name": "tag",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 6651,
											"end": 7076,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7106,
											"end": 7108,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7100,
											"end": 7104,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7110,
											"end": 7115,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 7091,
											"end": 7116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6016,
											"end": 7123,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6016,
											"end": 7123,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6016,
											"end": 7123,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6016,
											"end": 7123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5701,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 5393,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5502,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5484,
											"end": 5502,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5484,
											"end": 5488,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5484,
											"end": 5502,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5484,
											"end": 5502,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5484,
											"end": 5502,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5480,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 5480,
											"end": 5566,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5553,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 5525,
											"end": 5555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5480,
											"end": 5566,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 5480,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5593,
											"end": 5594,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5579,
											"end": 5595,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5579,
											"end": 5595,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5579,
											"end": 5581,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5579,
											"end": 5595,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5579,
											"end": 5595,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5579,
											"end": 5595,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5575,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 5575,
											"end": 5661,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5647,
											"end": 5648,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 5618,
											"end": 5650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "tag",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5575,
											"end": 5661,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 5575,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5670,
											"end": 5694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 5678,
											"end": 5682,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5684,
											"end": 5686,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5688,
											"end": 5693,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5670,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 5670,
											"end": 5694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5670,
											"end": 5694,
											"name": "tag",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 5670,
											"end": 5694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8198,
											"name": "tag",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 7992,
											"end": 8198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8082,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8062,
											"end": 8083,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8062,
											"end": 8083,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8062,
											"end": 8069,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8062,
											"end": 8083,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8062,
											"end": 8083,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8062,
											"end": 8083,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8147,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 8058,
											"end": 8147,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8133,
											"end": 8134,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8106,
											"end": 8136,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8106,
											"end": 8136,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8136,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8106,
											"end": 8136,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8136,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8136,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8106,
											"end": 8136,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 8106,
											"end": 8136,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8136,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 8106,
											"end": 8136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8136,
											"name": "tag",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 8106,
											"end": 8136,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8136,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8106,
											"end": 8136,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8136,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8136,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8136,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8136,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8136,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8147,
											"name": "tag",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 8058,
											"end": 8147,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8156,
											"end": 8191,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 8164,
											"end": 8171,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8181,
											"end": 8182,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8185,
											"end": 8190,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 8156,
											"end": 8191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8156,
											"end": 8191,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 8156,
											"end": 8191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1242,
											"end": 1319,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 1242,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1279,
											"end": 1286,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1313,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1313,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1242,
											"end": 1319,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1242,
											"end": 1319,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1242,
											"end": 1319,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1242,
											"end": 1319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1325,
											"end": 1443,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 1325,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 1430,
											"end": 1435,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 1412,
											"end": 1436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1436,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 1412,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1410,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1400,
											"end": 1437,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1325,
											"end": 1443,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1325,
											"end": 1443,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1325,
											"end": 1443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1671,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1449,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1542,
											"end": 1546,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1580,
											"end": 1582,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1569,
											"end": 1578,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1565,
											"end": 1583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1557,
											"end": 1583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1557,
											"end": 1583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 1661,
											"end": 1662,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1659,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1646,
											"end": 1663,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 1593,
											"end": 1664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1664,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 1593,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1671,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1671,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1758,
											"end": 1875,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 1758,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1857,
											"end": 1869,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2123,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2074,
											"end": 2079,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2070,
											"end": 2124,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2124,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2124,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2004,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2180,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 2220,
											"end": 2225,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 2202,
											"end": 2226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2191,
											"end": 2226,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2191,
											"end": 2226,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2136,
											"end": 2232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2238,
											"end": 2360,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 2238,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 2329,
											"end": 2334,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 2311,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2304,
											"end": 2309,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2336,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2351,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2347,
											"end": 2348,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2352,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2238,
											"end": 2360,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2238,
											"end": 2360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2417,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2456,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2457,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 2493,
											"end": 2498,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 2466,
											"end": 2499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 2602,
											"end": 2607,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 2584,
											"end": 2608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2582,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2609,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2623,
											"end": 2624,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2613,
											"end": 2625,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2685,
											"end": 2690,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2729,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2710,
											"end": 2730,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 2766,
											"end": 2771,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 2739,
											"end": 2772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2852,
											"end": 2858,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2866,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2909,
											"end": 2911,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2888,
											"end": 2895,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2880,
											"end": 2912,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 2915,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3096,
											"end": 3102,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3085,
											"end": 3094,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3081,
											"end": 3103,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 3060,
											"end": 3113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3123,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3162,
											"end": 3164,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 3233,
											"end": 3240,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3224,
											"end": 3230,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3222,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3231,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 3188,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3133,
											"end": 3251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2784,
											"end": 3258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3298,
											"end": 3305,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3346,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3334,
											"end": 3347,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3327,
											"end": 3348,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3264,
											"end": 3354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 3456,
											"end": 3461,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 3441,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3436,
											"end": 3439,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3429,
											"end": 3463,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3360,
											"end": 3469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3562,
											"end": 3566,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3602,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3589,
											"end": 3598,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3585,
											"end": 3603,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3577,
											"end": 3603,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3577,
											"end": 3603,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 3613,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4434,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 4316,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4403,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 4421,
											"end": 4426,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4403,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 4403,
											"end": 4427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4403,
											"end": 4427,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 4403,
											"end": 4427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4398,
											"end": 4401,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4391,
											"end": 4428,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4440,
											"end": 4662,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 4440,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4533,
											"end": 4537,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4573,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4560,
											"end": 4569,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4556,
											"end": 4574,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4548,
											"end": 4574,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4548,
											"end": 4574,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4584,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 4652,
											"end": 4653,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4641,
											"end": 4650,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4637,
											"end": 4654,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4628,
											"end": 4634,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4584,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 4584,
											"end": 4655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4584,
											"end": 4655,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 4584,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4440,
											"end": 4662,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4440,
											"end": 4662,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4440,
											"end": 4662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4440,
											"end": 4662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4440,
											"end": 4662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4754,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 4668,
											"end": 4754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4703,
											"end": 4710,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4743,
											"end": 4747,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4736,
											"end": 4741,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4732,
											"end": 4748,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4721,
											"end": 4748,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4721,
											"end": 4748,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4754,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4754,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4760,
											"end": 4872,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 4760,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4843,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 4859,
											"end": 4864,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4843,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 4843,
											"end": 4865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4843,
											"end": 4865,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 4843,
											"end": 4865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4838,
											"end": 4841,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4831,
											"end": 4866,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4760,
											"end": 4872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4760,
											"end": 4872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4760,
											"end": 4872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4967,
											"end": 4971,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5007,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4994,
											"end": 5003,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4982,
											"end": 5008,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4982,
											"end": 5008,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5018,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 5082,
											"end": 5083,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5080,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5084,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5058,
											"end": 5064,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5018,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 5018,
											"end": 5085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5018,
											"end": 5085,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 5018,
											"end": 5085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4878,
											"end": 5092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5206,
											"end": 5208,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5194,
											"end": 5203,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5192,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5181,
											"end": 5204,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5177,
											"end": 5209,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 5212,
											"end": 5291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 5402,
											"end": 5409,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5382,
											"end": 5391,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5378,
											"end": 5400,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 5357,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5303,
											"end": 5420,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5098,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5515,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5555,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5544,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5533,
											"end": 5556,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5529,
											"end": 5561,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 5564,
											"end": 5643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5684,
											"end": 5685,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 5754,
											"end": 5761,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5734,
											"end": 5743,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5730,
											"end": 5752,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 5709,
											"end": 5762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5813,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 5882,
											"end": 5889,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5879,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5862,
											"end": 5871,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5858,
											"end": 5880,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 5837,
											"end": 5890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5782,
											"end": 5900,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5913,
											"end": 6387,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 5913,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5981,
											"end": 5987,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5989,
											"end": 5995,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6038,
											"end": 6040,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6026,
											"end": 6035,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6017,
											"end": 6024,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6036,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6009,
											"end": 6041,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6125,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 6006,
											"end": 6125,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6044,
											"end": 6123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 6044,
											"end": 6123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 6044,
											"end": 6123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6044,
											"end": 6123,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 6044,
											"end": 6123,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6125,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 6006,
											"end": 6125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6164,
											"end": 6165,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6189,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 6234,
											"end": 6241,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6231,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6214,
											"end": 6223,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6210,
											"end": 6232,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6189,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 6189,
											"end": 6242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6189,
											"end": 6242,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 6189,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6179,
											"end": 6242,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6179,
											"end": 6242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6135,
											"end": 6252,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6291,
											"end": 6293,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6317,
											"end": 6370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 6362,
											"end": 6369,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6353,
											"end": 6359,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6342,
											"end": 6351,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6338,
											"end": 6360,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6317,
											"end": 6370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 6317,
											"end": 6370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6317,
											"end": 6370,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 6317,
											"end": 6370,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6307,
											"end": 6370,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6307,
											"end": 6370,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6262,
											"end": 6380,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5913,
											"end": 6387,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5913,
											"end": 6387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5913,
											"end": 6387,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5913,
											"end": 6387,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5913,
											"end": 6387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5913,
											"end": 6387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6393,
											"end": 6453,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 6393,
											"end": 6453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6421,
											"end": 6424,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6442,
											"end": 6447,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6435,
											"end": 6447,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6435,
											"end": 6447,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6393,
											"end": 6453,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6393,
											"end": 6453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6393,
											"end": 6453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6393,
											"end": 6453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6459,
											"end": 6601,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 6459,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6509,
											"end": 6518,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6542,
											"end": 6595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 6560,
											"end": 6594,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 6569,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 6587,
											"end": 6592,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6569,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 6569,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6569,
											"end": 6593,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 6569,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6560,
											"end": 6594,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 6560,
											"end": 6594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6560,
											"end": 6594,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 6560,
											"end": 6594,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6542,
											"end": 6595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 6542,
											"end": 6595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6542,
											"end": 6595,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 6542,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6529,
											"end": 6595,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6529,
											"end": 6595,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6459,
											"end": 6601,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6459,
											"end": 6601,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6459,
											"end": 6601,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6459,
											"end": 6601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6733,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 6607,
											"end": 6733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6657,
											"end": 6666,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6690,
											"end": 6727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 6721,
											"end": 6726,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6690,
											"end": 6727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 6690,
											"end": 6727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6690,
											"end": 6727,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 6690,
											"end": 6727,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6677,
											"end": 6727,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6677,
											"end": 6727,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6733,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6733,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6733,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6739,
											"end": 6879,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 6739,
											"end": 6879,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6803,
											"end": 6812,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6836,
											"end": 6873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 6867,
											"end": 6872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6836,
											"end": 6873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 6836,
											"end": 6873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6836,
											"end": 6873,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 6836,
											"end": 6873,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6823,
											"end": 6873,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6823,
											"end": 6873,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6739,
											"end": 6879,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6739,
											"end": 6879,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6739,
											"end": 6879,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6739,
											"end": 6879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6885,
											"end": 7044,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 6885,
											"end": 7044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6986,
											"end": 7037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 7031,
											"end": 7036,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6986,
											"end": 7037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 6986,
											"end": 7037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6986,
											"end": 7037,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 6986,
											"end": 7037,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6981,
											"end": 6984,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6974,
											"end": 7038,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6885,
											"end": 7044,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6885,
											"end": 7044,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6885,
											"end": 7044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7050,
											"end": 7300,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 7050,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7157,
											"end": 7161,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7195,
											"end": 7197,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7184,
											"end": 7193,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7180,
											"end": 7198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7172,
											"end": 7198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7172,
											"end": 7198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 7290,
											"end": 7291,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7279,
											"end": 7288,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7275,
											"end": 7292,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7266,
											"end": 7272,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 7208,
											"end": 7293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7293,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 7208,
											"end": 7293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7050,
											"end": 7300,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7050,
											"end": 7300,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7050,
											"end": 7300,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7050,
											"end": 7300,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7050,
											"end": 7300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7306,
											"end": 7486,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 7306,
											"end": 7486,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7354,
											"end": 7431,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7351,
											"end": 7352,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7344,
											"end": 7432,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7451,
											"end": 7455,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 7448,
											"end": 7449,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7441,
											"end": 7456,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7475,
											"end": 7479,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7472,
											"end": 7473,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7465,
											"end": 7480,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7492,
											"end": 7812,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 7492,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7536,
											"end": 7542,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7573,
											"end": 7574,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7567,
											"end": 7571,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7563,
											"end": 7575,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 7553,
											"end": 7575,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7553,
											"end": 7575,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7620,
											"end": 7621,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7614,
											"end": 7618,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7610,
											"end": 7622,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7631,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 7631,
											"end": 7712,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7697,
											"end": 7701,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 7689,
											"end": 7695,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7685,
											"end": 7702,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7675,
											"end": 7702,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7675,
											"end": 7702,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7631,
											"end": 7712,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 7631,
											"end": 7712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7759,
											"end": 7761,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7751,
											"end": 7757,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7748,
											"end": 7762,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7728,
											"end": 7746,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7725,
											"end": 7763,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7722,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 7722,
											"end": 7806,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7778,
											"end": 7796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 7778,
											"end": 7796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 7778,
											"end": 7796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7778,
											"end": 7796,
											"name": "tag",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 7778,
											"end": 7796,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7722,
											"end": 7806,
											"name": "tag",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 7722,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7543,
											"end": 7812,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7492,
											"end": 7812,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7492,
											"end": 7812,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7492,
											"end": 7812,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7492,
											"end": 7812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7998,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 7818,
											"end": 7998,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7866,
											"end": 7943,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7863,
											"end": 7864,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7944,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7963,
											"end": 7967,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 7960,
											"end": 7961,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7953,
											"end": 7968,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7987,
											"end": 7991,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7984,
											"end": 7985,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7977,
											"end": 7992,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8004,
											"end": 8195,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 8004,
											"end": 8195,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8044,
											"end": 8047,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8063,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 8081,
											"end": 8082,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8063,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 8063,
											"end": 8083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8063,
											"end": 8083,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 8063,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8058,
											"end": 8083,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8058,
											"end": 8083,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8097,
											"end": 8117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 8115,
											"end": 8116,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8097,
											"end": 8117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 8097,
											"end": 8117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8097,
											"end": 8117,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 8097,
											"end": 8117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8092,
											"end": 8117,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8092,
											"end": 8117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8140,
											"end": 8141,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8137,
											"end": 8138,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8133,
											"end": 8142,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8126,
											"end": 8142,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8126,
											"end": 8142,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8161,
											"end": 8164,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8158,
											"end": 8159,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8155,
											"end": 8165,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8152,
											"end": 8188,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8152,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 8152,
											"end": 8188,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8168,
											"end": 8186,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 8168,
											"end": 8186,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 8168,
											"end": 8186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8168,
											"end": 8186,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 8168,
											"end": 8186,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8152,
											"end": 8188,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 8152,
											"end": 8188,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8004,
											"end": 8195,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8004,
											"end": 8195,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8004,
											"end": 8195,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8004,
											"end": 8195,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8004,
											"end": 8195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8201,
											"end": 8381,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 8201,
											"end": 8381,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8341,
											"end": 8373,
											"name": "PUSH",
											"source": 8,
											"value": "5465616D2076657374696E6720636C696666206E6F7420726561636865640000"
										},
										{
											"begin": 8337,
											"end": 8338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8329,
											"end": 8335,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8325,
											"end": 8339,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8318,
											"end": 8374,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8201,
											"end": 8381,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8201,
											"end": 8381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8387,
											"end": 8753,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 8387,
											"end": 8753,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8529,
											"end": 8532,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8550,
											"end": 8617,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 8614,
											"end": 8616,
											"name": "PUSH",
											"source": 8,
											"value": "1E"
										},
										{
											"begin": 8609,
											"end": 8612,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8550,
											"end": 8617,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 8550,
											"end": 8617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8550,
											"end": 8617,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 8550,
											"end": 8617,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8543,
											"end": 8617,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8543,
											"end": 8617,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8626,
											"end": 8719,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 8715,
											"end": 8718,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8626,
											"end": 8719,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 8626,
											"end": 8719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8626,
											"end": 8719,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 8626,
											"end": 8719,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8744,
											"end": 8746,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8739,
											"end": 8742,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8735,
											"end": 8747,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8728,
											"end": 8747,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8728,
											"end": 8747,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8387,
											"end": 8753,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8387,
											"end": 8753,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8387,
											"end": 8753,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8387,
											"end": 8753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8759,
											"end": 9178,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 8759,
											"end": 9178,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8925,
											"end": 8929,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8963,
											"end": 8965,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8952,
											"end": 8961,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8948,
											"end": 8966,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8940,
											"end": 8966,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8940,
											"end": 8966,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9012,
											"end": 9021,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9006,
											"end": 9010,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9002,
											"end": 9022,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8998,
											"end": 8999,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8987,
											"end": 8996,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8983,
											"end": 9000,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8976,
											"end": 9023,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9040,
											"end": 9171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 9166,
											"end": 9170,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9040,
											"end": 9171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 9040,
											"end": 9171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9040,
											"end": 9171,
											"name": "tag",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 9040,
											"end": 9171,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9032,
											"end": 9171,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9032,
											"end": 9171,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8759,
											"end": 9178,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8759,
											"end": 9178,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8759,
											"end": 9178,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8759,
											"end": 9178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9184,
											"end": 9378,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 9184,
											"end": 9378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9224,
											"end": 9228,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9244,
											"end": 9264,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 9262,
											"end": 9263,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9244,
											"end": 9264,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 9244,
											"end": 9264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9244,
											"end": 9264,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 9244,
											"end": 9264,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9239,
											"end": 9264,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9239,
											"end": 9264,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9278,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 9296,
											"end": 9297,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9278,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 9278,
											"end": 9298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9278,
											"end": 9298,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 9278,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9273,
											"end": 9298,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9273,
											"end": 9298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9322,
											"end": 9323,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9319,
											"end": 9320,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9315,
											"end": 9324,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9307,
											"end": 9324,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9307,
											"end": 9324,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9346,
											"end": 9347,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9340,
											"end": 9344,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9337,
											"end": 9348,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9334,
											"end": 9371,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9334,
											"end": 9371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 9334,
											"end": 9371,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9351,
											"end": 9369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 9351,
											"end": 9369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 9351,
											"end": 9369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9351,
											"end": 9369,
											"name": "tag",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 9351,
											"end": 9369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9334,
											"end": 9371,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 9334,
											"end": 9371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9184,
											"end": 9378,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9184,
											"end": 9378,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9184,
											"end": 9378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9184,
											"end": 9378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9184,
											"end": 9378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9384,
											"end": 9794,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 9384,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9424,
											"end": 9431,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9447,
											"end": 9467,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 9465,
											"end": 9466,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9447,
											"end": 9467,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 9447,
											"end": 9467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9447,
											"end": 9467,
											"name": "tag",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 9447,
											"end": 9467,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9442,
											"end": 9467,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9442,
											"end": 9467,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9481,
											"end": 9501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 9499,
											"end": 9500,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9481,
											"end": 9501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 9481,
											"end": 9501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9481,
											"end": 9501,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 9481,
											"end": 9501,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9476,
											"end": 9501,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9476,
											"end": 9501,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9536,
											"end": 9537,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9533,
											"end": 9534,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9529,
											"end": 9538,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9558,
											"end": 9588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 9576,
											"end": 9587,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9558,
											"end": 9588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 9558,
											"end": 9588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9558,
											"end": 9588,
											"name": "tag",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 9558,
											"end": 9588,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9547,
											"end": 9588,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9547,
											"end": 9588,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9737,
											"end": 9738,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9728,
											"end": 9735,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9724,
											"end": 9739,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9721,
											"end": 9722,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9718,
											"end": 9740,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9698,
											"end": 9699,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9700,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9671,
											"end": 9754,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 9648,
											"end": 9787,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 9767,
											"end": 9785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "tag",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9787,
											"name": "tag",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 9648,
											"end": 9787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9432,
											"end": 9794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9384,
											"end": 9794,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9384,
											"end": 9794,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9384,
											"end": 9794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9384,
											"end": 9794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9384,
											"end": 9794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9800,
											"end": 9980,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 9800,
											"end": 9980,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9848,
											"end": 9925,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9845,
											"end": 9846,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9838,
											"end": 9926,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9945,
											"end": 9949,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 9942,
											"end": 9943,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9935,
											"end": 9950,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9969,
											"end": 9973,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9966,
											"end": 9967,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9959,
											"end": 9974,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9986,
											"end": 10171,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 9986,
											"end": 10171,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10026,
											"end": 10027,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10043,
											"end": 10063,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 10061,
											"end": 10062,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10043,
											"end": 10063,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 10043,
											"end": 10063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10043,
											"end": 10063,
											"name": "tag",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 10043,
											"end": 10063,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10038,
											"end": 10063,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10038,
											"end": 10063,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10077,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 10095,
											"end": 10096,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10077,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 10077,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10077,
											"end": 10097,
											"name": "tag",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 10077,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10072,
											"end": 10097,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10072,
											"end": 10097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10116,
											"end": 10117,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10106,
											"end": 10141,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 10106,
											"end": 10141,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10121,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 10121,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 10121,
											"end": 10139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10121,
											"end": 10139,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 10121,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10106,
											"end": 10141,
											"name": "tag",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 10106,
											"end": 10141,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10163,
											"end": 10164,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10160,
											"end": 10161,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10156,
											"end": 10165,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9986,
											"end": 10171,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9986,
											"end": 10171,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9986,
											"end": 10171,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9986,
											"end": 10171,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9986,
											"end": 10171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10177,
											"end": 10358,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 10177,
											"end": 10358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10317,
											"end": 10350,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F20746F6B656E7320617661696C61626C6520666F722072656C6561736500"
										},
										{
											"begin": 10313,
											"end": 10314,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10305,
											"end": 10311,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10301,
											"end": 10315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10294,
											"end": 10351,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10177,
											"end": 10358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10177,
											"end": 10358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10730,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 10364,
											"end": 10730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10506,
											"end": 10509,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10527,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 10591,
											"end": 10593,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 10586,
											"end": 10589,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10527,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 10527,
											"end": 10594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10527,
											"end": 10594,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 10527,
											"end": 10594,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10520,
											"end": 10594,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10520,
											"end": 10594,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10603,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 10692,
											"end": 10695,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10603,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 10603,
											"end": 10696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10603,
											"end": 10696,
											"name": "tag",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 10603,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10721,
											"end": 10723,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10716,
											"end": 10719,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10712,
											"end": 10724,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10705,
											"end": 10724,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10705,
											"end": 10724,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10730,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10730,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10736,
											"end": 11155,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 10736,
											"end": 11155,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10902,
											"end": 10906,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10940,
											"end": 10942,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10929,
											"end": 10938,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10925,
											"end": 10943,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10917,
											"end": 10943,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10917,
											"end": 10943,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10989,
											"end": 10998,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10983,
											"end": 10987,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10979,
											"end": 10999,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10975,
											"end": 10976,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10964,
											"end": 10973,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10960,
											"end": 10977,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10953,
											"end": 11000,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11017,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 11143,
											"end": 11147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11017,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 11017,
											"end": 11148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11017,
											"end": 11148,
											"name": "tag",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 11017,
											"end": 11148,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11009,
											"end": 11148,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11009,
											"end": 11148,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10736,
											"end": 11155,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10736,
											"end": 11155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10736,
											"end": 11155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10736,
											"end": 11155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11161,
											"end": 11334,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 11161,
											"end": 11334,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11301,
											"end": 11326,
											"name": "PUSH",
											"source": 8,
											"value": "6D617820746F6B656E206C696D69742072656163686564000000000000000000"
										},
										{
											"begin": 11297,
											"end": 11298,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11289,
											"end": 11295,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11285,
											"end": 11299,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11278,
											"end": 11327,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11161,
											"end": 11334,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11161,
											"end": 11334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11340,
											"end": 11706,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 11340,
											"end": 11706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11503,
											"end": 11570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 11567,
											"end": 11569,
											"name": "PUSH",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 11562,
											"end": 11565,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11503,
											"end": 11570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 11503,
											"end": 11570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11503,
											"end": 11570,
											"name": "tag",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 11503,
											"end": 11570,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11496,
											"end": 11570,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11496,
											"end": 11570,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11579,
											"end": 11672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 11668,
											"end": 11671,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11579,
											"end": 11672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 11579,
											"end": 11672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11579,
											"end": 11672,
											"name": "tag",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 11579,
											"end": 11672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11697,
											"end": 11699,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11692,
											"end": 11695,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 11700,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11681,
											"end": 11700,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11681,
											"end": 11700,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11340,
											"end": 11706,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11340,
											"end": 11706,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11340,
											"end": 11706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11340,
											"end": 11706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11712,
											"end": 12131,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 11712,
											"end": 12131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11878,
											"end": 11882,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11916,
											"end": 11918,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11901,
											"end": 11919,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11893,
											"end": 11919,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11893,
											"end": 11919,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11965,
											"end": 11974,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11959,
											"end": 11963,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11955,
											"end": 11975,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11951,
											"end": 11952,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11940,
											"end": 11949,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11936,
											"end": 11953,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11929,
											"end": 11976,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11993,
											"end": 12124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 12119,
											"end": 12123,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11993,
											"end": 12124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 11993,
											"end": 12124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11993,
											"end": 12124,
											"name": "tag",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 11993,
											"end": 12124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11985,
											"end": 12124,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11985,
											"end": 12124,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11712,
											"end": 12131,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11712,
											"end": 12131,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11712,
											"end": 12131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11712,
											"end": 12131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12137,
											"end": 12306,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 12137,
											"end": 12306,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12277,
											"end": 12298,
											"name": "PUSH",
											"source": 8,
											"value": "48616C76696E67206E6F74206475652079657400000000000000000000000000"
										},
										{
											"begin": 12273,
											"end": 12274,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12265,
											"end": 12271,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12261,
											"end": 12275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12254,
											"end": 12299,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12137,
											"end": 12306,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12137,
											"end": 12306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12312,
											"end": 12678,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 12312,
											"end": 12678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12454,
											"end": 12457,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12475,
											"end": 12542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 12539,
											"end": 12541,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 12534,
											"end": 12537,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12475,
											"end": 12542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 12475,
											"end": 12542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12475,
											"end": 12542,
											"name": "tag",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 12475,
											"end": 12542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12468,
											"end": 12542,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12468,
											"end": 12542,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12551,
											"end": 12644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 12640,
											"end": 12643,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12551,
											"end": 12644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 12551,
											"end": 12644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12551,
											"end": 12644,
											"name": "tag",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 12551,
											"end": 12644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12669,
											"end": 12671,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12664,
											"end": 12667,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12660,
											"end": 12672,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12672,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12672,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12312,
											"end": 12678,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12312,
											"end": 12678,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12312,
											"end": 12678,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12312,
											"end": 12678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12684,
											"end": 13103,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 12684,
											"end": 13103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12850,
											"end": 12854,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12888,
											"end": 12890,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12877,
											"end": 12886,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12873,
											"end": 12891,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12865,
											"end": 12891,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12865,
											"end": 12891,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12937,
											"end": 12946,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12931,
											"end": 12935,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12927,
											"end": 12947,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12923,
											"end": 12924,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12912,
											"end": 12921,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12908,
											"end": 12925,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12901,
											"end": 12948,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12965,
											"end": 13096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 13091,
											"end": 13095,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12965,
											"end": 13096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 12965,
											"end": 13096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12965,
											"end": 13096,
											"name": "tag",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 12965,
											"end": 13096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12957,
											"end": 13096,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12957,
											"end": 13096,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12684,
											"end": 13103,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12684,
											"end": 13103,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12684,
											"end": 13103,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12684,
											"end": 13103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13109,
											"end": 13441,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 13109,
											"end": 13441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13230,
											"end": 13234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13268,
											"end": 13270,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13257,
											"end": 13266,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13253,
											"end": 13271,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13245,
											"end": 13271,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13245,
											"end": 13271,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13281,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 13349,
											"end": 13350,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13338,
											"end": 13347,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13334,
											"end": 13351,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13325,
											"end": 13331,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13281,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 13281,
											"end": 13352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13281,
											"end": 13352,
											"name": "tag",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 13281,
											"end": 13352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13362,
											"end": 13434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 13430,
											"end": 13432,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13419,
											"end": 13428,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13415,
											"end": 13433,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13406,
											"end": 13412,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13362,
											"end": 13434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 13362,
											"end": 13434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13362,
											"end": 13434,
											"name": "tag",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 13362,
											"end": 13434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13109,
											"end": 13441,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 13109,
											"end": 13441,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13109,
											"end": 13441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13109,
											"end": 13441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13109,
											"end": 13441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13109,
											"end": 13441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13447,
											"end": 13627,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 13447,
											"end": 13627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13587,
											"end": 13619,
											"name": "PUSH",
											"source": 8,
											"value": "6E6F20746F6B656E20617661696C61626C6520666F722072656C656173650000"
										},
										{
											"begin": 13583,
											"end": 13584,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13575,
											"end": 13581,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13571,
											"end": 13585,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13564,
											"end": 13620,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13447,
											"end": 13627,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13447,
											"end": 13627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13633,
											"end": 13999,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 13633,
											"end": 13999,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13775,
											"end": 13778,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13796,
											"end": 13863,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 13860,
											"end": 13862,
											"name": "PUSH",
											"source": 8,
											"value": "1E"
										},
										{
											"begin": 13855,
											"end": 13858,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13796,
											"end": 13863,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 13796,
											"end": 13863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13796,
											"end": 13863,
											"name": "tag",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 13796,
											"end": 13863,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13789,
											"end": 13863,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13789,
											"end": 13863,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13872,
											"end": 13965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 13961,
											"end": 13964,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13872,
											"end": 13965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 13872,
											"end": 13965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13872,
											"end": 13965,
											"name": "tag",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 13872,
											"end": 13965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13990,
											"end": 13992,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13985,
											"end": 13988,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13981,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13974,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13974,
											"end": 13993,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13633,
											"end": 13999,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13633,
											"end": 13999,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13633,
											"end": 13999,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13633,
											"end": 13999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14005,
											"end": 14424,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 14005,
											"end": 14424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14171,
											"end": 14175,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14209,
											"end": 14211,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14198,
											"end": 14207,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14194,
											"end": 14212,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14186,
											"end": 14212,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14186,
											"end": 14212,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14258,
											"end": 14267,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14252,
											"end": 14256,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14248,
											"end": 14268,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14244,
											"end": 14245,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14233,
											"end": 14242,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14229,
											"end": 14246,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14222,
											"end": 14269,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14286,
											"end": 14417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 14412,
											"end": 14416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14286,
											"end": 14417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 14286,
											"end": 14417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14286,
											"end": 14417,
											"name": "tag",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 14286,
											"end": 14417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14278,
											"end": 14417,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14278,
											"end": 14417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14005,
											"end": 14424,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14005,
											"end": 14424,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14005,
											"end": 14424,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14005,
											"end": 14424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14430,
											"end": 14602,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 14430,
											"end": 14602,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14570,
											"end": 14594,
											"name": "PUSH",
											"source": 8,
											"value": "6D617820746F6B656E20696D6974207265616368656400000000000000000000"
										},
										{
											"begin": 14566,
											"end": 14567,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14558,
											"end": 14564,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14554,
											"end": 14568,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14547,
											"end": 14595,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14430,
											"end": 14602,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14430,
											"end": 14602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14608,
											"end": 14974,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 14608,
											"end": 14974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14750,
											"end": 14753,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14771,
											"end": 14838,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 14835,
											"end": 14837,
											"name": "PUSH",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 14830,
											"end": 14833,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14771,
											"end": 14838,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 14771,
											"end": 14838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14771,
											"end": 14838,
											"name": "tag",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 14771,
											"end": 14838,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14764,
											"end": 14838,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14764,
											"end": 14838,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14847,
											"end": 14940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 14936,
											"end": 14939,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14847,
											"end": 14940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 14847,
											"end": 14940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14847,
											"end": 14940,
											"name": "tag",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 14847,
											"end": 14940,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14965,
											"end": 14967,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14960,
											"end": 14963,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14956,
											"end": 14968,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14949,
											"end": 14968,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14949,
											"end": 14968,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14608,
											"end": 14974,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14608,
											"end": 14974,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14608,
											"end": 14974,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14608,
											"end": 14974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14980,
											"end": 15399,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 14980,
											"end": 15399,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15146,
											"end": 15150,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15184,
											"end": 15186,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15173,
											"end": 15182,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15169,
											"end": 15187,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15161,
											"end": 15187,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15161,
											"end": 15187,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15233,
											"end": 15242,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15227,
											"end": 15231,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15223,
											"end": 15243,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15219,
											"end": 15220,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15208,
											"end": 15217,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15204,
											"end": 15221,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15197,
											"end": 15244,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15261,
											"end": 15392,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 15387,
											"end": 15391,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15261,
											"end": 15392,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 15261,
											"end": 15392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15261,
											"end": 15392,
											"name": "tag",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 15261,
											"end": 15392,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15253,
											"end": 15392,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15253,
											"end": 15392,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14980,
											"end": 15399,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14980,
											"end": 15399,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14980,
											"end": 15399,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14980,
											"end": 15399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15405,
											"end": 15586,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 15405,
											"end": 15586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15545,
											"end": 15578,
											"name": "PUSH",
											"source": 8,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 15541,
											"end": 15542,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15533,
											"end": 15539,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15529,
											"end": 15543,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15579,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15405,
											"end": 15586,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15405,
											"end": 15586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15592,
											"end": 15958,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 15592,
											"end": 15958,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15734,
											"end": 15737,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15755,
											"end": 15822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 15819,
											"end": 15821,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 15814,
											"end": 15817,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15755,
											"end": 15822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 15755,
											"end": 15822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15755,
											"end": 15822,
											"name": "tag",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 15755,
											"end": 15822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15748,
											"end": 15822,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15748,
											"end": 15822,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15831,
											"end": 15924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 15920,
											"end": 15923,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15831,
											"end": 15924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 15831,
											"end": 15924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15831,
											"end": 15924,
											"name": "tag",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 15831,
											"end": 15924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15949,
											"end": 15951,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15944,
											"end": 15947,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15940,
											"end": 15952,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15933,
											"end": 15952,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15933,
											"end": 15952,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15592,
											"end": 15958,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15592,
											"end": 15958,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15592,
											"end": 15958,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15592,
											"end": 15958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15964,
											"end": 16383,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 15964,
											"end": 16383,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16130,
											"end": 16134,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16168,
											"end": 16170,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16157,
											"end": 16166,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16153,
											"end": 16171,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16145,
											"end": 16171,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16145,
											"end": 16171,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16217,
											"end": 16226,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16211,
											"end": 16215,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16207,
											"end": 16227,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16203,
											"end": 16204,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16192,
											"end": 16201,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16188,
											"end": 16205,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16181,
											"end": 16228,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16245,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 16371,
											"end": 16375,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16245,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 16245,
											"end": 16376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16245,
											"end": 16376,
											"name": "tag",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 16245,
											"end": 16376,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16237,
											"end": 16376,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16237,
											"end": 16376,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15964,
											"end": 16383,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15964,
											"end": 16383,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15964,
											"end": 16383,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15964,
											"end": 16383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16389,
											"end": 16831,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 16389,
											"end": 16831,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16538,
											"end": 16542,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16576,
											"end": 16578,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 16565,
											"end": 16574,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16561,
											"end": 16579,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16553,
											"end": 16579,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16553,
											"end": 16579,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16589,
											"end": 16660,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 16657,
											"end": 16658,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16646,
											"end": 16655,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16642,
											"end": 16659,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16633,
											"end": 16639,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 16589,
											"end": 16660,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 16589,
											"end": 16660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16589,
											"end": 16660,
											"name": "tag",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 16589,
											"end": 16660,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16670,
											"end": 16742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 16738,
											"end": 16740,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16727,
											"end": 16736,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16723,
											"end": 16741,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16714,
											"end": 16720,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16670,
											"end": 16742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 16670,
											"end": 16742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16670,
											"end": 16742,
											"name": "tag",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 16670,
											"end": 16742,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16752,
											"end": 16824,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 16820,
											"end": 16822,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16809,
											"end": 16818,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16805,
											"end": 16823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16796,
											"end": 16802,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16752,
											"end": 16824,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 16752,
											"end": 16824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16752,
											"end": 16824,
											"name": "tag",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 16752,
											"end": 16824,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16389,
											"end": 16831,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 16389,
											"end": 16831,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 16389,
											"end": 16831,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16389,
											"end": 16831,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16389,
											"end": 16831,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16389,
											"end": 16831,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16389,
											"end": 16831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/XORA.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"COMMUNITY_GROWTH_AND_MARKETING()": "ba115cb6",
							"HALVING_PERIOD()": "3adde9c1",
							"ICO_ALLOCATION()": "b0a65b3e",
							"INITIAL_SUPPLY()": "2ff2e9dc",
							"LIQUIDITY_POOL()": "2cca9dfd",
							"MARKETING_INITIAL_UNLOCK()": "23256627",
							"PLAY_TO_EARN()": "4f0dbaf2",
							"STRADEGIC_RESERVE()": "56bf536c",
							"TEAM_AND_DEVELOPMENT()": "df7f989f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buyTax()": "4f7041a5",
							"decimals()": "313ce567",
							"halveRewards()": "8b887e7e",
							"initializeRewardParameters(uint256,address)": "926165d7",
							"lastHalvingTime()": "8cbb6df7",
							"marketingAllocated()": "1f6722b6",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"releaseMarketingTokens()": "dc31adee",
							"releaseTeamTokens()": "14c411c7",
							"releasedMarketingAmount()": "0733f92b",
							"releasedTeamAmount()": "a6f59846",
							"renounceOwnership()": "715018a6",
							"rewardRate()": "7b0a47ee",
							"sellTax()": "cc1776d3",
							"stablecoin()": "e9cbd822",
							"symbol()": "95d89b41",
							"teamAllocated()": "329430ca",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pairLiquidityPool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BuyBackAndBurn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRewardRate\",\"type\":\"uint256\"}],\"name\":\"RewardHalved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"initialRewardRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stablecoin\",\"type\":\"address\"}],\"name\":\"RewardParametersInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COMMUNITY_GROWTH_AND_MARKETING\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HALVING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ICO_ALLOCATION\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIQUIDITY_POOL\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MARKETING_INITIAL_UNLOCK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PLAY_TO_EARN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STRADEGIC_RESERVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TEAM_AND_DEVELOPMENT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"halveRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialRewardRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_stablecoin\",\"type\":\"address\"}],\"name\":\"initializeRewardParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastHalvingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingAllocated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseMarketingTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseTeamTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releasedMarketingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releasedTeamAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stablecoin\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamAllocated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/XORA.sol\":\"XORA\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x1821a0e3715b9e068355dd4560f8cedf382c4f96f2d4d3e8dfaa8206d7b393fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d21d325269a45a1bd25c1b00c4d51b34c9574f1874eb6026504fbe88e838511\",\"dweb:/ipfs/QmWBPFEnQ43J29f1ZcMmsz3wUcT9dqvWeoikRhY5SVvWoZ\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/XORA.sol\":{\"keccak256\":\"0xa5a763cc46e90c68d019a7b142dede7ac12c692d7455a5d3b559459b41b6d475\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://426ba9684c8ec07c6490c26d1342099388f66abfa85a69ca40e76db885cc921f\",\"dweb:/ipfs/QmbwYfh2gYb335EgsZpApnJDNy7VpdNNmBULWjX6UNS7fP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "contracts/XORA.sol:XORA",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "contracts/XORA.sol:XORA",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "contracts/XORA.sol:XORA",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "contracts/XORA.sol:XORA",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "contracts/XORA.sol:XORA",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/XORA.sol:XORA",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 295,
								"contract": "contracts/XORA.sol:XORA",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1020,
								"contract": "contracts/XORA.sol:XORA",
								"label": "stablecoin",
								"offset": 0,
								"slot": "7",
								"type": "t_contract(IERC20)942"
							},
							{
								"astId": 1023,
								"contract": "contracts/XORA.sol:XORA",
								"label": "buyTax",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1026,
								"contract": "contracts/XORA.sol:XORA",
								"label": "sellTax",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1028,
								"contract": "contracts/XORA.sol:XORA",
								"label": "lastHalvingTime",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1030,
								"contract": "contracts/XORA.sol:XORA",
								"label": "rewardRate",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1035,
								"contract": "contracts/XORA.sol:XORA",
								"label": "teamStartTimestamp",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1053,
								"contract": "contracts/XORA.sol:XORA",
								"label": "TEAM_TOTAL_FUND",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1055,
								"contract": "contracts/XORA.sol:XORA",
								"label": "marketingStartTimestamp",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 1066,
								"contract": "contracts/XORA.sol:XORA",
								"label": "teamAllocated",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 1068,
								"contract": "contracts/XORA.sol:XORA",
								"label": "releasedTeamAmount",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							},
							{
								"astId": 1073,
								"contract": "contracts/XORA.sol:XORA",
								"label": "MARKETING_VESTING_PERIOD",
								"offset": 0,
								"slot": "17",
								"type": "t_uint256"
							},
							{
								"astId": 1081,
								"contract": "contracts/XORA.sol:XORA",
								"label": "marketingAllocated",
								"offset": 0,
								"slot": "18",
								"type": "t_uint256"
							},
							{
								"astId": 1083,
								"contract": "contracts/XORA.sol:XORA",
								"label": "releasedMarketingAmount",
								"offset": 0,
								"slot": "19",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)942": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 999,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 998,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 998,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								998
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							349
						]
					},
					"id": 350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 349,
							"linearizedBaseContracts": [
								349
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 290,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 293,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 291,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 295,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 298,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 299,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 303,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 349,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 306,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 309,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 314,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 318,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 319,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 324,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 325,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 349,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 332,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 333,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 349,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 343,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 344,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 342,
												"id": 346,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 349,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 350,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"ERC20": [
							864
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							968
						]
					},
					"id": 865,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 353,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 943,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 352,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 969,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 354,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 968,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 357,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 999,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 356,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 998,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 285,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 358,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 361,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 998,
										"src": "1133:7:3"
									},
									"id": 362,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 363,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "1142:6:3"
									},
									"id": 364,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 365,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 968,
										"src": "1150:14:3"
									},
									"id": 366,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 367,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:3"
									},
									"id": 368,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 360,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 864,
							"linearizedBaseContracts": [
								864,
								189,
								968,
								942,
								998
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 372,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 371,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 369,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 370,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 378,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 377,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 373,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 376,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 374,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 375,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 380,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 379,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 382,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 381,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 384,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 383,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "1657:57:3",
										"statements": [
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 392,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "1667:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 393,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "1675:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:3"
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 396,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "1690:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 397,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "1700:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:3"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 401,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1613:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 386,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1634:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:3"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:3"
									},
									"scope": 864,
									"src": "1601:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										955
									],
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "1839:29:3",
										"statements": [
											{
												"expression": {
													"id": 407,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 382,
													"src": "1856:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 406,
												"id": 408,
												"nodeType": "Return",
												"src": "1849:12:3"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:3"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1824:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:3"
									},
									"scope": 864,
									"src": "1779:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										961
									],
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "2043:31:3",
										"statements": [
											{
												"expression": {
													"id": 416,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 384,
													"src": "2060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 415,
												"id": 417,
												"nodeType": "Return",
												"src": "2053:14:3"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2028:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:3"
									},
									"scope": 864,
									"src": "1981:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										967
									],
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "2763:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 424,
												"id": 426,
												"nodeType": "Return",
												"src": "2773:9:3"
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:3"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "2756:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 422,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:3"
									},
									"scope": 864,
									"src": "2707:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										891
									],
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "2910:36:3",
										"statements": [
											{
												"expression": {
													"id": 434,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 380,
													"src": "2927:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 433,
												"id": 435,
												"nodeType": "Return",
												"src": "2920:19:3"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:3"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "2901:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:3"
									},
									"scope": 864,
									"src": "2849:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										899
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "3078:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 445,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "3095:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 447,
													"indexExpression": {
														"id": 446,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "3105:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 444,
												"id": 448,
												"nodeType": "Return",
												"src": "3088:25:3"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:3"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:3"
									},
									"scope": 864,
									"src": "3004:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										909
									],
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "3390:103:3",
										"statements": [
											{
												"assignments": [
													461
												],
												"declarations": [
													{
														"constant": false,
														"id": 461,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "3400:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 460,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 462,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "3416:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3448:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 467,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "3455:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "3459:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 465,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "3438:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 459,
												"id": 472,
												"nodeType": "Return",
												"src": "3475:11:3"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3333:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3345:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:3"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3384:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:3"
									},
									"scope": 864,
									"src": "3315:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										919
									],
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "3640:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 484,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "3657:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 486,
														"indexExpression": {
															"id": 485,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3669:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 488,
													"indexExpression": {
														"id": 487,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "3676:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 483,
												"id": 489,
												"nodeType": "Return",
												"src": "3650:34:3"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3570:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3585:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:3"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3631:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:3"
									},
									"scope": 864,
									"src": "3551:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										929
									],
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "4077:107:3",
										"statements": [
											{
												"assignments": [
													502
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 514,
														"src": "4087:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 501,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 505,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 503,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "4103:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 507,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "4134:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "4141:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "4150:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 755,
														"src": "4125:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 500,
												"id": 513,
												"nodeType": "Return",
												"src": "4166:11:3"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4015:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:3"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4071:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:3"
									},
									"scope": 864,
									"src": "3998:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										941
									],
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "4869:151:3",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 546,
														"src": "4879:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 527,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 529,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "4897:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 533,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4935:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "4941:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 535,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4950:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 532,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "4919:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 539,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4976:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "4982:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4986:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 538,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "4966:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 526,
												"id": 545,
												"nodeType": "Return",
												"src": "5002:11:3"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4798:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4812:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4824:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4863:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:3"
									},
									"scope": 864,
									"src": "4776:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "5470:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 557,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "5484:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5500:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5492:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 558,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5492:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5492:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5484:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "5480:86:3",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "5504:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5552:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5544:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 564,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5544:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5544:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 563,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5525:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5525:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 569,
															"nodeType": "RevertStatement",
															"src": "5518:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 572,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "5579:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5593:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5585:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 573,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5585:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5585:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5579:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 586,
												"nodeType": "IfStatement",
												"src": "5575:86:3",
												"trueBody": {
													"id": 585,
													"nodeType": "Block",
													"src": "5597:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5647:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5639:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 579,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5639:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5639:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 578,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5618:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5618:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 584,
															"nodeType": "RevertStatement",
															"src": "5611:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "5678:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "5684:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "5688:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "5670:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5670:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "5670:24:3"
											}
										]
									},
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5412:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5426:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5438:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:3"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5470:0:3"
									},
									"scope": 864,
									"src": "5393:308:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "6091:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 604,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "6105:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6121:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6113:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 605,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6113:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6113:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6105:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 641,
													"nodeType": "Block",
													"src": "6279:362:3",
													"statements": [
														{
															"assignments": [
																616
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 616,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6301:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 641,
																	"src": "6293:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 615,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6293:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 620,
															"initialValue": {
																"baseExpression": {
																	"id": 617,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "6315:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 619,
																"indexExpression": {
																	"id": 618,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "6325:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6315:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6293:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 621,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "6348:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 622,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6362:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6348:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 631,
															"nodeType": "IfStatement",
															"src": "6344:115:3",
															"trueBody": {
																"id": 630,
																"nodeType": "Block",
																"src": "6369:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 625,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 597,
																					"src": "6419:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 626,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 616,
																					"src": "6425:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 627,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 601,
																					"src": "6438:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 624,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6394:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6394:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 629,
																		"nodeType": "RevertStatement",
																		"src": "6387:57:3"
																	}
																]
															}
														},
														{
															"id": 640,
															"nodeType": "UncheckedBlock",
															"src": "6472:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 632,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "6579:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 634,
																			"indexExpression": {
																				"id": 633,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 597,
																				"src": "6589:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6579:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 635,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 616,
																				"src": "6597:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 636,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "6611:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6597:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6579:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 639,
																	"nodeType": "ExpressionStatement",
																	"src": "6579:37:3"
																}
															]
														}
													]
												},
												"id": 642,
												"nodeType": "IfStatement",
												"src": "6101:540:3",
												"trueBody": {
													"id": 614,
													"nodeType": "Block",
													"src": "6125:148:3",
													"statements": [
														{
															"expression": {
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 610,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "6241:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 611,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6257:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6241:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 613,
															"nodeType": "ExpressionStatement",
															"src": "6241:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 643,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "6655:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6669:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6661:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 644,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6661:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6661:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6655:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 662,
													"nodeType": "Block",
													"src": "6870:206:3",
													"statements": [
														{
															"id": 661,
															"nodeType": "UncheckedBlock",
															"src": "6884:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 655,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "7029:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 657,
																			"indexExpression": {
																				"id": 656,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 599,
																				"src": "7039:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7029:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 658,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "7046:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7029:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 660,
																	"nodeType": "ExpressionStatement",
																	"src": "7029:22:3"
																}
															]
														}
													]
												},
												"id": 663,
												"nodeType": "IfStatement",
												"src": "6651:425:3",
												"trueBody": {
													"id": 654,
													"nodeType": "Block",
													"src": "6673:191:3",
													"statements": [
														{
															"id": 653,
															"nodeType": "UncheckedBlock",
															"src": "6687:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 649,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 380,
																			"src": "6818:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 650,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "6834:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6818:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 652,
																	"nodeType": "ExpressionStatement",
																	"src": "6818:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 665,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "7100:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "7106:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "7110:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 664,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "7091:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7091:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "EmitStatement",
												"src": "7086:30:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "5707:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6025:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6041:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6033:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6033:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6055:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6047:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6047:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6067:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6059:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6059:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:41:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6091:0:3"
									},
									"scope": 864,
									"src": "6016:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "7522:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 679,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "7536:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7555:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7547:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 680,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7547:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7547:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7536:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 693,
												"nodeType": "IfStatement",
												"src": "7532:91:3",
												"trueBody": {
													"id": 692,
													"nodeType": "Block",
													"src": "7559:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 688,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7609:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7601:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 686,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7601:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7601:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 685,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7580:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7580:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 691,
															"nodeType": "RevertStatement",
															"src": "7573:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7648:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7640:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 695,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7640:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7640:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "7652:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "7661:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 694,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "7632:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7632:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "7632:35:3"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "7129:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7475:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7489:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7481:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7481:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7506:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7498:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7498:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7480:32:3"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7522:0:3"
									},
									"scope": 864,
									"src": "7466:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8048:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 712,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "8062:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8081:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8073:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 713,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8073:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8073:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8062:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 726,
												"nodeType": "IfStatement",
												"src": "8058:89:3",
												"trueBody": {
													"id": 725,
													"nodeType": "Block",
													"src": "8085:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8133:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8125:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 719,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8125:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8125:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 718,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8106:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8106:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 724,
															"nodeType": "RevertStatement",
															"src": "8099:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 728,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "8164:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8181:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8173:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 729,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8173:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8173:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8185:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 727,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "8156:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8156:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "8156:35:3"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "7680:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8001:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8015:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8007:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8007:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8032:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8024:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8024:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8006:32:3"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8048:0:3"
									},
									"scope": 864,
									"src": "7992:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "8808:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 748,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "8827:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "8834:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "8843:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8850:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 747,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 815,
														"src": "8818:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8818:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "8818:37:3"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "8204:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8743:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8760:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8752:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8752:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8775:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8767:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8767:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8792:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8784:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8784:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8751:47:3"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8808:0:3"
									},
									"scope": 864,
									"src": "8734:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "9807:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "9821:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9838:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9830:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 768,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9830:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9830:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9821:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "IfStatement",
												"src": "9817:89:3",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "9842:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9892:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9884:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 774,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9884:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9884:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 773,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9863:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9863:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 779,
															"nodeType": "RevertStatement",
															"src": "9856:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 782,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "9919:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9938:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9930:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 783,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9930:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9930:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9919:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "9915:90:3",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "9942:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9991:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9983:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 789,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9983:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9983:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 788,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9963:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9963:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 794,
															"nodeType": "RevertStatement",
															"src": "9956:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 797,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "10014:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 800,
															"indexExpression": {
																"id": 798,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "10026:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10014:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 801,
														"indexExpression": {
															"id": 799,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "10033:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10014:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 802,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "10044:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10014:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "10014:35:3"
											},
											{
												"condition": {
													"id": 805,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 764,
													"src": "10063:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "10059:76:3",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "10074:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 807,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "10102:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 808,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "10109:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 809,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "10118:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 806,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "10093:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10093:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 811,
															"nodeType": "EmitStatement",
															"src": "10088:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "8868:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9718:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9735:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9727:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9750:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9742:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9742:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9767:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9759:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9759:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9779:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9774:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9774:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9726:63:3"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9807:0:3"
									},
									"scope": 864,
									"src": "9709:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "10512:388:3",
										"statements": [
											{
												"assignments": [
													826
												],
												"declarations": [
													{
														"constant": false,
														"id": 826,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10530:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 862,
														"src": "10522:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 825,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10522:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 831,
												"initialValue": {
													"arguments": [
														{
															"id": 828,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "10559:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 829,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "10566:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 827,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "10549:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10549:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10522:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 832,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "10588:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10613:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 834,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10613:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 833,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10608:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10608:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10622:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10608:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10588:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 861,
												"nodeType": "IfStatement",
												"src": "10584:310:3",
												"trueBody": {
													"id": 860,
													"nodeType": "Block",
													"src": "10627:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 839,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "10645:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 840,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "10664:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10645:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 849,
															"nodeType": "IfStatement",
															"src": "10641:130:3",
															"trueBody": {
																"id": 848,
																"nodeType": "Block",
																"src": "10671:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 843,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "10723:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 844,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10732:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 845,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10750:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 842,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10696:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10696:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 847,
																		"nodeType": "RevertStatement",
																		"src": "10689:67:3"
																	}
																]
															}
														},
														{
															"id": 859,
															"nodeType": "UncheckedBlock",
															"src": "10784:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 851,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 818,
																				"src": "10821:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 852,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 820,
																				"src": "10828:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 853,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10837:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 854,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10856:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10837:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10863:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 850,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				755,
																				815
																			],
																			"referencedDeclaration": 815,
																			"src": "10812:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10812:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 858,
																	"nodeType": "ExpressionStatement",
																	"src": "10812:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "10147:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10432:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10456:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10448:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10448:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10471:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10463:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10463:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10488:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10480:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10480:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10447:47:3"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10512:0:3"
									},
									"scope": 864,
									"src": "10423:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 865,
							"src": "1106:9796:3",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "105:10798:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						]
					},
					"id": 943,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 866,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 867,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 942,
							"linearizedBaseContracts": [
								942
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 876,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 885,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 891,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 942,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 942,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 909,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 942,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 919,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 942,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 929,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 926,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 942,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 942,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 943,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						],
						"IERC20Metadata": [
							968
						]
					},
					"id": 969,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 944,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 946,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 969,
							"sourceUnit": 943,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 945,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 948,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "306:6:5"
									},
									"id": 949,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 947,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 968,
							"linearizedBaseContracts": [
								968,
								942
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 952,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 968,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 961,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 958,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 968,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 967,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 964,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 968,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 969,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							998
						]
					},
					"id": 999,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 970,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 971,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 998,
							"linearizedBaseContracts": [
								998
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 976,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 975,
												"id": 978,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 998,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 985,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 984,
												"id": 987,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 998,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 993,
												"id": 995,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 998,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 999,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"contracts/XORA.sol": {
				"ast": {
					"absolutePath": "contracts/XORA.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"ERC20": [
							864
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							968
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							349
						],
						"XORA": [
							1426
						]
					},
					"id": 1427,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1000,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1001,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1427,
							"sourceUnit": 865,
							"src": "58:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1002,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1427,
							"sourceUnit": 148,
							"src": "114:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1003,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1427,
							"sourceUnit": 350,
							"src": "167:62:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1004,
										"name": "ERC20",
										"nameLocations": [
											"248:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 864,
										"src": "248:5:7"
									},
									"id": 1005,
									"nodeType": "InheritanceSpecifier",
									"src": "248:5:7"
								},
								{
									"baseName": {
										"id": 1006,
										"name": "Ownable",
										"nameLocations": [
											"255:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "255:7:7"
									},
									"id": 1007,
									"nodeType": "InheritanceSpecifier",
									"src": "255:7:7"
								},
								{
									"baseName": {
										"id": 1008,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"264:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 349,
										"src": "264:15:7"
									},
									"id": 1009,
									"nodeType": "InheritanceSpecifier",
									"src": "264:15:7"
								}
							],
							"canonicalName": "XORA",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1426,
							"linearizedBaseContracts": [
								1426,
								349,
								147,
								864,
								189,
								968,
								942,
								998
							],
							"name": "XORA",
							"nameLocation": "240:4:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "2ff2e9dc",
									"id": 1017,
									"mutability": "constant",
									"name": "INITIAL_SUPPLY",
									"nameLocation": "310:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1426,
									"src": "286:65:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1010,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "286:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										},
										"id": 1016,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "315f3030305f3030305f303030",
											"id": 1011,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "327:13:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"value": "1_000_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1012,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "344:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 1013,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "348:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "344:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 1015,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "343:8:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "327:24:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e9cbd822",
									"id": 1020,
									"mutability": "mutable",
									"name": "stablecoin",
									"nameLocation": "371:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1426,
									"src": "357:24:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$942",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1019,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1018,
											"name": "IERC20",
											"nameLocations": [
												"357:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 942,
											"src": "357:6:7"
										},
										"referencedDeclaration": 942,
										"src": "357:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$942",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4f7041a5",
									"id": 1023,
									"mutability": "mutable",
									"name": "buyTax",
									"nameLocation": "403:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1426,
									"src": "388:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1021,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "388:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1022,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "412:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cc1776d3",
									"id": 1026,
									"mutability": "mutable",
									"name": "sellTax",
									"nameLocation": "434:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1426,
									"src": "419:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1024,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "419:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1025,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "444:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8cbb6df7",
									"id": 1028,
									"mutability": "mutable",
									"name": "lastHalvingTime",
									"nameLocation": "466:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1426,
									"src": "451:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1027,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "451:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b0a47ee",
									"id": 1030,
									"mutability": "mutable",
									"name": "rewardRate",
									"nameLocation": "502:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1426,
									"src": "487:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1029,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "487:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "3adde9c1",
									"id": 1033,
									"mutability": "constant",
									"name": "HALVING_PERIOD",
									"nameLocation": "542:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1426,
									"src": "518:49:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1031,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "518:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333635",
										"id": 1032,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "559:8:7",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										},
										"value": "365"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1035,
									"mutability": "mutable",
									"name": "teamStartTimestamp",
									"nameLocation": "583:18:7",
									"nodeType": "VariableDeclaration",
									"scope": 1426,
									"src": "574:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1034,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "574:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1040,
									"mutability": "constant",
									"name": "TEAM_CLIFF",
									"nameLocation": "625:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1426,
									"src": "607:43:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1036,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "607:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_46656000_by_1",
											"typeString": "int_const 46656000"
										},
										"id": 1039,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3138",
											"id": 1037,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "638:2:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18_by_1",
												"typeString": "int_const 18"
											},
											"value": "18"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "3330",
											"id": 1038,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "643:7:7",
											"subdenomination": "days",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2592000_by_1",
												"typeString": "int_const 2592000"
											},
											"value": "30"
										},
										"src": "638:12:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_46656000_by_1",
											"typeString": "int_const 46656000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1045,
									"mutability": "constant",
									"name": "TEAM_VESTING_PERIOD",
									"nameLocation": "674:19:7",
									"nodeType": "VariableDeclaration",
									"scope": 1426,
									"src": "656:52:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1041,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "656:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_126144000_by_1",
											"typeString": "int_const 126144000"
										},
										"id": 1044,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "34",
											"id": 1042,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "696:1:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_4_by_1",
												"typeString": "int_const 4"
											},
											"value": "4"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "333635",
											"id": 1043,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "700:8:7",
											"subdenomination": "days",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_31536000_by_1",
												"typeString": "int_const 31536000"
											},
											"value": "365"
										},
										"src": "696:12:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_126144000_by_1",
											"typeString": "int_const 126144000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1053,
									"mutability": "mutable",
									"name": "TEAM_TOTAL_FUND",
									"nameLocation": "723:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1426,
									"src": "714:49:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1046,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "714:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000000"
										},
										"id": 1052,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130305f3030305f303030",
											"id": 1047,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "741:11:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100000000_by_1",
												"typeString": "int_const 100000000"
											},
											"value": "100_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1048,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "756:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 1049,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "760:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "756:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 1051,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "755:8:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "741:22:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1055,
									"mutability": "mutable",
									"name": "marketingStartTimestamp",
									"nameLocation": "778:23:7",
									"nodeType": "VariableDeclaration",
									"scope": 1426,
									"src": "770:31:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1054,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "770:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "23256627",
									"id": 1058,
									"mutability": "constant",
									"name": "MARKETING_INITIAL_UNLOCK",
									"nameLocation": "831:24:7",
									"nodeType": "VariableDeclaration",
									"scope": 1426,
									"src": "807:53:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1056,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "807:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3235",
										"id": 1057,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "858:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25_by_1",
											"typeString": "int_const 25"
										},
										"value": "25"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "329430ca",
									"id": 1066,
									"mutability": "mutable",
									"name": "teamAllocated",
									"nameLocation": "882:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1426,
									"src": "867:53:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1059,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "867:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000000"
										},
										"id": 1065,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130305f3030305f303030",
											"id": 1060,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "898:11:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100000000_by_1",
												"typeString": "int_const 100000000"
											},
											"value": "100_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1061,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "913:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 1062,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "917:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "913:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 1064,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "912:8:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "898:22:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a6f59846",
									"id": 1068,
									"mutability": "mutable",
									"name": "releasedTeamAmount",
									"nameLocation": "941:18:7",
									"nodeType": "VariableDeclaration",
									"scope": 1426,
									"src": "926:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1067,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "926:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1073,
									"mutability": "mutable",
									"name": "MARKETING_VESTING_PERIOD",
									"nameLocation": "974:24:7",
									"nodeType": "VariableDeclaration",
									"scope": 1426,
									"src": "965:48:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1069,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "965:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_31104000_by_1",
											"typeString": "int_const 31104000"
										},
										"id": 1072,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3132",
											"id": 1070,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1001:2:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_12_by_1",
												"typeString": "int_const 12"
											},
											"value": "12"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "3330",
											"id": 1071,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1006:7:7",
											"subdenomination": "days",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2592000_by_1",
												"typeString": "int_const 2592000"
											},
											"value": "30"
										},
										"src": "1001:12:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31104000_by_1",
											"typeString": "int_const 31104000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "1f6722b6",
									"id": 1081,
									"mutability": "mutable",
									"name": "marketingAllocated",
									"nameLocation": "1035:18:7",
									"nodeType": "VariableDeclaration",
									"scope": 1426,
									"src": "1020:57:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1074,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1020:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_75000000000000000000000000_by_1",
											"typeString": "int_const 75000000000000000000000000"
										},
										"id": 1080,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "37355f3030305f303030",
											"id": 1075,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1056:10:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_75000000_by_1",
												"typeString": "int_const 75000000"
											},
											"value": "75_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1070:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 1077,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1074:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "1070:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 1079,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1069:8:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1056:21:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_75000000000000000000000000_by_1",
											"typeString": "int_const 75000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0733f92b",
									"id": 1083,
									"mutability": "mutable",
									"name": "releasedMarketingAmount",
									"nameLocation": "1098:23:7",
									"nodeType": "VariableDeclaration",
									"scope": 1426,
									"src": "1083:38:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1082,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1083:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "f92b4d3a8d8ba77170dd5cf6b65260191092093f924263a88c3c60dd8495f091",
									"id": 1087,
									"name": "RewardHalved",
									"nameLocation": "1135:12:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"indexed": false,
												"mutability": "mutable",
												"name": "newRewardRate",
												"nameLocation": "1156:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "1148:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1148:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1147:23:7"
									},
									"src": "1129:42:7"
								},
								{
									"anonymous": false,
									"eventSelector": "6ef4855b666dcc7884561072e4358b28dfe01feb1b7f4dcebc00e62d50394ac7",
									"id": 1091,
									"name": "TokensBurned",
									"nameLocation": "1182:12:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1203:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1195:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:16:7"
									},
									"src": "1176:35:7"
								},
								{
									"anonymous": false,
									"eventSelector": "9438dfa72f08cd69bb3041dd0788ea8912ecfa43c84301778d859e814937d5c0",
									"id": 1095,
									"name": "BuyBackAndBurn",
									"nameLocation": "1222:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1245:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "1237:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:16:7"
									},
									"src": "1216:37:7"
								},
								{
									"anonymous": false,
									"eventSelector": "de2d0064b82669942e6a9cff523014473c366efc3cf147b14e0b1f4cbecc4bc8",
									"id": 1101,
									"name": "RewardParametersInitialized",
									"nameLocation": "1264:27:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"indexed": false,
												"mutability": "mutable",
												"name": "initialRewardRate",
												"nameLocation": "1309:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "1301:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1301:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"indexed": false,
												"mutability": "mutable",
												"name": "stablecoin",
												"nameLocation": "1344:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "1336:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1291:69:7"
									},
									"src": "1258:103:7"
								},
								{
									"constant": true,
									"functionSelector": "4f0dbaf2",
									"id": 1104,
									"mutability": "constant",
									"name": "PLAY_TO_EARN",
									"nameLocation": "1391:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1426,
									"src": "1367:89:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1102,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1367:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307864443837306641316237433437303046324244376634343233383832314332366637333932313438",
										"id": 1103,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1414:42:7",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xdD870fA1b7C4700F2BD7f44238821C26f7392148"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2cca9dfd",
									"id": 1107,
									"mutability": "constant",
									"name": "LIQUIDITY_POOL",
									"nameLocation": "1486:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1426,
									"src": "1462:91:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1105,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1462:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307835383330333144313131336144343134463032353736424436616661426662333032313430323235",
										"id": 1106,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1511:42:7",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x583031D1113aD414F02576BD6afaBfb302140225"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "df7f989f",
									"id": 1110,
									"mutability": "constant",
									"name": "TEAM_AND_DEVELOPMENT",
									"nameLocation": "1583:20:7",
									"nodeType": "VariableDeclaration",
									"scope": 1426,
									"src": "1559:97:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1108,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1559:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307834423038393762303531336664433743353431423664394437453932394334653533363444326442",
										"id": 1109,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1614:42:7",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x4B0897b0513fdC7C541B6d9D7E929C4e5364D2dB"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ba115cb6",
									"id": 1113,
									"mutability": "constant",
									"name": "COMMUNITY_GROWTH_AND_MARKETING",
									"nameLocation": "1686:30:7",
									"nodeType": "VariableDeclaration",
									"scope": 1426,
									"src": "1662:107:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1111,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1662:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307831343732334130394143666636443241363044636446376141344146663330384644444331363043",
										"id": 1112,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1727:42:7",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x14723A09ACff6D2A60DcdF7aA4AFf308FDDC160C"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "56bf536c",
									"id": 1116,
									"mutability": "constant",
									"name": "STRADEGIC_RESERVE",
									"nameLocation": "1799:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 1426,
									"src": "1775:94:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1114,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1775:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307843413335623764393135343538454635343061446536303638644665324634344538666137333363",
										"id": 1115,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1827:42:7",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xCA35b7d915458EF540aDe6068dFe2F44E8fa733c"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b0a65b3e",
									"id": 1119,
									"mutability": "constant",
									"name": "ICO_ALLOCATION",
									"nameLocation": "1899:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1426,
									"src": "1875:91:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1117,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1875:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830413039384564613031436539326666344134434362374134664646623541343345424337304443",
										"id": 1118,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1924:42:7",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1197,
										"nodeType": "Block",
										"src": "2147:535:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1133,
															"name": "PLAY_TO_EARN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "2163:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_450000000000000000000000000_by_1",
																"typeString": "int_const 450000000000000000000000000"
															},
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3435305f3030305f303030",
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2177:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_450000000_by_1",
																	"typeString": "int_const 450000000"
																},
																"value": "450_000_000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 1135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2192:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"hexValue": "3138",
																			"id": 1136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2196:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18_by_1",
																				"typeString": "int_const 18"
																			},
																			"value": "18"
																		},
																		"src": "2192:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	}
																],
																"id": 1138,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2191:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "2177:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_450000000000000000000000000_by_1",
																"typeString": "int_const 450000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_450000000000000000000000000_by_1",
																"typeString": "int_const 450000000000000000000000000"
															}
														],
														"id": 1132,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "2157:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2157:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "2157:43:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1143,
															"name": "_pairLiquidityPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "2222:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_150000000000000000000000000_by_1",
																"typeString": "int_const 150000000000000000000000000"
															},
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3135305f3030305f303030",
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2242:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_150000000_by_1",
																	"typeString": "int_const 150000000"
																},
																"value": "150_000_000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 1145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2257:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"hexValue": "3138",
																			"id": 1146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2261:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18_by_1",
																				"typeString": "int_const 18"
																			},
																			"value": "18"
																		},
																		"src": "2257:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	}
																],
																"id": 1148,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2256:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "2242:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_150000000000000000000000000_by_1",
																"typeString": "int_const 150000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_150000000000000000000000000_by_1",
																"typeString": "int_const 150000000000000000000000000"
															}
														],
														"id": 1142,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "2216:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2216:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1151,
												"nodeType": "ExpressionStatement",
												"src": "2216:49:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1153,
															"name": "COMMUNITY_GROWTH_AND_MARKETING",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "2357:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_25000000000000000000000000_by_1",
																"typeString": "int_const 25000000000000000000000000"
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_2500000000000000000000000000_by_1",
																			"typeString": "int_const 2500000000000000000000000000"
																		},
																		"id": 1161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
																				"typeString": "int_const 100000000000000000000000000"
																			},
																			"id": 1159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130305f3030305f303030",
																				"id": 1154,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2390:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				},
																				"value": "100_000_000"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						},
																						"id": 1157,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "3130",
																							"id": 1155,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2405:2:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10_by_1",
																								"typeString": "int_const 10"
																							},
																							"value": "10"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "**",
																						"rightExpression": {
																							"hexValue": "3138",
																							"id": 1156,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2409:2:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_18_by_1",
																								"typeString": "int_const 18"
																							},
																							"value": "18"
																						},
																						"src": "2405:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						}
																					}
																				],
																				"id": 1158,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2404:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				}
																			},
																			"src": "2390:22:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
																				"typeString": "int_const 100000000000000000000000000"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3235",
																			"id": 1160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2415:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_25_by_1",
																				"typeString": "int_const 25"
																			},
																			"value": "25"
																		},
																		"src": "2390:27:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2500000000000000000000000000_by_1",
																			"typeString": "int_const 2500000000000000000000000000"
																		}
																	}
																],
																"id": 1162,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2389:30:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2500000000000000000000000000_by_1",
																	"typeString": "int_const 2500000000000000000000000000"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "313030",
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2420:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "2389:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_25000000000000000000000000_by_1",
																"typeString": "int_const 25000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_25000000000000000000000000_by_1",
																"typeString": "int_const 25000000000000000000000000"
															}
														],
														"id": 1152,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "2351:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2351:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1166,
												"nodeType": "ExpressionStatement",
												"src": "2351:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1168,
															"name": "STRADEGIC_RESERVE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "2468:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
																"typeString": "int_const 100000000000000000000000000"
															},
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130305f3030305f303030",
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2487:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"value": "100_000_000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"id": 1172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 1170,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2502:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"hexValue": "3138",
																			"id": 1171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2506:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18_by_1",
																				"typeString": "int_const 18"
																			},
																			"value": "18"
																		},
																		"src": "2502:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	}
																],
																"id": 1173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2501:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "2487:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
																"typeString": "int_const 100000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
																"typeString": "int_const 100000000000000000000000000"
															}
														],
														"id": 1167,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "2462:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2462:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1176,
												"nodeType": "ExpressionStatement",
												"src": "2462:48:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1178,
															"name": "ICO_ALLOCATION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "2532:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
																"typeString": "int_const 100000000000000000000000000"
															},
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130305f3030305f303030",
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2548:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"value": "100_000_000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 1180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2563:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"hexValue": "3138",
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2567:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18_by_1",
																				"typeString": "int_const 18"
																			},
																			"value": "18"
																		},
																		"src": "2563:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	}
																],
																"id": 1183,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2562:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "2548:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
																"typeString": "int_const 100000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
																"typeString": "int_const 100000000000000000000000000"
															}
														],
														"id": 1177,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "2526:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2526:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "2526:45:7"
											},
											{
												"expression": {
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1187,
														"name": "teamStartTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "2588:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1188,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2609:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2615:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2609:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2588:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "2588:36:7"
											},
											{
												"expression": {
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1192,
														"name": "marketingStartTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "2634:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1193,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2660:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2666:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2660:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2634:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1196,
												"nodeType": "ExpressionStatement",
												"src": "2634:41:7"
											}
										]
									},
									"id": 1198,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1124,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2107:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2111:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2107:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1126,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1123,
												"name": "Ownable",
												"nameLocations": [
													"2099:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2099:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2099:19:7"
										},
										{
											"arguments": [
												{
													"hexValue": "584f524120546f6b656e",
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2125:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_05f27dddd4232d76e7c6348369676ae296347aec48f84f3dc443ed1b0b768fef",
														"typeString": "literal_string \"XORA Token\""
													},
													"value": "XORA Token"
												},
												{
													"hexValue": "584f5241",
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2139:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_350180050b70465d9af8a0cd8706f70a021a6c5d9588ab536b61b473e8e951f1",
														"typeString": "literal_string \"XORA\""
													},
													"value": "XORA"
												}
											],
											"id": 1130,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1127,
												"name": "ERC20",
												"nameLocations": [
													"2119:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 864,
												"src": "2119:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2119:27:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "_pairLiquidityPool",
												"nameLocation": "2079:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "2071:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2071:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2070:28:7"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2147:0:7"
									},
									"scope": 1426,
									"src": "2059:623:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "2749:581:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1206,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2767:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2773:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2767:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1208,
																	"name": "teamStartTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1035,
																	"src": "2786:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1209,
																	"name": "TEAM_CLIFF",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1040,
																	"src": "2807:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2786:31:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2767:50:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5465616d2076657374696e6720636c696666206e6f742072656163686564",
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2819:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34530ebdb5a42e16e6038e9e978022f0bb2a52fd5e9c2ee90e61fbc64c16fa9",
																"typeString": "literal_string \"Team vesting cliff not reached\""
															},
															"value": "Team vesting cliff not reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34530ebdb5a42e16e6038e9e978022f0bb2a52fd5e9c2ee90e61fbc64c16fa9",
																"typeString": "literal_string \"Team vesting cliff not reached\""
															}
														],
														"id": 1205,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2759:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2759:93:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "2759:93:7"
											},
											{
												"assignments": [
													1216
												],
												"declarations": [
													{
														"constant": false,
														"id": 1216,
														"mutability": "mutable",
														"name": "elapsedTime",
														"nameLocation": "2870:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1263,
														"src": "2862:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1215,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2862:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1224,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1217,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2884:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2890:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2884:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1219,
																	"name": "teamStartTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1035,
																	"src": "2903:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1220,
																	"name": "TEAM_CLIFF",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1040,
																	"src": "2924:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2903:31:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1222,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2902:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2884:51:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2862:73:7"
											},
											{
												"assignments": [
													1226
												],
												"declarations": [
													{
														"constant": false,
														"id": 1226,
														"mutability": "mutable",
														"name": "vestedAmount",
														"nameLocation": "2953:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1263,
														"src": "2945:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1225,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2945:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1233,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1227,
																	"name": "teamAllocated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1066,
																	"src": "2969:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1228,
																	"name": "elapsedTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1216,
																	"src": "2985:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2969:27:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1230,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2968:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1231,
														"name": "TEAM_VESTING_PERIOD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "3000:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2968:51:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2945:74:7"
											},
											{
												"assignments": [
													1235
												],
												"declarations": [
													{
														"constant": false,
														"id": 1235,
														"mutability": "mutable",
														"name": "teamAmount",
														"nameLocation": "3037:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1263,
														"src": "3029:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1234,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3029:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1239,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1236,
														"name": "vestedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1226,
														"src": "3050:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1237,
														"name": "releasedTeamAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "3065:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3050:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3029:54:7"
											},
											{
												"expression": {
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1240,
														"name": "releasedTeamAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "3093:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1241,
														"name": "teamAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "3115:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3093:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "3093:32:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1245,
																"name": "vestedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "3143:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1246,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3158:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3143:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e7320617661696c61626c6520666f722072656c65617365",
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3161:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cabf40c40e6f36bda09a3c5c985256e9c4ec41609ce08329fbfb3b76b478665c",
																"typeString": "literal_string \"No tokens available for release\""
															},
															"value": "No tokens available for release"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cabf40c40e6f36bda09a3c5c985256e9c4ec41609ce08329fbfb3b76b478665c",
																"typeString": "literal_string \"No tokens available for release\""
															}
														],
														"id": 1244,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3135:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3135:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1250,
												"nodeType": "ExpressionStatement",
												"src": "3135:60:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1252,
																"name": "releasedTeamAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1068,
																"src": "3213:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1253,
																"name": "teamAllocated",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1066,
																"src": "3235:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3213:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d617820746f6b656e206c696d69742072656163686564",
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3249:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a4f247bcec9e225b0d93cc4c24757f4cdd2d66b299970369f4e497bf5fc471a1",
																"typeString": "literal_string \"max token limit reached\""
															},
															"value": "max token limit reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a4f247bcec9e225b0d93cc4c24757f4cdd2d66b299970369f4e497bf5fc471a1",
																"typeString": "literal_string \"max token limit reached\""
															}
														],
														"id": 1251,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3205:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3205:70:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "3205:70:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1259,
															"name": "TEAM_AND_DEVELOPMENT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "3291:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1260,
															"name": "teamAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "3312:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1258,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "3285:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3285:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1262,
												"nodeType": "ExpressionStatement",
												"src": "3285:38:7"
											}
										]
									},
									"functionSelector": "14c411c7",
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1201,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1200,
												"name": "onlyOwner",
												"nameLocations": [
													"2726:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2726:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2726:9:7"
										},
										{
											"id": 1203,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1202,
												"name": "nonReentrant",
												"nameLocations": [
													"2736:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "2736:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2736:12:7"
										}
									],
									"name": "releaseTeamTokens",
									"nameLocation": "2697:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2714:2:7"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2749:0:7"
									},
									"scope": 1426,
									"src": "2688:642:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1316,
										"nodeType": "Block",
										"src": "3400:519:7",
										"statements": [
											{
												"assignments": [
													1272
												],
												"declarations": [
													{
														"constant": false,
														"id": 1272,
														"mutability": "mutable",
														"name": "elapsedTime",
														"nameLocation": "3418:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1316,
														"src": "3410:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1271,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3410:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1277,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1273,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3432:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3438:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3432:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1275,
														"name": "marketingStartTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "3450:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3432:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3410:63:7"
											},
											{
												"assignments": [
													1279
												],
												"declarations": [
													{
														"constant": false,
														"id": 1279,
														"mutability": "mutable",
														"name": "vestedAmount",
														"nameLocation": "3491:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1316,
														"src": "3483:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1278,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3483:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1286,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1280,
																	"name": "marketingAllocated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1081,
																	"src": "3507:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1281,
																	"name": "elapsedTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "3528:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3507:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1283,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3506:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1284,
														"name": "MARKETING_VESTING_PERIOD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "3541:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3506:59:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3483:82:7"
											},
											{
												"assignments": [
													1288
												],
												"declarations": [
													{
														"constant": false,
														"id": 1288,
														"mutability": "mutable",
														"name": "marketingAmount",
														"nameLocation": "3583:15:7",
														"nodeType": "VariableDeclaration",
														"scope": 1316,
														"src": "3575:23:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1287,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3575:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1292,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1289,
														"name": "vestedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "3601:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1290,
														"name": "releasedMarketingAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "3616:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3601:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3575:64:7"
											},
											{
												"expression": {
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1293,
														"name": "releasedMarketingAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "3649:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1294,
														"name": "marketingAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1288,
														"src": "3676:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3649:42:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1296,
												"nodeType": "ExpressionStatement",
												"src": "3649:42:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1298,
																"name": "vestedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1279,
																"src": "3709:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3724:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3709:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f20746f6b656e20617661696c61626c6520666f722072656c65617365",
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3726:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8f41b7cdbd41efdc278b6e699169b223e8bf648dc2dd642e2ad288da5ffc97a4",
																"typeString": "literal_string \"no token available for release\""
															},
															"value": "no token available for release"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8f41b7cdbd41efdc278b6e699169b223e8bf648dc2dd642e2ad288da5ffc97a4",
																"typeString": "literal_string \"no token available for release\""
															}
														],
														"id": 1297,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3701:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3701:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1303,
												"nodeType": "ExpressionStatement",
												"src": "3701:58:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1305,
																"name": "releasedMarketingAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "3777:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1306,
																"name": "marketingAllocated",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1081,
																"src": "3804:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3777:45:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d617820746f6b656e20696d69742072656163686564",
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3823:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a5274ccc4c50c7a89b0ec1936586b74d88d243fdb846199e4e01b0dce82ee867",
																"typeString": "literal_string \"max token imit reached\""
															},
															"value": "max token imit reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a5274ccc4c50c7a89b0ec1936586b74d88d243fdb846199e4e01b0dce82ee867",
																"typeString": "literal_string \"max token imit reached\""
															}
														],
														"id": 1304,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3769:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3769:79:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "3769:79:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1312,
															"name": "COMMUNITY_GROWTH_AND_MARKETING",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "3864:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1313,
															"name": "marketingAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "3895:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1311,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "3858:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3858:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "3858:53:7"
											}
										]
									},
									"functionSelector": "dc31adee",
									"id": 1317,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1267,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1266,
												"name": "onlyOwner",
												"nameLocations": [
													"3378:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3378:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3378:9:7"
										},
										{
											"id": 1269,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1268,
												"name": "nonReentrant",
												"nameLocations": [
													"3388:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "3388:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3388:12:7"
										}
									],
									"name": "releaseMarketingTokens",
									"nameLocation": "3344:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3366:2:7"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3400:0:7"
									},
									"scope": 1426,
									"src": "3335:584:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1346,
										"nodeType": "Block",
										"src": "4051:208:7",
										"statements": [
											{
												"expression": {
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1326,
														"name": "rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1030,
														"src": "4061:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1327,
														"name": "_initialRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "4074:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4061:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1329,
												"nodeType": "ExpressionStatement",
												"src": "4061:31:7"
											},
											{
												"expression": {
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1330,
														"name": "stablecoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "4102:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$942",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1332,
																"name": "_stablecoin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1321,
																"src": "4122:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1331,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "4115:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$942_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4115:19:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$942",
															"typeString": "contract IERC20"
														}
													},
													"src": "4102:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$942",
														"typeString": "contract IERC20"
													}
												},
												"id": 1335,
												"nodeType": "ExpressionStatement",
												"src": "4102:32:7"
											},
											{
												"expression": {
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1336,
														"name": "lastHalvingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "4144:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1337,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4162:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4168:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4162:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4144:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1340,
												"nodeType": "ExpressionStatement",
												"src": "4144:33:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1342,
															"name": "_initialRewardRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "4220:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1343,
															"name": "_stablecoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "4240:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1341,
														"name": "RewardParametersInitialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1101,
														"src": "4192:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1345,
												"nodeType": "EmitStatement",
												"src": "4187:65:7"
											}
										]
									},
									"functionSelector": "926165d7",
									"id": 1347,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1324,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1323,
												"name": "onlyOwner",
												"nameLocations": [
													"4041:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4041:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4041:9:7"
										}
									],
									"name": "initializeRewardParameters",
									"nameLocation": "3934:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "_initialRewardRate",
												"nameLocation": "3978:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "3970:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3970:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "_stablecoin",
												"nameLocation": "4014:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "4006:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3960:71:7"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4051:0:7"
									},
									"scope": 1426,
									"src": "3925:334:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1375,
										"nodeType": "Block",
										"src": "4333:255:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1351,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4364:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4370:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4364:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1353,
																	"name": "lastHalvingTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1028,
																	"src": "4383:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1354,
																	"name": "HALVING_PERIOD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1033,
																	"src": "4401:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4383:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4364:51:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "48616c76696e67206e6f742064756520796574",
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4429:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e3f40b783878aa8a209031c059e17645777610e647ce5118077e34cb75f93ad",
																"typeString": "literal_string \"Halving not due yet\""
															},
															"value": "Halving not due yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e3f40b783878aa8a209031c059e17645777610e647ce5118077e34cb75f93ad",
																"typeString": "literal_string \"Halving not due yet\""
															}
														],
														"id": 1350,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4343:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4343:117:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1359,
												"nodeType": "ExpressionStatement",
												"src": "4343:117:7"
											},
											{
												"expression": {
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1360,
														"name": "rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1030,
														"src": "4471:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1361,
															"name": "rewardRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "4484:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4497:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "4484:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4471:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1365,
												"nodeType": "ExpressionStatement",
												"src": "4471:27:7"
											},
											{
												"expression": {
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1366,
														"name": "lastHalvingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "4508:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1367,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4526:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4532:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4526:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4508:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1370,
												"nodeType": "ExpressionStatement",
												"src": "4508:33:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1372,
															"name": "rewardRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "4570:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1371,
														"name": "RewardHalved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "4557:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4557:24:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1374,
												"nodeType": "EmitStatement",
												"src": "4552:29:7"
											}
										]
									},
									"functionSelector": "8b887e7e",
									"id": 1376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "halveRewards",
									"nameLocation": "4309:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4321:2:7"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4333:0:7"
									},
									"scope": 1426,
									"src": "4300:288:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										594
									],
									"body": {
										"id": 1424,
										"nodeType": "Block",
										"src": "5253:254:7",
										"statements": [
											{
												"assignments": [
													1387
												],
												"declarations": [
													{
														"constant": false,
														"id": 1387,
														"mutability": "mutable",
														"name": "taxAmount",
														"nameLocation": "5271:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1424,
														"src": "5263:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1386,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5263:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1403,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1388,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1382,
																	"src": "5284:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"id": 1394,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1389,
																					"name": "recipient",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1380,
																					"src": "5306:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"arguments": [
																						{
																							"id": 1392,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "5327:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_XORA_$1426",
																								"typeString": "contract XORA"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_XORA_$1426",
																								"typeString": "contract XORA"
																							}
																						],
																						"id": 1391,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5319:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1390,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "5319:7:7",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1393,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5319:13:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"src": "5306:26:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"id": 1396,
																				"name": "buyTax",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1023,
																				"src": "5345:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "5306:45:7",
																			"trueExpression": {
																				"id": 1395,
																				"name": "sellTax",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1026,
																				"src": "5335:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1398,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5305:47:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5284:68:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1400,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5283:70:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1401,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5356:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "5283:76:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5263:96:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1407,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "5385:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1408,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "5393:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1409,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "5404:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1410,
																"name": "taxAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1387,
																"src": "5413:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5404:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1404,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "5369:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_XORA_$1426_$",
																"typeString": "type(contract super XORA)"
															}
														},
														"id": 1406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5375:9:7",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 594,
														"src": "5369:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5369:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1413,
												"nodeType": "ExpressionStatement",
												"src": "5369:54:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1414,
														"name": "taxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1387,
														"src": "5437:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5449:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5437:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1423,
												"nodeType": "IfStatement",
												"src": "5433:68:7",
												"trueBody": {
													"id": 1422,
													"nodeType": "Block",
													"src": "5452:49:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1418,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1378,
																		"src": "5472:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1419,
																		"name": "taxAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1387,
																		"src": "5480:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1417,
																	"name": "_burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "5466:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5466:24:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1421,
															"nodeType": "ExpressionStatement",
															"src": "5466:24:7"
														}
													]
												}
											}
										]
									},
									"id": 1425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5144:9:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1384,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5244:8:7"
									},
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5171:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "5163:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5163:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5195:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "5187:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5187:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5222:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "5214:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5214:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5153:81:7"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5253:0:7"
									},
									"scope": 1426,
									"src": "5135:372:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1427,
							"src": "231:5278:7",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								876,
								885,
								1087,
								1091,
								1095,
								1101
							]
						}
					],
					"src": "32:5478:7"
				},
				"id": 7
			}
		}
	}
}